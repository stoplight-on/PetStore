openapi: 3.0.0
info:
  description: The Digital Banking REST services provide access to key services within the platform.
  title: The Digital Banking Client REST API
  version: 21.12.0
servers:
  - url: http://localhost:8081/rest
paths:
  /accessService/hasAccess:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Output type
      tags:
        - accessService
      operationId: postAccessServiceHasAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
        required: true
      summary: Retrieves boolean to indicate Access availability
  /accessService/hasEntitlements:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementsResponse'
          description: Output type
      tags:
        - accessService
      operationId: postAccessServiceHasEntitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementsRequest'
        required: true
      summary: Retrieves boolean for each requested action indicating if access is allowed
  /accountGroups/readAll:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManyItemsWithChildren'
          description: Output type
      tags:
        - accountGroups
      operationId: postAccountGroupsReadAll
      requestBody:
        $ref: '#/components/requestBodies/ReadAllFilterRequest'
      summary: Read multiple account groups with accounts
  /accountGroups/update:
    post:
      responses:
        '200':
          description: OK
      tags:
        - accountGroups
      operationId: postAccountGroupsUpdate
      requestBody:
        $ref: '#/components/requestBodies/ManyItemsWithChildren'
      summary: Save multiple account groups with accounts
  /accountSummaryWidget/getAccountSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSummaryResponse'
          description: Output type
      tags:
        - accountSummaryWidget
      operationId: postAccountSummaryWidgetGetAccountSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountSummaryRequest'
        required: true
      summary: Account Summary Widget Get Account Summary Request
  /accountSummaryWidget/getDefaults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultsResponse'
          description: Output type
      tags:
        - accountSummaryWidget
      operationId: postAccountSummaryWidgetGetDefaults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDefaultsRequest'
        required: true
      summary: Get Account Summary Widget Defaults request
  /accountSummaryWidget/readConfiguration:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadConfigurationResponse'
          description: Output type
      tags:
        - accountSummaryWidget
      operationId: postAccountSummaryWidgetReadConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadConfigurationRequest'
        required: true
      summary: Account Summary Widget Read Configuration Request
  /accountSummaryWidget/saveConfiguration:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveConfigurationResponse'
          description: Output type
      tags:
        - accountSummaryWidget
      operationId: postAccountSummaryWidgetSaveConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveConfigurationRequest'
        required: true
      summary: Account Summary Widget Save Configuration Request
  /achControlTotalMaintenance/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - achControlTotalMaintenance
      operationId: postAchControlTotalMaintenanceGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions
  /achControlTotalMaintenance/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - achControlTotalMaintenance
      operationId: postAchControlTotalMaintenanceGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get ACH Control List View
  /achControlTotalMaintenance/listView/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - achControlTotalMaintenance
      operationId: postAchControlTotalMaintenanceListViewDelete
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Delete Control Totals from List View
  /achControlTotalMaintenance/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - achControlTotalMaintenance
      operationId: postAchControlTotalMaintenance{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: User Actions for inserting control total
  /achWarehouseInquiry/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - achWarehouseInquiry
      operationId: postAchWarehouseInquiryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get ACH Warehouse Inquiry Entitled Actions List
  /achWarehouseInquiry/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - achWarehouseInquiry
      operationId: postAchWarehouseInquiryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get ACH Warehouse Inquiry List View
  /achWarehouseInquiry/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - achWarehouseInquiry
      operationId: postAchWarehouseInquiryGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Ach Warehouse Inquiry Model Info
  /achWarehouseInquiry/getSettlementAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - achWarehouseInquiry
      operationId: postAchWarehouseInquiryGetSettlementAccounts
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get Settlement Accounts
  /achWarehouseInquiry/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - achWarehouseInquiry
      operationId: postAchWarehouseInquiry{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: ' Actions for Warehouse Inquiry'
  /advanceFilter/getFilterCriteria:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFilterCriteriaResponse'
          description: Output type
      tags:
        - advanceFilter
      operationId: postAdvanceFilterGetFilterCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFilterCriteriaRequest'
        required: true
      summary: 'Get Filter Criteria info list '
  /advanceFilter/getFilterFields:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFilterFieldsResponse'
          description: Output type
      tags:
        - advanceFilter
      operationId: postAdvanceFilterGetFilterFields
      requestBody:
        $ref: '#/components/requestBodies/GetFilterFieldsRequest'
      summary: Get the set of filter fields for a filter ID
  /advanceFilter/getLookupResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupListViewResponse'
          description: Output type
      tags:
        - advanceFilter
      operationId: postAdvanceFilterGetLookupResults
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: get inquiry inforamtion , used by lookups
  /alerts/detailMaint/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsDetailMaintGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Detail Maint Alerts Entitled Actions
  /alerts/detailMaint/getLookupResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupListViewResponse'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsDetailMaintGetLookupResults
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: get inquiry information , used by lookups
  /alerts/detailMaint/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsDetailMaintGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Alerts Model Info
  /alerts/detailMaint/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsDetailMaintGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Detail Maint Alerts Query Results
  /alerts/detailMaint/getRecipients:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipients'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsDetailMaintGetRecipients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipientsRequest'
        required: true
      summary: Get recipient detail contact information
  /alerts/detailMaint/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - alerts
      operationId: postAlertsDetailMaint{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsRequest'
        required: true
      summary: Perform an action on a alert Record. Valid actions are - read, insert, update
  /alerts/listView/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsListViewDelete
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Delete Alerts List View
  /alerts/listView/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsListViewGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Alerts Entitled Actions
  /alerts/listView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - alerts
      operationId: postAlertsListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Alerts List View
  /analyticsServer/getSettings:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsServiceSettings'
          description: Output type
      tags:
        - analyticsServer
      operationId: getAnalyticsServerGetSettings
      summary: Returns information about the Analytics Server (JWT token, data collector URL, tenant id)
  /audit/detailAuditListView/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - audit
      operationId: postAuditDetailAuditListViewGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Audit Entitled Actions
  /audit/detailAuditListView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - audit
      operationId: postAuditDetailAuditListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Detail Payment and Template Audit Log
  /audit/export/listview:
    get:
      responses:
        '200':
          description: OK
      tags:
        - audit
      operationId: getAuditExportListview
      summary: 'Bank admin audit rest service for Client Maint audit '
  /audit/listView/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - audit
      operationId: postAuditListViewGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Audit Entitled Actions
  /audit/listView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - audit
      operationId: postAuditListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Consolidated Audit Log
  /baiExport/downloadExport/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - baiExport
      operationId: postBaiExportDownloadExportGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Entitled Actions
  /baiExport/downloadExport/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - baiExport
      operationId: postBaiExportDownloadExportGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get BAI Export List View
  /baiExport/downloadExport/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - baiExport
      operationId: postBaiExportDownloadExportGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Export Model Info
  /baiExport/downloadExport/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - baiExport
      operationId: postBaiExportDownloadExportGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Export Query Results
  /baiExport/downloadExport/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - baiExport
      operationId: postBaiExportDownloadExport{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on a User Record. Valid actions are - read, delete, approve, unapprove
  /balanceAndTransaction/accountSummary/getAccountSections/{tabId}:
    post:
      parameters:
        - in: path
          name: tabId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionAccountSummaryGetAccountSections{tabId}
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      summary: Has Deposit/Loan Account Access
  /balanceAndTransaction/cashPosition/summary/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCashPositionSummaryExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a BTR cash position list view export to be run.  Waits up to configured threshold for export to finish.
  /balanceAndTransaction/combinedAccounts/accountReportView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction/combinedAccounts
      operationId: postBalanceAndTransactionCombinedAccountsAccountReportView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountViewRequest'
        required: true
      summary: Single Account Report View
  /balanceAndTransaction/combinedAccounts/getBalancesGroupedByCurrency:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCombinedAccountsGetBalancesGroupedByCurrency
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get account balances grouped by the currency
  /balanceAndTransaction/combinedAccounts/getBalancesListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCombinedAccountsGetBalancesListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get account balances
  /balanceAndTransaction/combinedAccounts/getTransactionSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCombinedAccountsGetTransactionSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get transaction summary totals
  /balanceAndTransaction/combinedAccounts/getTransactionSummaryGroupedByAccount:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCombinedAccountsGetTransactionSummaryGroupedByAccount
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get transaction summary grouped by account
  /balanceAndTransaction/combinedAccounts/getTransactionSummaryTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCombinedAccountsGetTransactionSummaryTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get transaction summary totals
  /balanceAndTransaction/combinedAccounts/reportView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction/combinedAccounts
      operationId: postBalanceAndTransactionCombinedAccountsReportView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportViewRequest'
        required: true
      summary: Combined Accounts Report View
  /balanceAndTransaction/creditCardAccounts/ALLACCOUNTS/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsALLACCOUNTSAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/ALLACCOUNTS/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsALLACCOUNTSAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/ALLACCOUNTS/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsALLACCOUNTSAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Accounts Summary List View
  /balanceAndTransaction/creditCardAccounts/ALLACCOUNTS/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsALLACCOUNTSAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/ALLACCOUNTS/accountSummary/getSingleAcctGroupTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsALLACCOUNTSAccountSummaryGetSingleAcctGroupTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/CURRDAY/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsCURRDAYAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Current Day Summary List View
  /balanceAndTransaction/creditCardAccounts/CURRDAY/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsCURRDAYAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/PRIORDAY/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPRIORDAYAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/PRIORDAY/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPRIORDAYAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/PRIORDAY/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPRIORDAYAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Previous Day Summary List View
  /balanceAndTransaction/creditCardAccounts/PRIORDAY/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPRIORDAYAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Previous Day Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/PRIORDAY/accountSummary/getSingleAcctGroupTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPRIORDAYAccountSummaryGetSingleAcctGroupTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Totals
  /balanceAndTransaction/creditCardAccounts/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of credit card accounts List View
  /balanceAndTransaction/creditCardAccounts/accountSummary/getListViewBalanceColumns:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsAccountSummaryGetListViewBalanceColumns
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Accounts Balance Columns
  /balanceAndTransaction/creditCardAccounts/accountSummary/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsAccountSummaryGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Transaction Summary Totals
  /balanceAndTransaction/creditCardAccounts/accountSummary/requestRealTimeBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsAccountSummaryRequestRealTimeBalances
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Balances for Deposit Accounts
  /balanceAndTransaction/creditCardAccounts/currentDay/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsCurrentDayGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Credit Card Transaction Summary Totals
  /balanceAndTransaction/creditCardAccounts/currentDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsCurrentDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Transactions List View
  /balanceAndTransaction/creditCardAccounts/currentDay/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsCurrentDayTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of credit card accounts current day transactions List View
  /balanceAndTransaction/creditCardAccounts/getTransactions/checkRealTimeResponse:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsGetTransactionsCheckRealTimeResponse
      requestBody:
        $ref: '#/components/requestBodies/postStrictBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponseBody'
      summary: Polling service for Real Time Credit Card Transactions response
  /balanceAndTransaction/creditCardAccounts/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Transactions List View
  /balanceAndTransaction/creditCardAccounts/getTransactions/requestRealTimeTransactions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsGetTransactionsRequestRealTimeTransactions
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Transactions for Credit Card Accounts
  /balanceAndTransaction/creditCardAccounts/previousDay/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPreviousDayAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of previous day credit card accounts List View
  /balanceAndTransaction/creditCardAccounts/previousDay/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPreviousDayGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Previous Day Credit Card Transaction Totals
  /balanceAndTransaction/creditCardAccounts/previousDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPreviousDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Credit Card Account Transactions List View
  /balanceAndTransaction/creditCardAccounts/previousDay/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsPreviousDayTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of credit card previous day transactions List View
  /balanceAndTransaction/creditCardAccounts/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCreditCardAccountsTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of credit card transactions List View
  /balanceAndTransaction/customReporting/getRealTimeInformation:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionCustomReportingGetRealTimeInformation
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Make Real-time balance and transaction call
  /balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Summary List View
  /balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getSingleAcctGroupTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetSingleAcctGroupTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/CASHPOSITION/accountSummary/getCashPositionBalSumTotals/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONAccountSummaryGetCashPositionBalSumTotalsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Cash Position Summary Balance Totals
  /balanceAndTransaction/depositAccounts/CASHPOSITION/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Cash Position Placemat Summary List View
  /balanceAndTransaction/depositAccounts/CASHPOSITION/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/CASHPOSITION/accountSummary/getRealTimeInformation:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONAccountSummaryGetRealTimeInformation
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Cash Position Account Summary Real Time Information
  /balanceAndTransaction/depositAccounts/CASHPOSITION/accountSummary/getTransactionSummInfo/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONAccountSummaryGetTransactionSummInfoGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Cash Position Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/CASHPOSITION/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /balanceAndTransaction/depositAccounts/CASHPOSITION/transactions/getTransactionSummInfo/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOSITIONTransactionsGetTransactionSummInfoGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Cash Position Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/CASHPOS_GIRTRN_I/accountSummary/getCashPositionBalSumTotals/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOS_GIRTRN_IAccountSummaryGetCashPositionBalSumTotalsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Cash Position Summary Balance Totals
  /balanceAndTransaction/depositAccounts/CASHPOS_GIRTRN_I/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOS_GIRTRN_IAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Deposit Accounts Cash Position Placemat Summary List View
  /balanceAndTransaction/depositAccounts/CASHPOS_GIRTRN_I/accountSummary/getRealTimeInformation:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOS_GIRTRN_IAccountSummaryGetRealTimeInformation
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Cash Position Account Summary Real Time Information
  /balanceAndTransaction/depositAccounts/CASHPOS_GIRTRN_I/accountSummary/getTransactionSummInfo/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOS_GIRTRN_IAccountSummaryGetTransactionSummInfoGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Cash Position Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/CASHPOS_GIRTRN_I/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOS_GIRTRN_IGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Deposit Account Transactions List View
  /balanceAndTransaction/depositAccounts/CASHPOS_GIRTRN_I/transactions/getTransactionSummInfo/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCASHPOS_GIRTRN_ITransactionsGetTransactionSummInfoGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Cash Position Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/CURRDAY/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCURRDAYAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Current Day Summary List View
  /balanceAndTransaction/depositAccounts/CURRDAY/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCURRDAYAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/PRIORDAY/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPRIORDAYAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/PRIORDAY/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPRIORDAYAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/PRIORDAY/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPRIORDAYAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Previous Day Summary List View
  /balanceAndTransaction/depositAccounts/PRIORDAY/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPRIORDAYAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/PRIORDAY/accountSummary/getSingleAcctGroupTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPRIORDAYAccountSummaryGetSingleAcctGroupTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /balanceAndTransaction/depositAccounts/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of deposit account previous day account groups List View
  /balanceAndTransaction/depositAccounts/accountSummary/directConnect/getAccountAccess:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryDirectConnectGetAccountAccess
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Has Deposit/Loan Direct Connect Account Access
  /balanceAndTransaction/depositAccounts/accountSummary/directConnect/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryDirectConnectGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Summary List View For Direct Connect
  /balanceAndTransaction/depositAccounts/accountSummary/getAccountAccess:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetAccountAccess
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Has Deposit/Loan Account Access
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedAccountGroupTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedAccountGroupTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Account Group Totals
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedAccountGroupTotals_PD:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedAccountGroupTotals_PD
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Account Group Totals
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedAccountSummaryForGroup:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedAccountSummaryForGroup
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Account Summary For Group
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedAccountSummaryForGroup_PD:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedAccountSummaryForGroup_PD
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Account Group Totals
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedUngroupedAccountSummaryTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedUngroupedAccountSummaryTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Ungrouped Account Summary Totals
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedUngroupedAccountSummaryTotals_PD:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedUngroupedAccountSummaryTotals_PD
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Account Group Totals
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedUngroupedAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedUngroupedAccounts
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Ungrouped Account List
  /balanceAndTransaction/depositAccounts/accountSummary/getCombinedUngroupedAccounts_PD:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedUngroupedAccounts_PD
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Ungrouped Account List
  /balanceAndTransaction/depositAccounts/accountSummary/getCustomReportingTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetCustomReportingTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/accountSummary/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Deposit Accounts Summary Entitled Actions
  /balanceAndTransaction/depositAccounts/accountSummary/getListViewBalanceColumns:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetListViewBalanceColumns
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Balance Columns
  /balanceAndTransaction/depositAccounts/accountSummary/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/accountSummary/requestRealTimeBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsAccountSummaryRequestRealTimeBalances
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Balances for Deposit Accounts
  /balanceAndTransaction/depositAccounts/byEntitlements/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsByEntitlementsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Gets a list of accounts that can be filtered by the accounts by user
  /balanceAndTransaction/depositAccounts/byLocationEntitlements/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsByLocationEntitlementsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Gets a list of accounts that can be filtered by the accounts associated location name
  /balanceAndTransaction/depositAccounts/cashPosition/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCashPositionTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of the cash position deposit transactions List View
  /balanceAndTransaction/depositAccounts/currentDay/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCurrentDayGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/currentDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCurrentDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /balanceAndTransaction/depositAccounts/currentDay/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsCurrentDayTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of deposit accounts current day transactions List View
  /balanceAndTransaction/depositAccounts/getAdviceDetails/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetAdviceDetailsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Deposit Accounts Summary Entitled Actions
  /balanceAndTransaction/depositAccounts/getAdviceDetails/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetAdviceDetailsGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Transaction Advice Details Model Info
  /balanceAndTransaction/depositAccounts/getAdviceDetails/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetAdviceDetailsRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Read Transaction Advice Details
  /balanceAndTransaction/depositAccounts/getCombinedReportingTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetCombinedReportingTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Custom Reporting Transactions List View
  /balanceAndTransaction/depositAccounts/getSearchTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetSearchTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /balanceAndTransaction/depositAccounts/getTransactions/checkRealTimeResponse:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponse
      requestBody:
        $ref: '#/components/requestBodies/postStrictBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponseBody'
      summary: Polling service for Real Time Transactions response
  /balanceAndTransaction/depositAccounts/getTransactions/directConnect/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetTransactionsDirectConnectGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View For Direct Connect
  /balanceAndTransaction/depositAccounts/getTransactions/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetTransactionsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Deposit Account Transactions Entitled Actions
  /balanceAndTransaction/depositAccounts/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /balanceAndTransaction/depositAccounts/getTransactions/requestRealTimeTransactions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsGetTransactionsRequestRealTimeTransactions
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Transactions for Deposit Accounts
  /balanceAndTransaction/depositAccounts/previousDay/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of deposit account previous day account groups List View
  /balanceAndTransaction/depositAccounts/previousDay/getCombinedReportingTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayGetCombinedReportingTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Custom Reporting Transactions List View for Previous Day
  /balanceAndTransaction/depositAccounts/previousDay/getCustomReportingTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayGetCustomReportingTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Previous Day Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/previousDay/getSearchTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayGetSearchTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View - Previous Day transactions only
  /balanceAndTransaction/depositAccounts/previousDay/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Previous Day Transaction Summary Totals
  /balanceAndTransaction/depositAccounts/previousDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /balanceAndTransaction/depositAccounts/previousDay/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsPreviousDayTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of deposit accounts previous day transactions List View
  /balanceAndTransaction/depositAccounts/toalocation/account/canClose:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsToalocationAccountCanClose
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Checks to see if this TOA Account can be closed
  /balanceAndTransaction/depositAccounts/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionDepositAccountsTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of deposit account transactions List View
  /balanceAndTransaction/eStatement/downloadMultipleImages:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionEStatementDownloadMultipleImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiDownloadRequest'
        required: true
      summary: download multiple eStatement Images
  /balanceAndTransaction/eStatement/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionEStatementGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get EStatement Entitled Actions
  /balanceAndTransaction/eStatement/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatementImageResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionEStatementGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get Statement Image
  /balanceAndTransaction/eStatement/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionEStatementGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: EStatement Results List View
  /balanceAndTransaction/eStatement/modelInfo:
    get:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction
      operationId: getBalanceAndTransactionEStatementModelInfo
      summary: Get the Model Info EStatement
  /balanceAndTransaction/getCurrentAccountBalance:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentAccountBalanceResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionGetCurrentAccountBalance
      requestBody:
        $ref: '#/components/requestBodies/CurrentAccountBalanceRequest'
      summary: 'Returns current account balance for an account '
  /balanceAndTransaction/getCurrentAccountBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentAccountBalancesResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionGetCurrentAccountBalances
      requestBody:
        $ref: '#/components/requestBodies/CurrentAccountBalancesRequest'
      summary: Returns current account balance for a set of accounts
  /balanceAndTransaction/getEntitledGIRTypes:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.ArrayList
                type: string
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionGetEntitledGIRTypes
      summary: Get all GIR types and entitled actions for the logged in user
  /balanceAndTransaction/imageSearch/check/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchCheckGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions for Checks Paid
  /balanceAndTransaction/imageSearch/check/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchCheckGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Results List View for Checks Paid
  /balanceAndTransaction/imageSearch/check/modelInfo:
    get:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction
      operationId: getBalanceAndTransactionImageSearchCheckModelInfo
      summary: Get the Model Info for Check Image Search
  /balanceAndTransaction/imageSearch/deposit/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchDepositGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions for Deposit Slips
  /balanceAndTransaction/imageSearch/deposit/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchDepositGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Results List View for Deposit Slips
  /balanceAndTransaction/imageSearch/deposit/modelInfo:
    get:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction
      operationId: getBalanceAndTransactionImageSearchDepositModelInfo
      summary: Get the Model Info for Deposit Image Search
  /balanceAndTransaction/imageSearch/depositItem/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchDepositItemGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions for Deposit Items
  /balanceAndTransaction/imageSearch/depositItem/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchDepositItemGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Results List View for Deposit Items
  /balanceAndTransaction/imageSearch/depositItem/modelInfo:
    get:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction
      operationId: getBalanceAndTransactionImageSearchDepositItemModelInfo
      summary: Get the Model Info for Deposit Image Search
  /balanceAndTransaction/imageSearch/return/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchReturnGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions for Returned Items
  /balanceAndTransaction/imageSearch/return/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionImageSearchReturnGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Results List View for Returned Items
  /balanceAndTransaction/imageSearch/return/modelInfo:
    get:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction
      operationId: getBalanceAndTransactionImageSearchReturnModelInfo
      summary: Get the Model Info for Returned Deposit Items Image Search
  /balanceAndTransaction/summary/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionSummaryExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a BTR summary list view export to be run.  Waits up to configured threshold for export to finish.
  /balanceAndTransaction/summary/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - balanceAndTransaction/summary/export
      operationId: getBalanceAndTransactionSummaryExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts List View
  /balanceAndTransaction/tieredLoanSubAccount/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionTieredLoanSubAccountTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of deposit account previous day account groups List View
  /balanceAndTransaction/timeOpenAccounts/previousDay/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionTimeOpenAccountsPreviousDayAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request an export of TOA previous day account groups List View
  /balanceAndTransaction/toa/closeAccount:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOACloseAccountResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionToaCloseAccount
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Close TOA account
  /balanceAndTransaction/wireReportSummary/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - balanceAndTransaction
      operationId: postBalanceAndTransactionWireReportSummaryGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Wire Report Transactions List View
  /bankAcctFilters/clientUserGrpAcct/assignAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - bankAcctFilters
      operationId: postBankAcctFiltersclientUserGrpAcctAssignAccounts
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Assign Accounts
  /bankAcctFilters/clientUserGrpAcct/listView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - bankAcctFilters
      operationId: postBankAcctFiltersclientUserGrpAcctListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Client Company Accounts List View
  /bankAcctFilters/clientUserGrpAcct/unAssignAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - bankAcctFilters
      operationId: postBankAcctFiltersclientUserGrpAcctUnAssignAccounts
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Un-Assign Accounts
  /bankAcctFilters/listView/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - bankAcctFilters
      operationId: postBankAcctFiltersListViewGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Bank Acct Filter Entitled Actions
  /bankAcctFilters/listView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - bankAcctFilters
      operationId: postBankAcctFiltersListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Bank Acct Filter List View
  /bankAcctFilters/listView/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - bankAcctFilters
      operationId: postBankAcctFiltersListViewGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Bank Acct Filter Model Info
  /batch/largeBatch/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - batch/largeBatch
      operationId: postBatchLargeBatchGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Large Batch Entitled Actions
  /batch/largeBatch/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - batch/largeBatch
      operationId: postBatchLargeBatchGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Large Batch List View
  /batch/passthru/details/{operation}:
    post:
      parameters:
        - in: path
          name: operation
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildListViewResponse'
          description: Output type
      tags:
        - batch/passthru
      operationId: postBatchPassthruDetails{operation}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildListViewRequest'
        required: true
      summary: Perform an action on an individual item. Valid actions are - add, delete, read, update
  /batch/passthru/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - batch/passthru
      operationId: postBatchPassthruGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions
  /batch/passthru/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - batch/passthru
      operationId: postBatchPassthruGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get information on the data model, e.g. required fields and validation info
  /batch/passthru/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - batch/passthru
      operationId: postBatchPassthru{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPaymentRequest'
        required: true
      summary: Perform an action on an individual item. Valid actions are - add, delete, read, update
  /batch/totals/getBatchTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchTotalsResponse'
          description: Output type
      tags:
        - batch/totals
      operationId: postBatchTotalsGetBatchTotals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchTotalsRequest'
        required: true
      summary: Get totals from the batch
  /batchPayment/getBatchSequence:
    post:
      responses:
        '200':
          description: OK
      tags:
        - batchPayment
      operationId: postBatchPaymentGetBatchSequence
      summary: Get sequence number for interacting with the batch temporary tables
  /beneAddressBook/getCompanyEntitlements:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementDataList'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookgetCompanyEntitlements
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get list of company entitlements
  /beneAddressBook/getLookupResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupListViewResponse'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookGetLookupResults
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: get inquiry information , used by lookups
  /beneAddressBook/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Bene Address Book model info
  /beneAddressBook/listView/corp/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookListViewCorpGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Beneficiary Address Entitled Actions
  /beneAddressBook/listView/corp/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookListViewCorpGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all beneficiary addresses
  /beneAddressBook/listView/corp/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookListViewCorp{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Bene Address Book from List View. Valid actions are - delete, approve and unapprove
  /beneAddressBook/paymentOperation/{getPaymentOperation}:
    post:
      parameters:
        - in: path
          name: getPaymentOperation
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressBookResponse'
          description: Output type
      tags:
        - beneAddressBook
      operationId: postBeneAddressBookPaymentOperation{getPaymentOperation}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
      summary: Perform a getPayment operation to Derive payment detail from IBAN, currency or Bank Code. Valid operations are getPaymentDetailInfo, getPaymentTypeInfo, getPaymentDetailInfoBankCode, validateChildAccount, getChildren
  /beneAddressBook/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - beneAddressBook
      operationId: postBeneAddressBook{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
      summary: Perform an action on an individual Beneficiary Address record. Valid actions are add, update, delete, approve, read
  /bill/getEntitledActions:
    post:
      responses:
        '200':
          description: OK
      tags:
        - bill
      operationId: postBillGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions
  /bill/getListView:
    post:
      responses:
        '200':
          description: OK
      tags:
        - bill
      operationId: postBillGetListView
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Retrieve bill management list view
  /bill/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - bill
      operationId: postBill{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillMaintRequest'
        required: true
      summary: Bill management actions
  /bosAccount/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - bosAccount
      operationId: postBosAccountList
      requestBody:
        $ref: '#/components/requestBodies/BOSAccountRequest'
      summary: BOS Account data
  /bosAccount/update:
    post:
      responses:
        '200':
          description: OK
      tags:
        - bosAccount
      operationId: postBosAccountUpdate
      requestBody:
        $ref: '#/components/requestBodies/BOSAccountRequest'
      summary: BOS Account update
  /bosAccountBalances/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - bosAccountBalances
      operationId: postBosAccountBalancesList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BOSAccountBalanceRequest'
        required: true
      summary: BOS Account Balance data
  /cashPosition/summary/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - cashPosition/summary/export
      operationId: getCashPositionSummaryExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export cash position deposit Accounts summary List View
  /cashflow/chart:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowChart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashFlowChartRequest'
        required: true
      summary: Cash flow item chart data
  /cashflow/delete:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowDelete
      requestBody:
        $ref: '#/components/requestBodies/CashFlowItemRequest'
      summary: Cash flow item delete
  /cashflow/getEntitlements:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowGetEntitlements
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitlements
  /cashflow/save:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowSave
      requestBody:
        $ref: '#/components/requestBodies/CashFlowItemRequest'
      summary: Cash flow item save
  /cashflow/snapshot:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowSnapshot
      summary: Cash flow snapshot data
  /cashflow/update:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowUpdate
      requestBody:
        $ref: '#/components/requestBodies/CashFlowItemRequest'
      summary: Cash flow item update
  /cashflow/upload:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflow
      operationId: postCashflowUpload
      requestBody:
        $ref: '#/components/requestBodies/CashFlowItemRequest'
      summary: Upload file of cash flow items
  /cashflowCategory/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowCategory
      operationId: postCashflowCategoryList
      summary: Retrieve cash flow categories
  /cashflowLine/delete:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowLine
      operationId: postCashflowLineDelete
      requestBody:
        $ref: '#/components/requestBodies/CashFlowLineRequest'
      summary: Removes cash flow lines
  /cashflowLine/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowLine
      operationId: postCashflowLineList
      summary: Retrieve cash flow lines
  /cashflowLine/save:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowLine
      operationId: postCashflowLineSave
      requestBody:
        $ref: '#/components/requestBodies/CashFlowLineRequest'
      summary: Creates new cash flow lines
  /cashflowLine/update:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowLine
      operationId: postCashflowLineUpdate
      requestBody:
        $ref: '#/components/requestBodies/CashFlowLineRequest'
      summary: Updates cash flow lines
  /cashflowMatch/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowMatch
      operationId: postCashflowMatchList
      requestBody:
        $ref: '#/components/requestBodies/CashFlowMatchModel'
      summary: Returns list of CashFlow matches
  /cashflowMatch/match:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowMatch
      operationId: postCashflowMatchMatch
      requestBody:
        $ref: '#/components/requestBodies/CashFlowMatchModel'
      summary: Matches a Cash Flow Item
  /cashflowPlan/compare:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanCompare
      requestBody:
        $ref: '#/components/requestBodies/CashFlowPlanRequest'
      summary: Get a CashFlow Plan Comparison Summary
  /cashflowPlan/delete:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BOSStatus'
          description: Output type
      tags:
        - cashflowPlan
      operationId: postCashflowPlanDelete
      requestBody:
        $ref: '#/components/requestBodies/CashFlowPlanRequest'
      summary: Delete a CashFlow Plan
  /cashflowPlan/get:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanGet
      requestBody:
        $ref: '#/components/requestBodies/CashFlowPlanRequest'
      summary: Get CashFlow Plan
  /cashflowPlan/getGroupPlan:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanGetGroupPlan
      requestBody:
        $ref: '#/components/requestBodies/CashFlowPlanRequest'
      summary: Get CashFlow Group Plan
  /cashflowPlan/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanList
      summary: Get CashFlow Plan
  /cashflowPlan/save:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanSave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashFlowPlanModel'
        required: true
      summary: Saves a CashFlow Plan
  /cashflowPlan/saveGroupPlan:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanSaveGroupPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashFlowGroupPlanModel'
        required: true
      summary: Saves a CashFlow Group Plan
  /cashflowPlan/summary:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanSummary
      summary: Get CashFlow Plan Summaries
  /cashflowPlan/summaryGroupPlan:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowPlan
      operationId: postCashflowPlanSummaryGroupPlan
      summary: Get CashFlow Group Plan Summaries
  /cashflowScenario/delete:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowScenario
      operationId: postCashflowScenarioDelete
      requestBody:
        $ref: '#/components/requestBodies/CashFlowScenarioRequest'
      summary: Cash flow scenario delete
  /cashflowScenario/list:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowScenario
      operationId: postCashflowScenarioList
      summary: Cash flow scenario data
  /cashflowScenario/save:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowScenario
      operationId: postCashflowScenarioSave
      requestBody:
        $ref: '#/components/requestBodies/CashFlowScenarioRequest'
      summary: Cash flow scenario save
  /cashflowScenario/update:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cashflowScenario
      operationId: postCashflowScenarioUpdate
      requestBody:
        $ref: '#/components/requestBodies/CashFlowScenarioRequest'
      summary: Cash flow scenario update
  /checkPaid/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - checkPaid
      operationId: postCheckPaidGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Check Paid Image Data from Balance and Transaction Reporting Detail
  /checkfimport/import/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - checkfimport
      operationId: postCheckfimportImportGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get check file import user entitled actions
  /checkfimport/import/getGridData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - checkfimport
      operationId: postCheckfimportImportGetGridData
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get grid data for imported check files
  /checkfimport/import/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkfimport
      operationId: postCheckfimportImportGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get model for check file import page
  /checkfimport/uploadFile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkfimport
      operationId: postCheckfimportUploadFile
      requestBody:
        $ref: '#/components/requestBodies/FImportRequest'
      summary: Check file upload service
  /cm/checkImage/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmCheckImageGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Check Image Model Info
  /cm/checkImage/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmCheckImageRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get CM Check Image
  /cm/checkImageDetail/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmCheckImageDetailGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Check Image Detail Model Info
  /cm/checkImageDetail/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cm
      operationId: postCmCheckImageDetailRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get CM Check Image Detail
  /cm/createBulkCheckExport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QExportResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmCreateBulkCheckExport
      requestBody:
        $ref: '#/components/requestBodies/BulkCheckExportRequest'
      summary: CM bulk check export
  /cm/createBulkCheckHistExport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QExportResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmcreateBulkCheckHistExport
      requestBody:
        $ref: '#/components/requestBodies/BulkCheckExportRequest'
      summary: CM bulk check history export
  /cm/executeListViewExport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmExecuteListViewExport
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Fraud Risk Management list view print/export
  /cm/getIssuesSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckIssuesSummary'
          description: Output type
      tags:
        - cm
      operationId: postCmGetIssuesSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Retrieve issue voids summary information
  /cm/importStopsListView/importResultsStopPaymentImport/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmImportStopsListViewImportResultsStopPaymentImportGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM File Import Results Entitlements
  /cm/importStopsListView/importResultsStopPaymentImport/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmImportStopsListViewImportResultsStopPaymentImportGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Stop Payment File Import Results List View
  /cm/listView/checkInquiry/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewCheckInquiryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Check Inquiry Entitled Actions
  /cm/listView/checkInquiry/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewCheckInquiryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get CM Check Inquiry List View
  /cm/listView/checkInquiry/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewCheckInquiryGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Check Inquiry Model Info
  /cm/listView/checkInquiryHistory/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewCheckInquiryHistoryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Check Inquiry History Entitled Actions
  /cm/listView/checkInquiryHistory/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewCheckInquiryHistoryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get CM Check Inquiry History List View
  /cm/listView/checkInquiryHistory/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewCheckInquiryHistoryGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Check Inquiry History Model Info
  /cm/listView/importResults/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewImportResultsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM File Import Results Entitlements
  /cm/listView/importResults/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewImportResultsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get CM File Import Results List View
  /cm/listView/importResultsStopCancel/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewImportResultsStopCancelGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM File Import Results Entitlements
  /cm/listView/importResultsStopCancel/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewImportResultsStopCancelGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get CM File Import Results List View with stop cancel
  /cm/listView/issueVoids/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewIssueVoidsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Issue Voids Entitled Actions
  /cm/listView/issueVoids/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewIssueVoidsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get CM Issue Voids List View
  /cm/listView/issueVoids/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewIssueVoidsGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Issue Voids Model Info
  /cm/listView/issueVoids/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewIssueVoids{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Issue/Voids from List View. Valid actions are - approve, delete
  /cm/listView/paymentFraudControl/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPaymentFraudControlGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Entitled Actions
  /cm/listView/paymentFraudControl/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPaymentFraudControlGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment Fraud Control List View
  /cm/listView/paymentFraudControl/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPaymentFraudControlGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Model Info
  /cm/listView/positivePayDecision/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Decision Entitled Actions
  /cm/listView/positivePayDecision/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Positive Pay Decision List View
  /cm/listView/positivePayDecision/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Decision Model Info
  /cm/listView/positivePayDecision/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Positive Pay Query Results
  /cm/listView/positivePayDecision/multi/multiUpdate/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionMultiMultiUpdate{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on positive pay for multiple updates
  /cm/listView/positivePayDecision/multi/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionMulti{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on positive pay for multiple updates
  /cm/listView/positivePayDecision/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - cm
      operationId: postCmListViewPositivePayDecision{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on an Positive Pay Record. Valid actions are - update, approve, unapprove and read.
  /cm/listView/positivePayDecisionHistory/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionHistoryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Decision History Entitled Actions
  /cm/listView/positivePayDecisionHistory/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewPositivePayDecisionHistoryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Positive Pay Decision History List View
  /cm/listView/reversePositivePayDecision/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Reverse Positive Pay Decision Entitled Actions
  /cm/listView/reversePositivePayDecision/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Reverse Positive Pay Decision List View
  /cm/listView/reversePositivePayDecision/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Reverse Positive Pay Decision Model Info
  /cm/listView/reversePositivePayDecision/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Reverse Positive Pay Query Results
  /cm/listView/reversePositivePayDecision/multi/multiUpdate/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionMultiMultiUpdate{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on reverse positive pay for multiple updates
  /cm/listView/reversePositivePayDecision/multi/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionMulti{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on reverse positive pay for multiple updates
  /cm/listView/reversePositivePayDecision/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecision{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on a Reverse Positive Pay Record.
  /cm/listView/reversePositivePayDecisionHistory/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionHistoryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Reverse Positive Pay Decision History Entitled Actions
  /cm/listView/reversePositivePayDecisionHistory/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewReversePositivePayDecisionHistoryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Reverse Positive Pay Decision History List View
  /cm/listView/smbStopCancels/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewSmbStopCancelsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Stop Cancels Entitled Actions
  /cm/listView/smbStopCancels/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewSmbStopCancelsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get SMB Stop Cancels List View
  /cm/listView/smbStopCancels/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewSmbStopCancelsGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Stop Cancels Model Info
  /cm/listView/smbStopCancels/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewSmbStopCancels{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Stop Cancels from List View. Valid actions are - approve, delete
  /cm/listView/stopCancels/getEntitledActionList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewStopCancelsGetEntitledActionList
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Stop Cancels Entitled Actions List
  /cm/listView/stopCancels/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewStopCancelsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Stop Cancels Entitled Actions
  /cm/listView/stopCancels/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewStopCancelsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get CM Stop Cancels List View
  /cm/listView/stopCancels/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewStopCancelsGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get CM Stop Cancels Model Info
  /cm/listView/stopCancels/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmListViewStopCancels{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Stop Cancels from List View. Valid actions are - approve, delete
  /cm/placeStop/multi:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - cm
      operationId: postCmPlaceStopMulti
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Perform add action on multiple Place Stops
  /cminst/importCheck/getGridData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cminst
      operationId: postCminstImportCheckGetGridData
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get Grid Data for imported checks
  /cminst/photocopy/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - cminst
      operationId: postCminstPhotocopyGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Photocopy Request List View
  /confidentialSettingsMaint/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - confidentialSettingsMaint
      operationId: postConfidentialSettingsMaint{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
      summary: Perform an action on an individual record. Valid actions are add, update, delete, approve, read
  /configurationParameter/getData:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - configurationParameter
      operationId: getConfigurationParameterGetData
      summary: 'Returns list of configuration parameters that are intended for the client to use '
  /configurationParameter/getInitialAppData:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - configurationParameter
      operationId: getConfigurationParameterGetInitialAppData
      summary: 'Returns a list of configuration parameters that are intended for the client to use. '
  /configurationParameter/getInitialAppDataMfa:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - configurationParameter
      operationId: getConfigurationParameterGetInitialAppDataMfa
      summary: 'Returns a list of configuration parameters that are intended for the client to use when MFA is invoked. '
  /context/getContexts:
    post:
      responses:
        '200':
          description: OK
      tags:
        - context
      operationId: postContextGetContexts
      summary: Get All Available Contexts
  /controlDisb/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - controlDisb
      operationId: postControlDisbGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Check Image Data for Control Disbursement
  /controlDist/Detail/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - controlDist
      operationId: postControlDistDetailGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Control Dist Detail List View
  /controlDist/Summary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - controlDist
      operationId: postControlDistSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Control Dist Summary List View
  /controlTotalAudit/getAuditListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - controlTotalAudit
      operationId: postControlTotalAuditGetAuditListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Audit History
  /creditCardAccounts/accountGroup/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - creditCardAccounts/accountGroup/export
      operationId: getCreditCardAccountsAccountGroupExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export credit card Accounts List View
  /creditCardAccounts/currentDay/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - creditCardAccounts/currentDay/transactions/export
      operationId: getCreditCardAccountsCurrentDayTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts transactions List View
  /creditCardAccounts/previousDay/accountGroup/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - creditCardAccounts/previousDay/accountGroup/export
      operationId: getCreditCardAccountsPreviousDayAccountGroupExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export Previous Day Credit Card Accounts List View
  /creditCardAccounts/previousDay/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - creditCardAccounts/previousDay/transactions/export
      operationId: getCreditCardAccountsPreviousDayTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts transactions List View
  /creditCardAccounts/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - creditCardAccounts/transactions/export
      operationId: getCreditCardAccountsTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export credit card Accounts transactions List View
  /cxp/elearning/getWidgetContentModels:
    post:
      responses:
        '200':
          description: OK
      tags:
        - cxp
      operationId: postCxpelearningGetWidgetContentModels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElearningWidgetRequest'
        required: true
      summary: Returns the widget E-Learning content models
  /cxp/externalWidget/getCustomContent:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomContentModel'
          description: Output type
      tags:
        - cxp
      operationId: postCxpExternalWidgetGetCustomContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalWidgetModel'
        required: true
      summary: Returns Custom Content widgets
  /cxp/externalWidget/getWidgetContent:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWidgetContentEditModel'
          description: Output type
      tags:
        - cxp
      operationId: postCxpExternalWidgetGetWidgetContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalWidgetContentEditModel'
        required: true
      summary: Returns an external widget content edit model
  /date/list:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateResponse'
          description: Output type
      tags:
        - date
      operationId: postDateList
      requestBody:
        $ref: '#/components/requestBodies/DateRequest'
      summary: Get business days
  /department/getListView:
    post:
      responses:
        '200':
          description: OK
      tags:
        - department
      operationId: postDepartmentGetListView
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Retrieve department list view
  /department/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - department
      operationId: postDepartment{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Department actions
  /depositAccounts/accountGroup/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - depositAccounts/accountGroup/export
      operationId: getDepositAccountsAccountGroupExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts List View
  /depositAccounts/cashPosition/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - depositAccounts/cashPosition/transactions/export
      operationId: getDepositAccountsCashPositionTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export cash position deposit transactions List View
  /depositAccounts/currentDay/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - depositAccounts/currentDay/transactions/export
      operationId: getDepositAccountsCurrentDayTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts transactions List View
  /depositAccounts/previousDay/accountGroup/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - depositAccounts/previousDay/accountGroup/export
      operationId: getDepositAccountsPreviousDayAccountGroupExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export Previous Day Deposit Accounts List View
  /depositAccounts/previousDay/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - depositAccounts/previousDay/transactions/export
      operationId: getDepositAccountsPreviousDayTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts transactions List View
  /depositAccounts/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - depositAccounts/transactions/export
      operationId: getDepositAccountsTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export deposit Accounts transactions List View
  /depositSlip/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - depositSlip
      operationId: postDepositSlipGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Deposit Slip Image Data from Balance and Transaction Reporting Detail
  /downloadLegacyReports/legacyReportData:
    post:
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
          description: Output type
      tags:
        - downloadLegacyReports
      operationId: postDownloadLegacyReportslegacyReportData
      requestBody:
        $ref: '#/components/requestBodies/ReportDataRequest'
      summary: Legacy reports download service from client
  /downloadReports/download:
    get:
      responses:
        '200':
          description: OK
      tags:
        - downloadReports
      operationId: getDownloadReportsDownload
      summary: Request the contents of a Jasper report
  /dynamicLinkAudit/audit:
    post:
      responses:
        '200':
          description: OK
      tags:
        - dynamicLinkAudit
      operationId: postDynamicLinkAuditAudit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditRequest'
        required: true
      summary: Audit request
  /dynamicreports/reportView:
    post:
      responses:
        '200':
          description: OK
      tags:
        - dynamicreports
      operationId: postDynamicreportsReportView
      summary: Generic Report View
  /export/download:
    get:
      responses:
        '200':
          description: OK
      tags:
        - export
      operationId: getExportDownload
      summary: Download Export Files
  /export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - export
      operationId: getExportListView
      summary: Export Payment List View
  /export/listViewFile:
    post:
      responses:
        '200':
          description: OK
      tags:
        - export
      operationId: postExportListViewFile
      summary: Export Payment List View exported to a file
  /export/listViewPost:
    post:
      responses:
        '200':
          description: OK
      tags:
        - export
      operationId: postExportListViewPost
      summary: Export Payment List View
  /export/scheduledExport/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportAdd
      requestBody:
        $ref: '#/components/requestBodies/ScheduledExport'
      summary: Create a new scheduled export
  /export/scheduledExport/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportDelete
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Delete an existing scheduled export
  /export/scheduledExport/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get entitled actions
  /export/scheduledExport/getEntitledEmailsBTR:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRecipientsResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetEntitledEmailsBTR
      requestBody:
        $ref: '#/components/requestBodies/EntitledEmailRequest'
      summary: Get entitled Emails for BTR
  /export/scheduledExport/getEntitledEmailsBankReport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRecipientsResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetEntitledEmailsBankReport
      requestBody:
        $ref: '#/components/requestBodies/EntitledEmailRequest'
      summary: Get entitled Emails for Bank Reports
  /export/scheduledExport/getEntitledEmailsLegacyReport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRecipientsResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetEntitledEmailsLegacyReport
      requestBody:
        $ref: '#/components/requestBodies/EntitledEmailRequest'
      summary: Get entitled Emails for Legacy Report
  /export/scheduledExport/getEntitledReportTypes:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTypeEntitlementsResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetEntitledReportTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReportTypeRequest'
        required: true
      summary: Get entitled Report Types
  /export/scheduledExport/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all scheduled export definitions
  /export/scheduledExport/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get information on the data model, e.g. required fields and validation info
  /export/scheduledExport/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Query Results
  /export/scheduledExport/getUser:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRecipientsResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetUser
      requestBody:
        $ref: '#/components/requestBodies/EntitledEmailRequest'
      summary: Get a User for the Company
  /export/scheduledExport/getUsers:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRecipientsResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportGetUsers
      requestBody:
        $ref: '#/components/requestBodies/EntitledEmailRequest'
      summary: Get All Users for a Company
  /export/scheduledExport/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledExport'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportRead
      requestBody:
        $ref: '#/components/requestBodies/ScheduledExport'
      summary: Reads a scheduled export
  /export/scheduledExport/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportUpdate
      requestBody:
        $ref: '#/components/requestBodies/ScheduledExport'
      summary: Update an existing scheduled export
  /export/scheduledExport/validate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchExportValidatorResponse'
          description: Output type
      tags:
        - export
      operationId: postExportScheduledExportValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchExportValidatorRequest'
        required: true
      summary: Validates if the Scheduled Export name is valid
  /export/transmissionProfile/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileAdd
      requestBody:
        $ref: '#/components/requestBodies/TransmissionProfile'
      summary: Create a new transmission profile
  /export/transmissionProfile/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileDelete
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Delete an existing transmission profile
  /export/transmissionProfile/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get entitled actions
  /export/transmissionProfile/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all transmission profile definitions
  /export/transmissionProfile/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get information on the data model, e.g. required fields and validation info
  /export/transmissionProfile/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransmissionProfile'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileRead
      requestBody:
        $ref: '#/components/requestBodies/TransmissionProfile'
      summary: Reads a transmission profile
  /export/transmissionProfile/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - export
      operationId: postExportTransmissionProfileUpdate
      requestBody:
        $ref: '#/components/requestBodies/TransmissionProfile'
      summary: Update an existing transmission profile
  /featureControl/getFeatureAccess:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - featureControl
      operationId: getFeatureControlGetFeatureAccess
      summary: Retrieves a list of features and their enabled state
  /fileImportHistory/downloadBlobId:
    get:
      responses:
        '200':
          description: OK
      tags:
        - fileImportHistory
      operationId: getFileImportHistoryDownloadBlobId
      summary: Download blob id for imported files
  /fileImportHistory/listView/delete:
    post:
      responses:
        '200':
          description: OK
      tags:
        - fileImportHistory
      operationId: postFileImportHistoryListViewDelete
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Delete File Import History from List View
  /fileImportHistory/listView/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - fileImportHistory
      operationId: postFileImportHistoryListViewGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get File Import History Entitled Actions
  /fileImportHistory/listView/getEntitledActionsForContext:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - fileImportHistory
      operationId: postFileImportHistoryListViewGetEntitledActionsForContext
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get File Import History Entitled Actions for given context
  /fileImportHistory/listView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - fileImportHistory
      operationId: postFileImportHistoryListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all File Import History
  /fimport/import/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - fimport
      operationId: postFimportImportGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Entitled Actions
  /fimport/import/getGridData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - fimport
      operationId: postFimportImportGetGridData
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get Query Results
  /fimport/import/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - fimport
      operationId: postFimportImportGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: get model for file import page
  /fimport/uploadFile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - fimport
      operationId: postFimportUploadFile
      requestBody:
        $ref: '#/components/requestBodies/FImportRequest'
      summary: Generic File ImportService
  /forgottenPassword/getRandomChallengeQuestions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomQuesResponse'
          description: Output type
      tags:
        - forgottenPassword
      operationId: postForgottenPasswordGetRandomChallengeQuestions
      requestBody:
        $ref: '#/components/requestBodies/QAChallengeLoginRequest'
      summary: Retrieve random security questions for a user
  /forgottenPassword/validateEmailResetPasswordRequest:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResetPasswordResponse'
          description: Output type
      tags:
        - forgottenPassword
      operationId: postForgottenPasswordValidateEmailResetPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailResetPasswordRequest'
        required: true
      summary: Validate the reset password request in valid time frame, return user id and user group for valid request
  /forgottenPassword/validateQAChallenge:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAChallengeResponse'
          description: Output type
      tags:
        - forgottenPassword
      operationId: postForgottenPasswordValidateQAChallenge
      requestBody:
        $ref: '#/components/requestBodies/QAChallengeRequest'
      summary: Validate User Answers
  /fxexport/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - fxexport
      operationId: getFxexportListView
      summary: Export FX Report List View
  /genericReports/reportView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - genericReports
      operationId: getGenericReportsReportView
      summary: Generic Report View using GET
  /girexport/createGIRExport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QExportResponse'
          description: Output type
      tags:
        - girexport
      operationId: postGirexportCreateGIRExport
      requestBody:
        $ref: '#/components/requestBodies/QExportRequest'
      summary: Create GIR export rest service
  /help/getHelpPage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpPageResponse'
          description: Output type
      tags:
        - help
      operationId: postHelpGetHelpPage
      requestBody:
        $ref: '#/components/requestBodies/HelpPageRequest'
      summary: Retrieves the help page for the input product, function, type, action
  /imageSearchCheckPaid/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - imageSearchCheckPaid
      operationId: postImageSearchCheckPaidGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Check Paid Image Data
  /imageSearchDepositSlip/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - imageSearchDepositSlip
      operationId: postImageSearchDepositSlipGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Deposit Slip Image Data
  /imageSearchReturnedItem/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - imageSearchReturnedItem
      operationId: postImageSearchReturnedItemGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Returned Item Image Data
  /imaging/remoteDepositCapture/addDepositItem:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiCheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureAddDepositItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDepositItemRequest'
        required: true
      summary: RDC Add Deposit Item
  /imaging/remoteDepositCapture/analyzeCheckImages:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeDepositImageResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureAnalyzeCheckImages
      requestBody:
        $ref: '#/components/requestBodies/CheckDepositImageData'
      summary: RDM Analyze Check Images
  /imaging/remoteDepositCapture/cancelDepositBatch:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiCheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCapturecancelDepositBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMultiDepositBatchRequest'
        required: true
      summary: Cancel the whole Deposit
  /imaging/remoteDepositCapture/confirmDepositCheck:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureConfirmDepositCheck
      requestBody:
        $ref: '#/components/requestBodies/CheckDepositImageData'
      summary: RDM Confirm Submit Deposit Check
  /imaging/remoteDepositCapture/createCheckDepositBatch:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositBatchResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureCreateCheckDepositBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDepositBatchRequest'
        required: true
      summary: Create Check Deposit Batch
  /imaging/remoteDepositCapture/getAllAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureGetAllAccounts
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Gets a list of Accounts
  /imaging/remoteDepositCapture/getDepositHistory:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositHistoryResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureGetDepositHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDepositHistoryRequest'
        required: true
      summary: Get Deposit History
  /imaging/remoteDepositCapture/getDepositItemImages:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositImageResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureGetDepositItemImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDepositImageRequest'
        required: true
      summary: Get Deposit History
  /imaging/remoteDepositCapture/getRDCConfig:
    post:
      responses:
        '200':
          description: OK
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureGetRDCConfig
      summary: 'Retrieves boolean to indicate if RDC uses location feature '
  /imaging/remoteDepositCapture/isSystemAvailable:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: getImagingRemoteDepositCaptureIsSystemAvailable
      summary: Determines the availability of the RDM System
  /imaging/remoteDepositCapture/locationAccounts/getLocationAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureLocationAccountsGetLocationAccounts
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Gets a list of location Accounts
  /imaging/remoteDepositCapture/locations/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureLocationsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Gets a list of locations
  /imaging/remoteDepositCapture/postDepositBatch:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCapturePostDepositBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDepositBatchRequest'
        required: true
      summary: Post Deposit Batch
  /imaging/remoteDepositCapture/rdcEndSession:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureRdcEndSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndSessionRequest'
        required: true
      summary: End Session
  /imaging/remoteDepositCapture/submitDepositCheck:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureSubmitDepositCheck
      requestBody:
        $ref: '#/components/requestBodies/CheckDepositImageData'
      summary: RDM Submit Deposit Check
  /imaging/remoteDepositCapture/updateDepositCheck:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureUpdateDepositCheck
      requestBody:
        $ref: '#/components/requestBodies/CheckDepositImageData'
      summary: RDM Update Submit Deposit Check
  /imaging/remoteDepositCapture/updateDepositItem:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiCheckDepositResponse'
          description: Output type
      tags:
        - imaging/remoteDepositCapture
      operationId: postImagingRemoteDepositCaptureUpdateDepositItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateRequest'
        required: true
      summary: Update the Batch Items
  /inquiry/getCrossProfileSender:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrossProfileSenderResponse'
          description: Output type
      tags:
        - inquiry
      operationId: postInquiryGetCrossProfileSender
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossProfileSenderRequest'
        required: true
      summary: Request and Validate Endpoint for Cross Profile Sender Address Information for Wire International Payments
  /inquiry/getData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - inquiry
      operationId: postInquiryGetData
      requestBody:
        $ref: '#/components/requestBodies/InquiryDataRequest'
      summary: Retrieves inquiry data including both the headers and rows based on requested search type and search parameters
  /inquiry/getHeaderData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - inquiry
      operationId: postInquiryGetHeaderData
      requestBody:
        $ref: '#/components/requestBodies/InquiryDataRequest'
      summary: Retrieves inquiry headers data based on requested search type and search parameters
  /inquiry/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - inquiry
      operationId: postInquiryGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Retrieves inquiry data based on custom filter and search parameters
  /inquiry/getRowsData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - inquiry
      operationId: postInquiryGetRowsData
      requestBody:
        $ref: '#/components/requestBodies/InquiryDataRequest'
      summary: Retrieves inquiry rows data based on requested search type and search parameters
  /inquiry/processServiceAction:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - inquiry
      operationId: postInquiryProcessServiceAction
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: 'Validates a field and returns relevant data '
  /invoice/getEntitledActions:
    post:
      responses:
        '200':
          description: OK
      tags:
        - invoice
      operationId: postInvoiceGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Entitled Actions
  /invoice/getListView:
    post:
      responses:
        '200':
          description: OK
      tags:
        - invoice
      operationId: postInvoiceGetListView
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Retrieve invoice list view
  /invoice/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - invoice
      operationId: postInvoice{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
      summary: Invoice actions
  /jasperReports/getReportData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
          description: Output type
      tags:
        - jasperReports
      operationId: postJasperReportsGetReportData
      requestBody:
        $ref: '#/components/requestBodies/ReportDataRequest'
      summary: Request the contents of a Jasper report
  /jasperReports/runReport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunReportResponse'
          description: Output type
      tags:
        - jasperReports
      operationId: postJasperReportsRunReport
      requestBody:
        $ref: '#/components/requestBodies/RunReportRequest'
      summary: Request a Jasper report to be run
  /legacyReports/reports/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - legacyReports
      operationId: postLegacyReportsReportsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get legacy reports list
  /legacyReports/systemID/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - legacyReports
      operationId: postLegacyReportsSystemIDGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get a list of report system identifiers permitted to the user
  /listViewFilter/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - listViewFilter
      operationId: postListViewFilterDelete
      requestBody:
        $ref: '#/components/requestBodies/ListViewDeleteRequest'
      summary: Remove a filter
  /listViewFilter/getDefault:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - listViewFilter
      operationId: postListViewFilterGetDefault
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Gets a default list view filter for the logged in user
  /listViewFilter/getListViewFilterDetails:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - listViewFilter
      operationId: postListViewFilterGetListViewFilterDetails
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: 'Returns the details for the requested Filtered List View '
  /listViewFilter/getListViewFilters:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageListViewListResponse'
          description: Output type
      tags:
        - listViewFilter
      operationId: postListViewFilterGetListViewFilters
      requestBody:
        $ref: '#/components/requestBodies/ManageListViewListRequest'
      summary: 'Returns list of Filtered List Views '
  /listViewFilter/save:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - listViewFilter
      operationId: postListViewFilterSave
      requestBody:
        $ref: '#/components/requestBodies/ListViewAddRequest'
      summary: Add a filter
  /listViewFilter/setDefault:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - listViewFilter
      operationId: postListViewFilterSetDefault
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Sets a default list view filter for the logged in user
  /liveMaintenance/getMaintenanceMessages:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMaintenanceResponse'
          description: Output type
      tags:
        - liveMaintenance
      operationId: getLiveMaintenanceGetMaintenanceMessages
      summary: Start Live Maintenance Mode
  /liveMaintenance/isMaintenanceMode:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveMaintenanceResponse'
          description: Output type
      tags:
        - liveMaintenance
      operationId: getLiveMaintenanceIsMaintenanceMode
      summary: Check whether the environment is under Live Maintenance Mode
  /loanAccounts/accountGroup/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - loanAccounts/accountGroup/export
      operationId: getLoanAccountsAccountGroupExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export Loan Account List View
  /loanAccounts/previousDay/accountGroup/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - loanAccounts/previousDay/accountGroup/export
      operationId: getLoanAccountsPreviousDayAccountGroupExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export Previous Day Loan Accounts List View
  /loanAccounts/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - loanAccounts/transactions/export
      operationId: getLoanAccountsTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export Loan Accounts transactions List View
  /loanAccounts/transactions/print/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - loanAccounts/transactions/print
      operationId: getLoanAccountsTransactionsPrintListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export loan Accounts transactions List View
  /loanreporting/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a loan account group list view export to be run.
  /loanreporting/accountSummary/directConnect/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryDirectConnectGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Accounts Summary List View For Direct Connect
  /loanreporting/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Totals
  /loanreporting/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Group Totals
  /loanreporting/accountSummary/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Loan Accounts Summary Entitled Actions
  /loanreporting/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Accounts Summary List View
  /loanreporting/accountSummary/getListViewBalanceColumns:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetListViewBalanceColumns
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Accounts Balance Columns
  /loanreporting/accountSummary/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Totals
  /loanreporting/accountSummary/getSingleAcctGroupTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetSingleAcctGroupTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Totals
  /loanreporting/accountSummary/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Transaction Summary Totals
  /loanreporting/accountSummary/requestRealTimeBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingAccountSummaryRequestRealTimeBalances
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Balances for Loan Accounts
  /loanreporting/currentDay/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingCurrentDayGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Current Day Loan Transaction Summary Totals
  /loanreporting/currentDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingCurrentDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Current Day Transactions List View
  /loanreporting/getLoanCurrentBalance:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanCurrentBalanceResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetLoanCurrentBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanCurrentBalanceRequest'
        required: true
      summary: 'Loan account current balance info '
  /loanreporting/getLoanCurrentBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanCurrentBalancesResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetLoanCurrentBalances
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanCurrentBalancesRequest'
        required: true
      summary: Returns current loan account balances for a set of accounts
  /loanreporting/getSearchTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetSearchTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Transactions List View
  /loanreporting/getTransactions/checkRealTimeResponse:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetTransactionsCheckRealTimeResponse
      requestBody:
        $ref: '#/components/requestBodies/postStrictBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponseBody'
      summary: Polling service for Real Time Transactions request
  /loanreporting/getTransactions/directConnect/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetTransactionsDirectConnectGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Transactions List View For Direct Connect
  /loanreporting/getTransactions/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetTransactionsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Loan Account Transactions Entitled Actions
  /loanreporting/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Transactions List View
  /loanreporting/getTransactions/requestRealTimeTransactions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingGetTransactionsRequestRealTimeTransactions
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Transactions for Loan Accounts
  /loanreporting/previousDay/accountGroup/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingPreviousDayAccountGroupExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a loan account group list view export to be run.
  /loanreporting/previousDay/getTransactionTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingPreviousDayGetTransactionTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Previous Day Loan Transaction Summary Totals
  /loanreporting/previousDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingPreviousDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Previous Day Transactions List View
  /loanreporting/tieredLoanSubAccount/directConnect/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingTieredLoanSubAccountDirectConnectGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get tiered loan sub account list view for Direct Connect
  /loanreporting/tieredLoanSubAccount/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingTieredLoanSubAccountGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get tiered loan sub account list view
  /loanreporting/tieredLoanSubAccount/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingTieredLoanSubAccountGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get tiered loan sub account totals
  /loanreporting/transactions/export/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingTransactionsExportExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a loan transaction list view export to be run.  Waits up to configured threshold for export to finish.
  /loanreporting/transactions/print/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - loanreporting
      operationId: postLoanreportingTransactionsPrintExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a loan transaction list view report to be run.  Waits up to configured threshold for export to finish.
  /localizationService/:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResourcesResponse'
          description: Output type
      tags:
        - localizationService
      operationId: postLocalizationService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/I18NRequest'
        required: true
      summary: Retrieves list of locale values for the applicationResource filter
  /localizationService/getAllResources/{locale}:
    get:
      parameters:
        - in: path
          name: locale
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResourcesResponse'
          description: Output type
      tags:
        - localizationService
      operationId: getLocalizationServiceGetAllResources{locale}
      summary: Retrieves list of locale values for the locale code provided as part of the request call
  /localizationService/getLoginResources:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResourcesResponse'
          description: Output type
      tags:
        - localizationService
      operationId: getLocalizationServiceGetLoginResources
      summary: Retrieves list of locale values for the login page
  /localizationService/getLoginResources/{locale}:
    get:
      parameters:
        - in: path
          name: locale
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResourcesResponse'
          description: Output type
      tags:
        - localizationService
      operationId: getLocalizationServiceGetLoginResources{locale}
      summary: Retrieves list of locale values for the login page
  /location/getListView:
    post:
      responses:
        '200':
          description: OK
      tags:
        - location
      operationId: postLocationGetListView
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Retrieve locations list view
  /location/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - location
      operationId: postLocation{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Location actions
  /lockbox/auditInquiryRequest:
    post:
      responses:
        '200':
          description: OK
      tags:
        - lockbox
      operationId: postLockboxAuditInquiryRequest
      requestBody:
        $ref: '#/components/requestBodies/InquiryDataRequest'
      summary: Audits the Lockbox inquiry data
  /lockbox/checktransactions/getEnvelopeDetailsListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxChecktransactionsGetEnvelopeDetailsListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Check Transactions for specific envelope
  /lockbox/checktransactions/getGroupedListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxChecktransactionsGetGroupedListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Check Transactions grouped by envelope
  /lockbox/checktransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxChecktransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Check Transactions
  /lockbox/checktransactions/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - lockbox
      operationId: postLockboxChecktransactionsRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: List all Check Transactions for specific envelope
  /lockbox/creditcardtransactions/getEnvelopeDetailsListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxCreditcardtransactionsGetEnvelopeDetailsListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Credit Card Transactions for specific envelope
  /lockbox/creditcardtransactions/getGroupedListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxCreditcardtransactionsGetGroupedListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Credit Card Transactions grouped by envelope
  /lockbox/creditcardtransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxCreditcardtransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Credit Card Transactions
  /lockbox/creditcardtransactions/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - lockbox
      operationId: postLockboxCreditcardtransactionsRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: List all Check Transactions for specific envelope
  /lockbox/doconlytransactions/getEnvelopeDetailsListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxDoconlytransactionsGetEnvelopeDetailsListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Document Only Transactions for specific envelope
  /lockbox/doconlytransactions/getGroupedListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxDoconlytransactionsGetGroupedListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Document Only Transactions grouped by envelope
  /lockbox/doconlytransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxDoconlytransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all Document Only Transactions
  /lockbox/doconlytransactions/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - lockbox
      operationId: postLockboxDoconlytransactionsRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: List all Check Transactions for specific envelope
  /lockbox/getGroupSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxGetGroupSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List Lockbox Summary Report Items
  /lockbox/getImage:
    post:
      responses:
        '200':
          description: OK
      tags:
        - lockbox
      operationId: postLockboxGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Lockbox Image Data
  /lockbox/getLockboxDataRetentionDetails:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxGetLockboxDataRetentionDetails
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get Lockbox Data Retention Details
  /lockbox/getSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxGetSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List Lockbox Summary Report Items
  /lockbox/manageRemitters/getListView/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - lockbox
      operationId: postLockboxManageRemittersGetListViewGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Manage Remitters Entitled Actions
  /loggerService/log:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationsResponse'
          description: Output type
      tags:
        - loggerService
      operationId: postLoggerServiceLog
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Rest Interface into the Platform Utility Logging Service
  /menu:
    get:
      responses:
        '200':
          description: OK
      tags:
        - menu
      operationId: getMenunull
      summary: Retrieve a user's menu. User must be logged in.
  /mfaService/activateToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenActivationResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceActivateToken
      requestBody:
        $ref: '#/components/requestBodies/TokenActivationRequest'
      summary: Activate your Token
  /mfaService/checkMobileMFAChallengeState:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileMFAChallengeStateResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceCheckMobileMFAChallengeState
      requestBody:
        $ref: '#/components/requestBodies/MobileMFAChallengeStateRequest'
      summary: Validates activation token for new phone number
  /mfaService/getSettings:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettingsResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceGetSettings
      requestBody:
        $ref: '#/components/requestBodies/MFASettingsRequest'
      summary: Retrieves MFA Settings according to type of MFA configured
  /mfaService/getTokenRegistrationCode:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenRegistrationCodeResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceGetTokenRegistrationCode
      requestBody:
        $ref: '#/components/requestBodies/GetTokenRegistrationCodeRequest'
      summary: Gets the Token Registration Code
  /mfaService/initiateActivatePhone:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateActivatePhoneResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceInitiateActivatePhone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateActivatePhoneRequest'
        required: true
      summary: Initiates activation token for new phone number
  /mfaService/initiateOutOfBand:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOutOfBandResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceInitiateOutOfBand
      requestBody:
        $ref: '#/components/requestBodies/InitiateOutOfBandRequest'
      summary: Initiates Out Of Band MFA calls to provider
  /mfaService/loginActivateToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenActivationResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginActivateToken
      requestBody:
        $ref: '#/components/requestBodies/TokenActivationRequest'
      summary: Activate your Token
  /mfaService/loginCheckMobileMFAChallengeState:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileMFAChallengeStateResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginCheckMobileMFAChallengeState
      requestBody:
        $ref: '#/components/requestBodies/MobileMFAChallengeStateRequest'
      summary: Login Page - Validates activation token for new phone number
  /mfaService/loginGetSettings:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettingsResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginGetSettings
      requestBody:
        $ref: '#/components/requestBodies/MFASettingsRequest'
      summary: Login Page - Retrieves MFA Settings according to type of MFA configured
  /mfaService/loginGetTokenRegistrationCode:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenRegistrationCodeResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginGetTokenRegistrationCode
      requestBody:
        $ref: '#/components/requestBodies/GetTokenRegistrationCodeRequest'
      summary: Gets the Token Registration Code
  /mfaService/loginInitiateOutOfBand:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOutOfBandResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginInitiateOutOfBand
      requestBody:
        $ref: '#/components/requestBodies/InitiateOutOfBandRequest'
      summary: Login Page - Initiates Out Of Band MFA calls to provider
  /mfaService/loginResendActivationEmail:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendActivationEmailRSAResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginResendActivationEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendActivationEmailRSARequest'
        required: true
      summary: Login Page - Resends RSA Amis Activation Email
  /mfaService/loginResetPin:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPinResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginResetPin
      requestBody:
        $ref: '#/components/requestBodies/ResetPinRequest'
      summary: Login Page - Resets the users token pin
  /mfaService/loginSelfRegisterToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenActivationResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginSelfRegisterToken
      requestBody:
        $ref: '#/components/requestBodies/TokenActivationRequest'
      summary: Login Page - Token Self Registration process
  /mfaService/loginSoftTokenRegister:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenActivationResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginSoftTokenRegister
      requestBody:
        $ref: '#/components/requestBodies/TokenActivationRequest'
      summary: Login Page - Soft Token Registration process
  /mfaService/loginValidate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMFAResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceLoginValidate
      requestBody:
        $ref: '#/components/requestBodies/ValidateMFARequest'
      summary: Login Page - Validates MFA secrets
  /mfaService/resetPin:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPinResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceResetPin
      requestBody:
        $ref: '#/components/requestBodies/ResetPinRequest'
      summary: Resets the users token pin
  /mfaService/rsaAdaptiveMarkup:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformMFAPreCheckServerResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceRsaAdaptiveMarkup
      summary: preCheck - Gets the HTML Markup for the RSA Adaptive
  /mfaService/selfRegisterToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenActivationResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceSelfRegisterToken
      requestBody:
        $ref: '#/components/requestBodies/TokenActivationRequest'
      summary: Token Self Registration process
  /mfaService/softTokenRegister:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenActivationResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceSoftTokenRegister
      requestBody:
        $ref: '#/components/requestBodies/TokenActivationRequest'
      summary: Soft Token Registration process
  /mfaService/validate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMFAResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceValidate
      requestBody:
        $ref: '#/components/requestBodies/ValidateMFARequest'
      summary: Validates MFA secrets
  /mfaService/validateActivatePhone:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateActivatePhoneResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceValidateActivatePhone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateActivatePhoneRequest'
        required: true
      summary: Validates activation token for new phone number
  /mfaService/validateCallbackToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMFAResponse'
          description: Output type
      tags:
        - mfaService
      operationId: postMfaServiceValidateCallbackToken
      requestBody:
        $ref: '#/components/requestBodies/ValidateMFARequest'
      summary: preCheck - Validates call back token
  /mobile/authenticateMFA:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileBaseResponse'
          description: Output type
      tags:
        - mobile
      operationId: postMobileAuthenticateMFA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileMFARequest'
        required: true
      summary: Submit a mobile OTP token in response to a MFA request
  /mobile/bypassMFA:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileBaseResponse'
          description: Output type
      tags:
        - mobile
      operationId: postMobileBypassMFA
      summary: Request to bypass the MFA from mobile
  /mobile/isDeviceRegistered:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileBaseResponse'
          description: Output type
      tags:
        - mobile
      operationId: postMobileIsDeviceRegistered
      requestBody:
        $ref: '#/components/requestBodies/MobileRegistrationRequest'
      summary: Check if device is already registered
  /mobile/login:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Output type
      tags:
        - mobile
      operationId: postMobileLogin
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      summary: Mobile Login after mobile device has been Registered
  /mobile/setup:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileRegistrationResponse'
          description: Output type
      tags:
        - mobile
      operationId: postMobileSetup
      requestBody:
        $ref: '#/components/requestBodies/MobileRegistrationRequest'
      summary: Mobile Setup
  /modifyvfimport/import/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - modifyvfimport
      operationId: postModifyvfimportImportGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Entitled Actions
  /modifyvfimport/import/getGridData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - modifyvfimport
      operationId: postModifyvfimportImportGetGridData
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get Query Results
  /modifyvfimport/import/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - modifyvfimport
      operationId: postModifyvfimportImportGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: get model for modify template via file import page
  /modifyvfimport/uploadFile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - modifyvfimport
      operationId: postModifyvfimportuploadFile
      requestBody:
        $ref: '#/components/requestBodies/FImportRequest'
      summary: Generic File ImportService
  /notifications/accessAchLargeBatchNotifications:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - notifications
      operationId: postNotificationsAccessAchLargeBatchNotifications
      summary: Mark user ACH Large Batch process notifications as read
  /notifications/accessFileImportNotifications:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - notifications
      operationId: postNotificationsAccessFileImportNotifications
      summary: Mark user File Import notifications as read
  /notifications/accessRecPayExceptions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - notifications
      operationId: postNotificationsAccessRecPayExceptions
      summary: Mark user Recurring Payment Exceptions as accessed
  /notifications/getEntitledNotificationTypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledNotificationTypesResponse'
          description: Output type
      tags:
        - notifications
      operationId: getNotificationsGetEntitledNotificationTypes
      summary: Retrieve list of Notification Types that the user has permission to access
  /notifications/getNotificationData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationServiceResponse'
          description: Output type
      tags:
        - notifications
      operationId: postNotificationsGetNotificationData
      requestBody:
        $ref: '#/components/requestBodies/NotificationServiceRequest'
      summary: Rest End point that retrieves the notification data based on a subscription list
  /notifications/getNotifications:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationsResponse'
          description: Output type
      tags:
        - notifications
      operationId: postNotificationsGetNotifications
      requestBody:
        $ref: '#/components/requestBodies/GetNotificationsRequest'
      summary: Get current user Notifications
  /notifications/getNotificationsByType:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationsResponse'
          description: Output type
      tags:
        - notifications
      operationId: postNotificationsGetNotificationsByType
      requestBody:
        $ref: '#/components/requestBodies/GetNotificationsRequest'
      summary: Get current user notifications based on the provided Notifications list
  /oauth/accept_token:
    get:
      responses:
        '200':
          description: OK
      tags:
        - oauth
      operationId: getOauthAccept_token
      summary: QBO authentication
  /oauth/oAuthKeys:
    post:
      responses:
        '200':
          description: OK
      tags:
        - oauth
      operationId: postOauthOAuthKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthKeyRequest'
        required: true
      summary: QBO Tenant Consumer Key save
  /oauth/request_token:
    get:
      responses:
        '200':
          description: OK
      tags:
        - oauth
      operationId: getOauthRequest_token
      summary: QBO authentication
  /oauth/status:
    post:
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuthStatusResponse'
          description: Output type
      tags:
        - oauth
      operationId: postOauthStatus
      summary: QBO Connection Status
  /outboundSSO/getEntitledServices:
    post:
      responses:
        '200':
          description: OK
      tags:
        - outboundSSO
      operationId: postOutboundSSOGetEntitledServices
      summary: Retrieve a list of the outbound SSO services a user is entitled to
  /outboundSSO/login:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOLoginResponse'
          description: Output type
      tags:
        - outboundSSO
      operationId: postOutboundSSOLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSOLoginRequest'
        required: true
      summary: SSO login to external vendor
  /outboundSSO/logout:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOLogoutResponse'
          description: Output type
      tags:
        - outboundSSO
      operationId: postOutboundSSOLogout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSOLogoutRequest'
        required: true
      summary: SSO login to external vendor
  /panelApprovalWorkflow/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflowAdd
      requestBody:
        $ref: '#/components/requestBodies/PanelProfileFilter'
      summary: Adds Profile Panel Filter and Thresholds
  /panelApprovalWorkflow/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflowGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get panel filter Entitled Actions
  /panelApprovalWorkflow/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflowGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Retrieves all the Panel filters as a list
  /panelApprovalWorkflow/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflowGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get panel filter Model Info
  /panelApprovalWorkflow/readPanelWorkflow:
    post:
      responses:
        '200':
          description: OK
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflowReadPanelWorkflow
      requestBody:
        $ref: '#/components/requestBodies/TableMaintRequest'
  /panelApprovalWorkflow/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflowUpdate
      requestBody:
        $ref: '#/components/requestBodies/PanelProfileFilter'
      summary: Update Profile Panel Filter and Thresholds
  /panelApprovalWorkflow/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - panelApprovalWorkflow
      operationId: postPanelApprovalWorkflow{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
  /panelTemplateService/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - panelTemplateService
      operationId: postPanelTemplateServiceGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get panel filter Entitled Actions
  /panelTemplateService/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - panelTemplateService
      operationId: postPanelTemplateServiceGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Retrieves all the Templates to be added to the Panel Approval workflow
  /panelmaint/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - panelmaint
      operationId: postPanelmaintGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get role Entitled Actions
  /panelmaint/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - panelmaint
      operationId: postPanelmaintGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Retrieves all the Panel Approver types as a list
  /panelmaint/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - panelmaint
      operationId: postPanelmaintGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get role Model Info
  /panelmaint/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - panelmaint
      operationId: postPanelmaintUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PanelApproverTypes'
        required: true
      summary: Update Panel Approve Type Record
  /panelmaint/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - panelmaint
      operationId: postPanelmaint{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
  /paperlessStatements/consentAgreement:
    post:
      responses:
        '200':
          description: OK
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsConsentAgreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
        required: true
      summary: Consent Agreement
  /paperlessStatements/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Paperless eStatements Entitled Actions
  /paperlessStatements/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Paperless eStatements List View
  /paperlessStatements/multipleStatementTypesEntitlement:
    post:
      responses:
        '200':
          description: OK
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsMultipleStatementTypesEntitlement
      summary: Multi Statement message Info
  /paperlessStatements/revert:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Output type
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsRevert
      summary: Invoke revert on serverside in order to revert the local changes those currently showing on listview. Revert is local and does not make a call to adaptor
  /paperlessStatements/save:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsSave
      summary: Invoke the final Save on the serverside to send the updated records to Adaptor to be sent to external source
  /paperlessStatements/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: Output type
      tags:
        - paperlessStatements
      operationId: postPaperlessStatementsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiUpdateRequest'
        required: true
      summary: Update the user submitted changes(single or multiple records) to the local DB
  /passwordRules/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - passwordRules
      operationId: postPasswordRulesGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Password Rules List View
  /payment/ACHAuthRules/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment/ACHAuthRules
      operationId: postPaymentACHAuthRulesGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get ACH Authorization Rules Entitled Actions
  /payment/ACHAuthRules/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment/ACHAuthRules
      operationId: postPaymentACHAuthRulesGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get ACH Authorization Rules List View
  /payment/ACHAuthRules/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment/ACHAuthRules
      operationId: postPaymentACHAuthRulesGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get model for ACH Auth Rules
  /payment/ACHAuthRules/listView/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment/ACHAuthRules
      operationId: postPaymentACHAuthRulesListView{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Payments from List View. Valid actions are - delete, approve, unapprove and reject
  /payment/ACHAuthRules/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment/ACHAuthRules
      operationId: postPaymentACHAuthRules{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Run child action for single extended remittance document.
  /payment/File/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFileGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Entitled Actions
  /payment/File/getListViewDetails:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFileGetListViewDetails
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Retrieve the File Payment Detail List View
  /payment/File/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFileGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: get model for file import page
  /payment/File/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - payment
      operationId: postPaymentFile{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action FILE Payment. Valid actions are - read, approve, unapprove, delete and reject
  /payment/Wire-International/add/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentWire-InternationalAddValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Wire - International Add
  /payment/Wire-International/update/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentWire-InternationalUpdateValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Wire - International Edit
  /payment/billPay/getStatementImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - payment/billPay
      operationId: postPaymentBillPayGetStatementImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: get statement image for bill pay
  /payment/crtran/add/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentCrtranAddValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Real Time Payment Add
  /payment/crtran/update/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentCrtranUpdateValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Real Time Payment Edit
  /payment/executeAuditHistoryReport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunReportResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentExecuteAuditHistoryReport
      requestBody:
        $ref: '#/components/requestBodies/RunReportRequest'
      summary: Request a Payment Audit History report to be run
  /payment/fedwire/add/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFedwireAddValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Wires - Domestic Add
  /payment/fedwire/detail/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFedwireDetail{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPaymentRequest'
        required: true
      summary: Run child action for single extended remittance document.
  /payment/fedwire/details/bulkChildrenUpdate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFedwireDetailsBulkChildrenUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkBatchPaymentRequests'
        required: true
      summary: Bulk update to allow delete all action on extended remittance documents.
  /payment/fedwire/details/{operation}:
    post:
      parameters:
        - in: path
          name: operation
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFedwireDetails{operation}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildListViewRequest'
        required: true
      summary: Run child operations for bulk extended remittance documents.
  /payment/fedwire/update/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentFedwireUpdateValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Wires - Domestic Edit
  /payment/getFXPaymentTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentGetFXPaymentTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get FX Payment List View Totals
  /payment/getNextEarliestAvailableValueDate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleNextEarliestValueDateResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentGetNextEarliestAvailableValueDate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleNextEarliestValueDateRequest'
        required: true
      summary: Get Next Earliest Available Value Date for a Payment based on input criteria in the Requestd
  /payment/getPaymentAuditHistory:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuditHistoryResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentGetPaymentAuditHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuditHistoryRequest'
        required: true
      summary: Request a Payment Audit History report to be run
  /payment/getPaymentTemplatesSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsSummaryResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentGetPaymentTemplatesSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get payment templates summary information
  /payment/getPaymentsSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsSummaryResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentGetPaymentsSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get payments summary information
  /payment/getTransferPaymentsSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsSummaryResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentGetTransferPaymentsSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get transfer payments summary information
  /payment/listView/corp/copyAsPayment:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpCopyAsPayment
      requestBody:
        $ref: '#/components/requestBodies/RowIdentifier'
      summary: 'Copy As Payment '
  /payment/listView/corp/copyAsTemplate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpCopyAsTemplate
      requestBody:
        $ref: '#/components/requestBodies/RowIdentifier'
      summary: 'Copy As Template '
  /payment/listView/corp/createPaymentFromTemplate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpCreatePaymentFromTemplate
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: 'Create Payment from Template '
  /payment/listView/corp/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Entitled Actions
  /payment/listView/corp/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment List View
  /payment/listView/corp/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Model Info
  /payment/listView/corp/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorpGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Query Results
  /payment/listView/corp/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewCorp{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Payments from List View. Valid actions are - delete, approve, unapprove and reject
  /payment/listView/smb/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Payment Entitled Actions
  /payment/listView/smb/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get SMB Payment List View
  /payment/listView/smb/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Payment Model Info
  /payment/listView/smb/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get SMB Query Results
  /payment/listView/smbEmployee/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbEmployeeGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Employee Entitled Actions
  /payment/listView/smbEmployee/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbEmployeeGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get SMB Employee List View
  /payment/listView/smbEmployee/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbEmployeeGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Employee Model Info
  /payment/listView/smbEmployee/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbEmployeeGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get SMB Employee Query Results
  /payment/listView/smbTransfer/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbTransferGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Transfer Entitled Actions
  /payment/listView/smbTransfer/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbTransferGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get SMB Transfer List View
  /payment/listView/smbTransfer/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbTransferGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Transfer Model Info
  /payment/listView/smbTransfer/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentListViewSmbTransferGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get SMB Transfer Query Results
  /payment/loan/getPreferences:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPrefResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentLoanGetPreferences
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get loan payment Preferences
  /payment/loanDraw/add/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentLoanDrawAddValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Loan Draw Add
  /payment/loanDraw/update/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentLoanDrawUpdateValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Loan Draw Edit
  /payment/loanPay/add/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentLoanPayAddValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Loan Pay Add
  /payment/loanPay/update/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentLoanPayUpdateValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Loan Pay Edit
  /payment/quickEntry:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickEntryResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentQuickEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickEntryRequest'
        required: true
      summary: Save quick entry payment(s) created from template(s)
  /payment/quickEntry/getLookupResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentQuickEntryGetLookupResults
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get user entitled templates and template groups for quick entry payment
  /payment/rtp-rec/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentRtp-recGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get RTP Received Payment Entitled Actions
  /payment/rtp-rec/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentRtp-recGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Real Time Submitted List View
  /payment/rtp/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - payment
      operationId: postPaymentRtpGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get RTP Submitted Payment Entitled Actions
  /payment/rtp/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentRtpGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Real Time Submitted List View
  /payment/rtp/receivedPmt/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentRtpReceivedPmtGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get model for Received RTP Payment
  /payment/rtp/receivedPmt/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - payment
      operationId: postPaymentRtpReceivedPmtRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get Received RTP Payment with ack entitlement
  /payment/runAuditHistoryReport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunReportResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentRunAuditHistoryReport
      requestBody:
        $ref: '#/components/requestBodies/RunReportRequest'
      summary: Request a Payment Audit History report to be run
  /payment/transfer/add/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentTransferAddValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Transfer Add
  /payment/transfer/getAuditFieldsModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - payment
      operationId: postPaymentTransferGetAuditFieldsModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: get Transfer Payments model containing Audit Related fields only
  /payment/transfer/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentTransferGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Transfer Payments List View
  /payment/transfer/update/validateOnly:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - payment
      operationId: postPaymentTransferUpdateValidateOnly
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Run Validation Only for Transfer Edit
  /paymentAutomation/detail/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - paymentAutomation
      operationId: postPaymentAutomationDetailGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Automation Detail Entitled Actions
  /paymentAutomation/detail/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - paymentAutomation
      operationId: postPaymentAutomationDetailGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get list of actions on a file import
  /paymentAutomation/download:
    get:
      responses:
        '200':
          description: OK
      tags:
        - paymentAutomation
      operationId: getPaymentAutomationDownload
      summary: Download Payment Automation Files
  /paymentAutomation/summary/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - paymentAutomation
      operationId: postPaymentAutomationSummaryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Automation Summary Entitled Actions
  /paymentAutomation/summary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - paymentAutomation
      operationId: postPaymentAutomationSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get list of file imports
  /paymentExport/listView/corp/exportListView:
    post:
      responses:
        '200':
          description: OK
      tags:
        - paymentExport
      operationId: postPaymentExportListViewCorpExportListView
      summary: Export Payment List View
  /paymentTemplate/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - paymentTemplate
      operationId: postPaymentTemplateGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Common List View
  /profileService/addProfile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProfileResponse'
          description: Output type
      tags:
        - profileService
      operationId: postProfileServiceAddProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProfileRequest'
        required: true
      summary: Create a filter profile
  /profileService/deleteProfile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfileResponse'
          description: Output type
      tags:
        - profileService
      operationId: postProfileServiceDeleteProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProfileRequest'
        required: true
      summary: Create a filter profile
  /profileService/getProfile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
          description: Output type
      tags:
        - profileService
      operationId: postProfileServiceGetProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProfileRequest'
        required: true
      summary: Create a filter profile
  /profileService/updateProfile:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileResponse'
          description: Output type
      tags:
        - profileService
      operationId: postProfileServiceUpdateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
        required: true
      summary: Create a filter profile
  /pushNotificationService/pushNotification:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationsResponse'
          description: Output type
      tags:
        - pushNotificationService
      operationId: postPushNotificationServicePushNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationsRequest'
        required: true
      summary: 'Push Notification for Mobile Devices '
  /qexport/createExport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QExportResponse'
          description: Output type
      tags:
        - qexport
      operationId: postQexportCreateExport
      requestBody:
        $ref: '#/components/requestBodies/QExportRequest'
      summary: Database Export rest service
  /rate/getIndicativeRate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicativeRateResponse'
          description: Output type
      tags:
        - rate
      operationId: postRateGetIndicativeRate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicativeRateRequest'
        required: true
      summary: 'Get Indicative Rate and Amount '
  /rate/getrate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FXResponse'
          description: Output type
      tags:
        - rate
      operationId: postRateGetrate
      requestBody:
        $ref: '#/components/requestBodies/FXRequest'
      summary: 'Get Realtime FX Rate and Amount '
  /rate/trade:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FXResponse'
          description: Output type
      tags:
        - rate
      operationId: postRateTrade
      requestBody:
        $ref: '#/components/requestBodies/FXRequest'
      summary: Confirm FX Rate and Trade
  /rate/validatecontract:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateContractRestResponse'
          description: Output type
      tags:
        - rate
      operationId: postRateValidatecontract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateContractRestRequest'
        required: true
      summary: 'Validate Contract ID and return FX Rate '
  /realTimeReceivedPayment/conversation/acknowledgement/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTPConversationActionResponse'
          description: Output type
      tags:
        - realTimeReceivedPayment
      operationId: postRealTimeReceivedPaymentConversationAcknowledgementAdd
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Add a message for a Payment Acknowledgement of a Received Payment
  /realTimeReceivedPayment/conversation/acknowledgement/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.conversation.RTPConversationResponse
                type: string
          description: Output type
      tags:
        - realTimeReceivedPayment
      operationId: postRealTimeReceivedPaymentConversationAcknowledgementRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve the Payment Acknowledgement message for a Received Payment
  /realTimeReceivedPayment/conversation/messageAllotmentCheck:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTPConversationMessageStatusResponse'
          description: Output type
      tags:
        - realTimeReceivedPayment
      operationId: postRealTimeReceivedPaymentConversationMessageAllotmentCheck
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Indicate whether the allotment of allowable messages for a Credit Transfer (Received Payment) has been reached
  /realTimeReceivedPayment/conversation/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.conversation.RTPConversationResponse
                type: string
          description: Output type
      tags:
        - realTimeReceivedPayment
      operationId: postRealTimeReceivedPaymentConversationRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve all the conversation messages for a Received Payment
  /realTimeReceivedPayment/conversation/requestForInfo/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTPConversationActionResponse'
          description: Output type
      tags:
        - realTimeReceivedPayment
      operationId: postRealTimeReceivedPaymentConversationRequestForInfoAdd
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Send a Request for Information message for a Received Payment
  /realTimeReceivedPayment/conversation/requestForInfo/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.conversation.RTPConversationResponse
                type: string
          description: Output type
      tags:
        - realTimeReceivedPayment
      operationId: postRealTimeReceivedPaymentConversationRequestForInfoRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve the Request for Information messages and the responses for a Received Payment
  /realTimeSubmittedPayment/conversation/acknowledgement/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.conversation.RTPConversationResponse
                type: string
          description: Output type
      tags:
        - realTimeSubmittedPayment
      operationId: postRealTimeSubmittedPaymentConversationAcknowledgementRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve the Payment Acknowledgement message for a Real Time Submitted Payment
  /realTimeSubmittedPayment/conversation/messageAllotmentCheck:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTPConversationMessageStatusResponse'
          description: Output type
      tags:
        - realTimeSubmittedPayment
      operationId: postRealTimeSubmittedPaymentConversationMessageAllotmentCheck
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Provides the current allotment of messages for a Real Time Submitted Payment
  /realTimeSubmittedPayment/conversation/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.conversation.RTPConversationResponse
                type: string
          description: Output type
      tags:
        - realTimeSubmittedPayment
      operationId: postRealTimeSubmittedPaymentConversationRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve all the conversation messages for a Real Time Submitted Payment
  /realTimeSubmittedPayment/conversation/requestForInfo/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.conversation.RTPConversationResponse
                type: string
          description: Output type
      tags:
        - realTimeSubmittedPayment
      operationId: postRealTimeSubmittedPaymentConversationRequestForInfoRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve the Request for Information messages and the responses for a Real Time Submitted Payment
  /realTimeSubmittedPayment/conversation/response/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTPConversationActionResponse'
          description: Output type
      tags:
        - realTimeSubmittedPayment
      operationId: postRealTimeSubmittedPaymentConversationResponseAdd
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Add a response for a Request for Information Message for a Real Time Submitted Payment
  /reportDownload/retrieveReport:
    get:
      responses:
        '200':
          description: OK
      tags:
        - reportDownload
      operationId: getReportDownloadRetrieveReport
      summary: Request the contents of a report
  /reporting/executeDetailAuditView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - reporting
      operationId: postReportingExecuteDetailAuditView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request the full audit history for a transaction. Waits up to configured threshold for export to finish.
  /reporting/executeIssueVoidsListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - reporting
      operationId: postReportingExecuteIssueVoidsListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a Issue Voids list view export to be run.  Waits up to configured threshold for export to finish.
  /reporting/executeListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - reporting
      operationId: postReportingExecuteListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a list view export to be run.  Waits up to configured threshold for export to finish.
  /reporting/executeLockboxListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - reporting
      operationId: postReportingExecuteLockboxListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request a lockbox list view export to be run.  Waits up to configured threshold for export to finish.
  /reporting/executePassthruDetailAuditView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewExportResponse'
          description: Output type
      tags:
        - reporting
      operationId: postReportingExecutePassthruDetailAuditView
      requestBody:
        $ref: '#/components/requestBodies/ListViewExportRequest'
      summary: Request the full audit history for a passthru transaction. Waits up to configured threshold for export to finish.
  /reporting/executeReport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunReportResponse'
          description: Output type
      tags:
        - reporting
      operationId: postReportingExecuteReport
      requestBody:
        $ref: '#/components/requestBodies/RunReportRequest'
      summary: Request a Jasper report to be run.  Waits up to configured threshold for report to finish.
  /requestForPayment/outgoingPaymentRequests/listView/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - requestForPayment
      operationId: postRequestForPaymentOutgoingPaymentRequestsListView{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on Request For Payments from List View. Valid actions are - delete, approve, unapprove and reject
  /requestForPayment/requestReceived/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - requestForPayment
      operationId: postRequestForPaymentRequestReceivedGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Entitled Actions
  /requestForPayment/requestReceived/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - requestForPayment
      operationId: postRequestForPaymentRequestReceivedGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment List View
  /requestForPayment/requestReceived/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - requestForPayment
      operationId: postRequestForPaymentRequestReceivedGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Entitled Actions
  /requestForPayment/requestReceived/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - requestForPayment
      operationId: postRequestForPaymentRequestReceived{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on Payments from List View. Valid actions are - delete, approve, unapprove and reject
  /requestTemplate/outgoingPaymentRequestTemplates/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - requestTemplate
      operationId: postRequestTemplateOutgoingPaymentRequestTemplatesGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment List View
  /returnedItem/getImage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Output type
      tags:
        - returnedItem
      operationId: postReturnedItemGetImage
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve Returned Item Image Data from Balance and Transaction Reporting Detail
  /risk/listView/ePositivePayDecision/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Electronic Positive Pay Decision Entitled Actions
  /risk/listView/ePositivePayDecision/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Electronic Positive Pay Decision List View
  /risk/listView/ePositivePayDecision/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Electronic Positive Pay Decision Model Info
  /risk/listView/ePositivePayDecision/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Electronic Positive Pay Query Results
  /risk/listView/ePositivePayDecision/multi/multiUpdate/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionMultiMultiUpdate{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on electronic positive pay for multiple updates
  /risk/listView/ePositivePayDecision/multi/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionMulti{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on electronic positive pay for multiple updates
  /risk/listView/ePositivePayDecision/requestRealTimeAchPosPaySuspects:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionRequestRealTimeAchPosPaySuspects
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Electronic Positive Pay Real Time Data
  /risk/listView/ePositivePayDecision/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecision{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on an Electronic Positive Pay Record. Valid actions are - update, approve, unapprove and read.
  /risk/listView/ePositivePayDecisionHistory/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionHistoryGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Electronic Positive Pay Decision History Entitled Actions
  /risk/listView/ePositivePayDecisionHistory/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - risk
      operationId: postRiskListViewEPositivePayDecisionHistoryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Electronic Positive Pay Decision History List View
  /roleMaintenance/role/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleAdd
      requestBody:
        $ref: '#/components/requestBodies/RoleEntitlementsMaintenanceModel'
      summary: Add a role with entitlements
  /roleMaintenance/role/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get role Entitled Actions
  /roleMaintenance/role/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get roleList View
  /roleMaintenance/role/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get role Model Info
  /roleMaintenance/role/getRoleEntitlementsMaintenanceModel/{userGroup}:
    post:
      parameters:
        - in: path
          name: userGroup
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleGetRoleEntitlementsMaintenanceModel{userGroup}
      summary: Get Role Entitlements Maintenance Model
  /roleMaintenance/role/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleRead
      requestBody:
        $ref: '#/components/requestBodies/RoleIdentifier'
      summary: Read a role with entitlements
  /roleMaintenance/role/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleUpdate
      requestBody:
        $ref: '#/components/requestBodies/RoleEntitlementsMaintenanceModel'
      summary: Update a role with entitlements
  /roleMaintenance/role/v2/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2Add
      requestBody:
        $ref: '#/components/requestBodies/RoleEntitlementModel'
      summary: Insert Role With Entitlement Record
  /roleMaintenance/role/v2/getDataEntitlements:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2GetDataEntitlements
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Bank Account Matrix
  /roleMaintenance/role/v2/getDataEntitlementsLive:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2GetDataEntitlementsLive
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Bank Account Matrix from Operational Table
  /roleMaintenance/role/v2/getRoleEntitlementModel/{userGroup}:
    post:
      parameters:
        - in: path
          name: userGroup
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntitlementModel'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2GetRoleEntitlementModel{userGroup}
      summary: Get Role Entitlements Model
  /roleMaintenance/role/v2/groupToTypes:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionLevel'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2GroupToTypes
      requestBody:
        $ref: '#/components/requestBodies/SectionLevel'
      summary: 'Translation from permissions across aggregate model to permissions by types '
  /roleMaintenance/role/v2/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntitlementModel'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2Read
      requestBody:
        $ref: '#/components/requestBodies/RoleIdentifier'
      summary: Read Role With Entitlement Record
  /roleMaintenance/role/v2/readLive:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEntitlementModel'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2ReadLive
      requestBody:
        $ref: '#/components/requestBodies/RoleIdentifier'
      summary: Read operational role with entitlement record
  /roleMaintenance/role/v2/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRoleV2Update
      requestBody:
        $ref: '#/components/requestBodies/RoleEntitlementModel'
      summary: Update Role With Entitlement Record
  /roleMaintenance/role/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - roleMaintenance
      operationId: postRoleMaintenanceRole{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on a role
  /security/directConnectlogin:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Output type
      tags:
        - security
      operationId: postSecurityDirectConnectlogin
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      summary: Login request
  /security/forgottenPasswordFeature:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgottenPasswordFeatureResponse'
          description: Output type
      tags:
        - security
      operationId: getSecurityForgottenPasswordFeature
      summary: Check if Forgotten Password Feature is enabled
  /security/keepAlive:
    get:
      responses:
        '200':
          description: OK
      tags:
        - security
      operationId: getSecurityKeepAlive
      summary: Refresh DGB Session
  /security/keepAliveToken:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepAliveTokenResponse'
          description: Output type
      tags:
        - security
      operationId: getSecurityKeepAliveToken
      summary: Get KeepAlive Token
  /security/livePersonUser:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivePersonResponse'
          description: Output type
      tags:
        - security
      operationId: getSecurityLivePersonUser
      summary: Create request for live person user
  /security/login:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Output type
      tags:
        - security
      operationId: postSecurityLogin
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      summary: Login request
  /security/logout:
    delete:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Output type
      tags:
        - security
      operationId: deleteSecurityLogout
      summary: End the current user session
  /security/logoutGet:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Output type
      tags:
        - security
      operationId: getSecurityLogoutGet
      summary: End the current user session using a HTTP GET method
  /security/sendKeepAliveToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeepAliveTokenResponse'
          description: Output type
      tags:
        - security
      operationId: postSecuritySendKeepAliveToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeepAliveTokenRequest'
        required: true
      summary: Get KeepAlive Token using a POST
  /security/ssoKeepAlivePoller:
    get:
      responses:
        '200':
          description: OK
      tags:
        - security
      operationId: getSecuritySsoKeepAlivePoller
      summary: 'Refresh DGB Session when the UI polls after the vendor calls the keepalive service '
  /security/user:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
          description: Output type
      tags:
        - security
      operationId: getSecurityUser
      summary: Get the current session user
  /securityChallengeQuestions/getRandomChallengeQuestions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomQuesResponse'
          description: Output type
      tags:
        - securityChallengeQuestions
      operationId: postSecurityChallengeQuestionsGetRandomChallengeQuestions
      requestBody:
        $ref: '#/components/requestBodies/QAChallengeLoginRequest'
      summary: Retrieve random security questions for a user
  /securityChallengeQuestions/validateQAChallenge:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QAChallengeResponse'
          description: Output type
      tags:
        - securityChallengeQuestions
      operationId: postSecurityChallengeQuestionsValidateQAChallenge
      requestBody:
        $ref: '#/components/requestBodies/QAChallengeRequest'
      summary: Validate User Answers
  /serviceRequest/freeform/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformAdd
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Create a new free form service request
  /serviceRequest/freeform/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformDelete
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Delete a service request
  /serviceRequest/freeform/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get entitled actions
  /serviceRequest/freeform/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all service requests
  /serviceRequest/freeform/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get information on the data model, e.g. required fields and validation info
  /serviceRequest/freeform/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieves a specific service request
  /serviceRequest/freeform/reject:
    post:
      responses:
        '200':
          description: OK
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformReject
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Reject a service request
  /serviceRequest/freeform/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeformUpdate
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Update a free form service request
  /serviceRequest/freeform/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - serviceRequest
      operationId: postServiceRequestFreeform{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on a service request
  /serviceRequest/notes/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestNotesAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestNote'
        required: true
      summary: Create a new note for a service request
  /serviceRequest/notes/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - serviceRequest
      operationId: postServiceRequestNotesGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: List all notes for service requests
  /smbMenu:
    get:
      responses:
        '200':
          description: OK
      tags:
        - smbMenu
      operationId: getSmbMenunull
      summary: Retrieve a users menu.
  /ssoFieldValues/process:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - ssoFieldValues
      operationId: postSsoFieldValuesProcess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSOFieldValueRequest'
        required: true
      summary: Process sso tpv field values
  /strict/accountGroups/readAll:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManyItemsWithChildren'
          description: Output type
      tags:
        - strict/accountGroups
      operationId: postStrictAccountGroupsReadAll
      requestBody:
        $ref: '#/components/requestBodies/ReadAllFilterRequest'
      summary: Read multiple account groups with accounts
  /strict/accountGroups/update:
    post:
      responses:
        '200':
          description: OK
      tags:
        - strict/accountGroups
      operationId: postStrictAccountGroupsUpdate
      requestBody:
        $ref: '#/components/requestBodies/ManyItemsWithChildren'
      summary: Save multiple account groups with accounts
  /strict/advanceFilter/getFilterFields:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFilterFieldsResponse'
          description: Output type
      tags:
        - strict/advanceFilter
      operationId: postStrictAdvanceFilterGetFilterFields
      requestBody:
        $ref: '#/components/requestBodies/GetFilterFieldsRequest'
      summary: Get the set of filter fields for a filter ID
  /strict/audit/detailAuditListView/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/audit
      operationId: postStrictAuditDetailAuditListViewGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Detail Payment and Template Audit Log
  /strict/balanceAndTransaction/accountSummary/getAccountSections/{tabId}:
    post:
      parameters:
        - in: path
          name: tabId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionAccountSummaryGetAccountSections{tabId}
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      summary: Has Deposit/Loan Account Access
  /strict/balanceAndTransaction/customReporting/getRealTimeInformation:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionCustomReportingGetRealTimeInformation
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Make Real-time balance and transaction call
  /strict/balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /strict/balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Totals
  /strict/balanceAndTransaction/depositAccounts/ALLACCOUNTS/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsALLACCOUNTSAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Accounts Summary List View
  /strict/balanceAndTransaction/depositAccounts/accountSummary/getAccountAccess:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsAccountSummaryGetAccountAccess
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Has Deposit/Loan Account Access
  /strict/balanceAndTransaction/depositAccounts/accountSummary/getCombinedUngroupedAccountSummaryTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedUngroupedAccountSummaryTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Ungrouped Account Summary Totals
  /strict/balanceAndTransaction/depositAccounts/accountSummary/getCombinedUngroupedAccounts:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsAccountSummaryGetCombinedUngroupedAccounts
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Combined Ungrouped Account List
  /strict/balanceAndTransaction/depositAccounts/accountSummary/requestRealTimeBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsAccountSummaryRequestRealTimeBalances
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Balances for Deposit Accounts
  /strict/balanceAndTransaction/depositAccounts/currentDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsCurrentDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /strict/balanceAndTransaction/depositAccounts/getCombinedReportingTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsGetCombinedReportingTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Custom Reporting Transactions List View
  /strict/balanceAndTransaction/depositAccounts/getSearchTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsGetSearchTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /strict/balanceAndTransaction/depositAccounts/getTransactions/checkRealTimeResponse:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponse
      requestBody:
        $ref: '#/components/requestBodies/postStrictBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponseBody'
      summary: Polling service for Real Time Transactions response
  /strict/balanceAndTransaction/depositAccounts/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /strict/balanceAndTransaction/depositAccounts/getTransactions/requestRealTimeTransactions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsGetTransactionsRequestRealTimeTransactions
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Transactions for Deposit Accounts
  /strict/balanceAndTransaction/depositAccounts/previousDay/getSearchTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsPreviousDayGetSearchTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View - Previous Day transactions only
  /strict/balanceAndTransaction/depositAccounts/previousDay/getTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionDepositAccountsPreviousDayGetTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Deposit Account Transactions List View
  /strict/balanceAndTransaction/getCurrentAccountBalance:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentAccountBalanceResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionGetCurrentAccountBalance
      requestBody:
        $ref: '#/components/requestBodies/CurrentAccountBalanceRequest'
      summary: 'Returns current account balance for an account '
  /strict/balanceAndTransaction/getCurrentAccountBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentAccountBalancesResponse'
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionGetCurrentAccountBalances
      requestBody:
        $ref: '#/components/requestBodies/CurrentAccountBalancesRequest'
      summary: Returns current account balance for a set of accounts
  /strict/balanceAndTransaction/getEntitledGIRTypes:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.ArrayList
                type: string
          description: Output type
      tags:
        - strict/balanceAndTransaction
      operationId: postStrictBalanceAndTransactionGetEntitledGIRTypes
      summary: Get all GIR types and entitled actions for the logged in user
  /strict/cm/listView/paymentFraudControl/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPaymentFraudControlGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Entitled Actions
  /strict/cm/listView/paymentFraudControl/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPaymentFraudControlGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment Fraud Control List View
  /strict/cm/listView/positivePayDecision/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPositivePayDecisionGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Positive Pay Decision Entitled Actions
  /strict/cm/listView/positivePayDecision/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPositivePayDecisionGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Positive Pay Decision List View
  /strict/cm/listView/positivePayDecision/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPositivePayDecisionGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Positive Pay Query Results
  /strict/cm/listView/positivePayDecision/multi/multiUpdate/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPositivePayDecisionMultiMultiUpdate{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on positive pay for multiple updates
  /strict/cm/listView/positivePayDecision/multi/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewPositivePayDecisionMulti{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on positive pay for multiple updates
  /strict/cm/listView/positivePayDecision/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - strict/cm
      operationId: postStrictCmListViewPositivePayDecision{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on an Positive Pay Record. Valid actions are - update, approve, unapprove and read.
  /strict/cm/listView/reversePositivePayDecision/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewReversePositivePayDecisionGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Reverse Positive Pay Decision Entitled Actions
  /strict/cm/listView/reversePositivePayDecision/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewReversePositivePayDecisionGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Reverse Positive Pay Decision List View
  /strict/cm/listView/reversePositivePayDecision/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewReversePositivePayDecisionGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Reverse Positive Pay Query Results
  /strict/cm/listView/reversePositivePayDecision/multi/multiUpdate/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewReversePositivePayDecisionMultiMultiUpdate{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on reverse positive pay for multiple updates
  /strict/cm/listView/reversePositivePayDecision/multi/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/cm
      operationId: postStrictCmListViewReversePositivePayDecisionMulti{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on reverse positive pay for multiple updates
  /strict/cm/listView/reversePositivePayDecision/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - strict/cm
      operationId: postStrictCmListViewReversePositivePayDecision{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on a Reverse Positive Pay Record.
  /strict/date/list:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateResponse'
          description: Output type
      tags:
        - strict/date
      operationId: postStrictDateList
      requestBody:
        $ref: '#/components/requestBodies/DateRequest'
      summary: Get business days
  /strict/girexport/createGIRExport:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QExportResponse'
          description: Output type
      tags:
        - strict/girexport
      operationId: postStrictGirexportCreateGIRExport
      requestBody:
        $ref: '#/components/requestBodies/QExportRequest'
      summary: Create GIR export rest service
  /strict/help/getHelpPage:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpPageResponse'
          description: Output type
      tags:
        - strict/help
      operationId: postStrictHelpGetHelpPage
      requestBody:
        $ref: '#/components/requestBodies/HelpPageRequest'
      summary: Retrieves the help page for the input product, function, type, action
  /strict/inquiry/getData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - strict/inquiry
      operationId: postStrictInquiryGetData
      requestBody:
        $ref: '#/components/requestBodies/InquiryDataRequest'
      summary: Retrieves inquiry data including both the headers and rows based on requested search type and search parameters
  /strict/inquiry/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - strict/inquiry
      operationId: postStrictInquiryGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Retrieves inquiry data based on custom filter and search parameters
  /strict/inquiry/getRowsData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InquiryDataResponse'
          description: Output type
      tags:
        - strict/inquiry
      operationId: postStrictInquiryGetRowsData
      requestBody:
        $ref: '#/components/requestBodies/InquiryDataRequest'
      summary: Retrieves inquiry rows data based on requested search type and search parameters
  /strict/inquiry/processServiceAction:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - strict/inquiry
      operationId: postStrictInquiryProcessServiceAction
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: 'Validates a field and returns relevant data '
  /strict/listViewFilter/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - strict/listViewFilter
      operationId: postStrictListViewFilterDelete
      requestBody:
        $ref: '#/components/requestBodies/ListViewDeleteRequest'
      summary: Remove a filter
  /strict/listViewFilter/getDefault:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - strict/listViewFilter
      operationId: postStrictListViewFilterGetDefault
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Gets a default list view filter for the logged in user
  /strict/listViewFilter/getListViewFilterDetails:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - strict/listViewFilter
      operationId: postStrictListViewFilterGetListViewFilterDetails
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: 'Returns the details for the requested Filtered List View '
  /strict/listViewFilter/getListViewFilters:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageListViewListResponse'
          description: Output type
      tags:
        - strict/listViewFilter
      operationId: postStrictListViewFilterGetListViewFilters
      requestBody:
        $ref: '#/components/requestBodies/ManageListViewListRequest'
      summary: 'Returns list of Filtered List Views '
  /strict/listViewFilter/save:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - strict/listViewFilter
      operationId: postStrictListViewFilterSave
      requestBody:
        $ref: '#/components/requestBodies/ListViewAddRequest'
      summary: Add a filter
  /strict/listViewFilter/setDefault:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.listviewfilter.ListViewResponse
                type: string
          description: Output type
      tags:
        - strict/listViewFilter
      operationId: postStrictListViewFilterSetDefault
      requestBody:
        $ref: '#/components/requestBodies/postStrictListViewFilterGetDefaultBody'
      summary: Sets a default list view filter for the logged in user
  /strict/loanreporting/accountSummary/getAcctGroupBalanceSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingAccountSummaryGetAcctGroupBalanceSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Totals
  /strict/loanreporting/accountSummary/getAcctGroupTotalsList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingAccountSummaryGetAcctGroupTotalsList
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Group Totals
  /strict/loanreporting/accountSummary/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingAccountSummaryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Accounts Summary List View
  /strict/loanreporting/accountSummary/requestRealTimeBalances:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.HashMap
                type: string
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingAccountSummaryRequestRealTimeBalances
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Request Real-time Balances for Loan Accounts
  /strict/loanreporting/getSearchTransactions/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingGetSearchTransactionsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Loan Account Transactions List View
  /strict/loanreporting/tieredLoanSubAccount/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingTieredLoanSubAccountGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get tiered loan sub account list view
  /strict/loanreporting/tieredLoanSubAccount/getListViewTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/loanreporting
      operationId: postStrictLoanreportingTieredLoanSubAccountGetListViewTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get tiered loan sub account totals
  /strict/mfaService/getSettings:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFASettingsResponse'
          description: Output type
      tags:
        - strict/mfaService
      operationId: postStrictMfaServiceGetSettings
      requestBody:
        $ref: '#/components/requestBodies/MFASettingsRequest'
      summary: Retrieves MFA Settings according to type of MFA configured
  /strict/mfaService/initiateOutOfBand:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateOutOfBandResponse'
          description: Output type
      tags:
        - strict/mfaService
      operationId: postStrictMfaServiceInitiateOutOfBand
      requestBody:
        $ref: '#/components/requestBodies/InitiateOutOfBandRequest'
      summary: Initiates Out Of Band MFA calls to provider
  /strict/mfaService/validate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateMFAResponse'
          description: Output type
      tags:
        - strict/mfaService
      operationId: postStrictMfaServiceValidate
      requestBody:
        $ref: '#/components/requestBodies/ValidateMFARequest'
      summary: Validates MFA secrets
  /strict/notifications/accessAchLargeBatchNotifications:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: postStrictNotificationsAccessAchLargeBatchNotifications
      summary: Mark user ACH Large Batch process notifications as read
  /strict/notifications/accessFileImportNotifications:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: postStrictNotificationsAccessFileImportNotifications
      summary: Mark user File Import notifications as read
  /strict/notifications/accessRecPayExceptions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: postStrictNotificationsAccessRecPayExceptions
      summary: Mark user Recurring Payment Exceptions as accessed
  /strict/notifications/getEntitledNotificationTypes:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledNotificationTypesResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: getStrictNotificationsGetEntitledNotificationTypes
      summary: Returns a list of Notification Types that the user has permission to access
  /strict/notifications/getNotificationData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationServiceResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: postStrictNotificationsGetNotificationData
      requestBody:
        $ref: '#/components/requestBodies/NotificationServiceRequest'
      summary: Rest End point that retrieves the notification data based on a subscription list
  /strict/notifications/getNotifications:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationsResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: postStrictNotificationsGetNotifications
      requestBody:
        $ref: '#/components/requestBodies/GetNotificationsRequest'
      summary: Get current user notifications
  /strict/notifications/getNotificationsByType:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationsResponse'
          description: Output type
      tags:
        - strict/notifications
      operationId: postStrictNotificationsGetNotificationsByType
      requestBody:
        $ref: '#/components/requestBodies/GetNotificationsRequest'
      summary: Get current user notifications based on the provided Notifications list
  /strict/payment/listView/corp/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/payment
      operationId: postStrictPaymentListViewCorpGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment List View
  /strict/payment/transfer/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/payment
      operationId: postStrictPaymentTransferGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Transfer Payments List View
  /strict/reportDownload/retrieveReport:
    get:
      responses:
        '200':
          description: OK
      tags:
        - strict/reportDownload
      operationId: getStrictReportDownloadRetrieveReport
      summary: Request the contents of a report
  /strict/risk/listView/ePositivePayDecision/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Electronic Positive Pay Decision Entitled Actions
  /strict/risk/listView/ePositivePayDecision/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Electronic Positive Pay Decision List View
  /strict/risk/listView/ePositivePayDecision/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Electronic Positive Pay Decision Model Info
  /strict/risk/listView/ePositivePayDecision/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Electronic Positive Pay Decision Query Results
  /strict/risk/listView/ePositivePayDecision/multi/multiUpdate/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionMultiMultiUpdate{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on an Electronic Positive Pay for multiple updates. Valid actions are -PAY,RETURN
  /strict/risk/listView/ePositivePayDecision/multi/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionMulti{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on an Electronic Positive Pay for multi updates. Valid actions are -Approve, Unapprove
  /strict/risk/listView/ePositivePayDecision/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecision{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on an Electronic Positive Pay Record. Valid actions are - PAY, RETURN, approve, unapprove and read.
  /strict/risk/listView/ePositivePayDecisionHistory/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - strict/risk
      operationId: postStrictRiskListViewEPositivePayDecisionHistoryGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Electronic Positive Pay Decision History List View
  /strict/tableMaintenance/getLookupResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupListViewResponse'
          description: Output type
      tags:
        - strict/tableMaintenance
      operationId: postStrictTableMaintenanceGetLookupResults
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get inquiry information
  /strict/tableMaintenance/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - strict/tableMaintenance
      operationId: postStrictTableMaintenanceGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Query Results
  /strict/tieredLoanSubAccount/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - strict/tieredLoanSubAccount/transactions/export
      operationId: getStrictTieredLoanSubAccountTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export tiered loan Accounts transactions List View
  /strict/workspaces/getAllDeeplinks:
    get:
      responses:
        '200':
          description: OK
      tags:
        - strict/workspaces
      operationId: getStrictWorkspacesGetAllDeeplinks
      summary: Gets all the Deeplinks
  /strict/workspaces/getWorkspaces:
    post:
      responses:
        '200':
          description: OK
      tags:
        - strict/workspaces
      operationId: postStrictWorkspacesGetWorkspaces
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve a users workspace info
  /tableMaint/add:
    post:
      responses:
        '200':
          description: OK
      tags:
        - tableMaint
      operationId: postTableMaintAdd
      requestBody:
        $ref: '#/components/requestBodies/TypeData'
      summary: Add a new type specific record
  /tableMaint/delete:
    post:
      responses:
        '200':
          description: OK
      tags:
        - tableMaint
      operationId: postTableMaintDelete
      requestBody:
        $ref: '#/components/requestBodies/TypeData'
      summary: Delete type specific records
  /tableMaint/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tableMaint
      operationId: postTableMaintGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Common List View
  /tableMaintenance/exportMap/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceExportMapGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: List of Entitled Actions for Export Map
  /tableMaintenance/exportMap/getExportDetailGridData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceExportMapGetExportDetailGridData
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Retrieves Export Map Detail Grid Data
  /tableMaintenance/exportMap/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceExportMapGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Export Maps List View
  /tableMaintenance/exportMap/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceExportMapGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Export Map Model Info
  /tableMaintenance/exportMap/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceExportMap{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
      summary: Perform an action on an Export Map Record. Valid actions are - read, insert, update, delete
  /tableMaintenance/getLookupResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupListViewResponse'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceGetLookupResults
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Get inquiry information
  /tableMaintenance/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Query Results
  /tableMaintenance/importMap/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceImportMapGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: List of Entitled Actions
  /tableMaintenance/importMap/getImportDetailGridData:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceImportMapGetImportDetailGridData
      requestBody:
        $ref: '#/components/requestBodies/InquiryListViewRequest'
      summary: Retrieves Import Detail Grid Data
  /tableMaintenance/importMap/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceImportMapGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Import Maps List View
  /tableMaintenance/importMap/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceImportMapGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Import Map Model Info
  /tableMaintenance/importMap/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - tableMaintenance
      operationId: postTableMaintenanceImportMap{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableMaintRequest'
        required: true
      summary: Perform an action on an Import Map Record. Valid actions are - read, insert, update, delete
  /template/listView/corp/approve:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpApprove
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Approve Payments from List View
  /template/listView/corp/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpDelete
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Approve Payments from List View
  /template/listView/corp/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Template Entitled Actions
  /template/listView/corp/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Payment Template List View
  /template/listView/corp/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Template Model Info
  /template/listView/corp/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get Query Results
  /template/listView/corp/reject:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpReject
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Reject Payments from List View
  /template/listView/corp/unapprove:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseHeaderMultiItem'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewCorpUnapprove
      requestBody:
        $ref: '#/components/requestBodies/MultiTypeSaveRequest'
      summary: Approve Payments from List View
  /template/listView/smb/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewSmbGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Template Entitled Actions
  /template/listView/smb/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewSmbGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get SMB Template List View
  /template/listView/smb/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewSmbGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get SMB Template Query Results
  /template/listView/smbEmployee/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewSmbEmployeeGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB Employee Template Entitled Actions
  /template/listView/smbEmployee/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewSmbEmployeeGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get SMB Employee Template List View
  /template/listView/smbEmployee/getQueryResults:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateListViewSmbEmployeeGetQueryResults
      requestBody:
        $ref: '#/components/requestBodies/QueryDataRequest'
      summary: Get SMB Template Employee Query Results
  /template/payment/getActionRestrictions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRestrictionQueryResult'
          description: Output type
      tags:
        - template
      operationId: postTemplatePaymentGetActionRestrictions
      requestBody:
        $ref: '#/components/requestBodies/ActionRestrictionQuery'
      summary: Get Payment Templates Action Restrictions
  /template/rtp/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - template
      operationId: postTemplateRtpGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get RTP Templates Entitled Actions
  /template/transfer/getActionRestrictions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionRestrictionQueryResult'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferGetActionRestrictions
      requestBody:
        $ref: '#/components/requestBodies/ActionRestrictionQuery'
      summary: Get Transfer Templates Action Restrictions
  /template/transfer/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Transfer Templates Entitled Actions
  /template/transfer/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Transfer Templates List View
  /template/transfer/recurring/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferRecurringAdd
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Add a Scheduled Transfer Template (Recurring Transfer Payment)
  /template/transfer/recurring/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferRecurringGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Scheduled Transfer Template (Recurring Transfer Payments) Entitled Actions
  /template/transfer/recurring/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferRecurringGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Scheduled Transfer Template (Recurring Transfer Payments) List View
  /template/transfer/recurring/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - template
      operationId: postTemplateTransferRecurringRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve a Scheduled Transfer Template (Recurring Transfer Payment)
  /template/transfer/recurring/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - template
      operationId: postTemplateTransferRecurringUpdate
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Update a Scheduled Transfer Template (Recurring Transfer Payment)
  /tieredLoanSubAccount/transactions/export/listView:
    get:
      responses:
        '200':
          description: OK
      tags:
        - tieredLoanSubAccount/transactions/export
      operationId: getTieredLoanSubAccountTransactionsExportListView
      requestBody:
        $ref: '#/components/requestBodies/getStrictTieredLoanSubAccountTransactionsExportListViewBody'
      summary: Export tiered loan Accounts transactions List View
  /tokenManagement/assignToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagementAssignToken
      requestBody:
        $ref: '#/components/requestBodies/TokenAssignmentRequest'
      summary: Token Assignment
  /tokenManagement/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagementgetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Template Entitled Actions
  /tokenManagement/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagementGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Token Management List View
  /tokenManagement/listTokens/{companyId}:
    post:
      parameters:
        - in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - tokenManagement
      operationId: postTokenManagementListTokens{companyId}
      summary: Fetch the tokens from RSA and save it in DGB
  /tokenManagement/markLostToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagementMarkLostToken
      requestBody:
        $ref: '#/components/requestBodies/TokenReplacementRequest'
      summary: Lost Token
  /tokenManagement/replaceToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagementReplaceToken
      requestBody:
        $ref: '#/components/requestBodies/TokenReplacementRequest'
      summary: Token Replacement
  /tokenManagement/tokensAudit/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - tokenManagement/tokensAudit
      operationId: postTokenManagementTokensAuditgetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Token Management Audit Entitled Actions
  /tokenManagement/tokensAudit/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tokenManagement/tokensAudit
      operationId: postTokenManagementTokensAuditGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Token Management List View
  /tokenManagement/unassignToken:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagementUnassignToken
      requestBody:
        $ref: '#/components/requestBodies/TokenAssignmentRequest'
      summary: Token Unassignment
  /tokenManagement/user/fetchUsers:
    post:
      responses:
        '200':
          description: OK
      tags:
        - tokenManagement/user
      operationId: postTokenManagementUserFetchUsers
      summary: Fetch the users from RSA and save it in DGB
  /tokenManagement/user/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - tokenManagement/user
      operationId: postTokenManagementUsergetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Payment Template Entitled Actions
  /tokenManagement/user/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - tokenManagement/user
      operationId: postTokenManagementUserGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Token Management List View
  /tokenManagement/user/unLock:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenManagementResponse'
          description: Output type
      tags:
        - tokenManagement/user
      operationId: postTokenManagementUserUnLock
      requestBody:
        $ref: '#/components/requestBodies/TokenManagementRequest'
      summary: Token status update
  /tokenManagement/user/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenManagementResponse'
          description: Output type
      tags:
        - tokenManagement/user
      operationId: postTokenManagementUser{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenManagementRequest'
        required: true
      summary: Used for enable and disable user, valid actions are ENABLEUSER or DISABLEUSER
  /tokenManagement/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - tokenManagement
      operationId: postTokenManagement{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenManagementRequest'
        required: true
      summary: Token status update
  /userMaintenance/listView/user/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Entitled Actions
  /userMaintenance/listView/user/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get UserList View
  /userMaintenance/listView/user/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Model Info
  /userMaintenance/listView/user/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.user.ReadUserResponse
                type: string
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Read a user with assigned roles
  /userMaintenance/listView/user/updateSetting/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserUpdateSettingGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Setting Model Info
  /userMaintenance/listView/user/updateSetting/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.user.ReadUserResponse
                type: string
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserUpdateSettingRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Read a user setting
  /userMaintenance/listView/user/updateSetting/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUserUpdateSettingUpdate
      requestBody:
        $ref: '#/components/requestBodies/TableMaintRequest'
      summary: 'Modify User Setting Record '
  /userMaintenance/listView/user/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceListViewUser{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiTypeSaveRequest'
        required: true
      summary: Perform an action on a user
  /userMaintenance/user/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserAdd
      requestBody:
        $ref: '#/components/requestBodies/TableMaintRequest'
      summary: Add a new User  record
  /userMaintenance/user/clearOTPDestinations:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserClearOTPDestinations
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Remove all OTP destinations for a user
  /userMaintenance/user/disable:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserDisable
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Disable User
  /userMaintenance/user/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Entitled Actions
  /userMaintenance/user/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get UserList View
  /userMaintenance/user/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Model Info
  /userMaintenance/user/getUserActionList:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserGetUserActionList
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: get the action list for a user
  /userMaintenance/user/list:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.ArrayList
                type: string
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserList
      requestBody:
        $ref: '#/components/requestBodies/ListRequest'
      summary: Get UserList View
  /userMaintenance/user/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.user.ReadUserResponse
                type: string
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Read a user with assigned roles
  /userMaintenance/user/restore:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserRestore
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Restore User
  /userMaintenance/user/startMobileUserRegistration:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserStartMobileUserRegistration
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Start the workflow to register a mobile device for a user.
  /userMaintenance/user/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserUpdate
      requestBody:
        $ref: '#/components/requestBodies/TableMaintRequest'
      summary: Modify User Record (_ADMIN-USERS-_USER)
  /userMaintenance/user/updateSetting/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserUpdateSettingGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get User Setting Model Info
  /userMaintenance/user/updateSetting/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: com.bottomline.webseries.services.rest.user.ReadUserResponse
                type: string
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserUpdateSettingRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Read a user setting
  /userMaintenance/user/updateSetting/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUserUpdateSettingUpdate
      requestBody:
        $ref: '#/components/requestBodies/TableMaintRequest'
      summary: 'Modify User Setting Record '
  /userMaintenance/user/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
      tags:
        - userMaintenance
      operationId: postUserMaintenanceUser{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Perform an action on a user
  /userSelfService/OTPDestinations/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - userSelfService
      operationId: postUserSelfServiceOTPDestinationsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get OTP Destinations List View
  /userSelfService/OTPDestinations/saveOPTDestinations:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveOTPDestinationsResponse'
          description: Output type
      tags:
        - userSelfService
      operationId: postUserSelfServiceOTPDestinationsSaveOPTDestinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveOTPDestinationsRequest'
        required: true
      summary: Save the current set of OTP contact destinations
  /userSelfService/changePassword:
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
          description: Output type
      tags:
        - userSelfService
      operationId: putUserSelfServiceChangePassword
      requestBody:
        $ref: '#/components/requestBodies/ChangePasswordRequest'
      summary: Change the current user's password
  /userSelfService/getCompany:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - userSelfService
      operationId: getUserSelfServiceGetCompany
      summary: Retrieve Company Information for logged in User
  /userSelfService/getUser:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValuePairList'
          description: Output type
      tags:
        - userSelfService
      operationId: getUserSelfServiceGetUser
      summary: Retrieve User Information for logged in User
  /userSelfService/mySettings/updateMySettings:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeUserSettingsResponse'
          description: Output type
      tags:
        - userSelfService
      operationId: postUserSelfServiceMySettingsUpdateMySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUserSettingsRequest'
        required: true
      summary: Perform UPDATE on a user's contact settings
  /userSelfService/resetPassword:
    put:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
          description: Output type
      tags:
        - userSelfService
      operationId: putUserSelfServiceResetPassword
      requestBody:
        $ref: '#/components/requestBodies/ChangePasswordRequest'
      summary: Reset the current user's password secured with token validation
  /userSelfService/ssoTpv/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - userSelfService
      operationId: postUserSelfServiceSsoTpv{action}
      requestBody:
        content:
          application/json:
            schema:
              format: com.bottomline.webseries.services.rest.user.MultiTypeSaveRequest
              type: string
        required: true
      summary: Perform DELETE, UPDATE, ADD on a user's SSO TPV settings
  /users/userCentric/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricAdd
      requestBody:
        $ref: '#/components/requestBodies/UserEntitlementsMaintenanceModel'
      summary: Insert User With Entitlement Record
  /users/userCentric/approve:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricApprove
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Approve User With Entitlement Record
  /users/userCentric/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserListRequest'
        required: true
      summary: Delete User With Entitlement Record
  /users/userCentric/getOperationalSMBUserWithEntitlements:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMBUserEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricGetOperationalSMBUserWithEntitlements
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Get SMB User Entitlements Operational Model
  /users/userCentric/getPermissionsByType/{userGroup}:
    post:
      parameters:
        - in: path
          name: userGroup
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterTabContents'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricGetPermissionsByType{userGroup}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterTabContents'
        required: true
      summary: 'Translation From Permissions Across Group Model to Permissions by Each Types '
  /users/userCentric/getSMBUserEntitlementsMaintenanceModel/{userGroup}:
    post:
      parameters:
        - in: path
          name: userGroup
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMBUserEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricGetSMBUserEntitlementsMaintenanceModel{userGroup}
      summary: Get New SMB User Entitlements Maintenance Model
  /users/userCentric/getSMBUserWithEntitlements:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMBUserEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricGetSMBUserWithEntitlements
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Get SMB User Entitlements Maintenance Model
  /users/userCentric/getUserEntitlementsMaintenanceModel/{userGroup}:
    post:
      parameters:
        - in: path
          name: userGroup
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricGetUserEntitlementsMaintenanceModel{userGroup}
      summary: Get User Entitlements Maintenance Model
  /users/userCentric/insertOrUpdateSMBUserEntitlements/{mode}:
    post:
      parameters:
        - in: path
          name: mode
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricInsertOrUpdateSMBUserEntitlements{mode}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMBUserEntitlementsMaintenanceModel'
        required: true
      summary: Save a SMB User Entitlements Maintenance Model
  /users/userCentric/list:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                format: java.util.ArrayList
                type: string
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricList
      requestBody:
        $ref: '#/components/requestBodies/ListRequest'
      summary: Get User Centric List View
  /users/userCentric/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntitlementsMaintenanceModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricRead
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Read User With Entitlement Record
  /users/userCentric/smb/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricSmbGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get SMB User Model Info
  /users/userCentric/smb/read:
    post:
      responses:
        '200':
          description: OK
      tags:
        - users
      operationId: postUsersUserCentricSmbRead
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Get SMB User Info
  /users/userCentric/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricUpdate
      requestBody:
        $ref: '#/components/requestBodies/UserEntitlementsMaintenanceModel'
      summary: Update User With Entitlement Record
  /users/userCentric/v2/add:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2Add
      requestBody:
        $ref: '#/components/requestBodies/UserEntitlementModel'
      summary: Insert User With Entitlement Record
  /users/userCentric/v2/copyUser:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2CopyUser
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Copy an existing source user to the destination user
  /users/userCentric/v2/getDataEntitlements:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2GetDataEntitlements
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Bank Account Matrix
  /users/userCentric/v2/getDataEntitlementsLive:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2GetDataEntitlementsLive
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Bank Account Matrix from Operational Table
  /users/userCentric/v2/getInterimDataEntitlementLimits:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2GetInterimDataEntitlementLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterimLimitsRequest'
        required: true
      summary: Get data entitlement limits from the session table
  /users/userCentric/v2/getUserEntitlementModel/{userGroup}:
    post:
      parameters:
        - in: path
          name: userGroup
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntitlementModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2GetUserEntitlementModel{userGroup}
      summary: Get User Entitlements Model
  /users/userCentric/v2/groupToTypes:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionLevel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2GroupToTypes
      requestBody:
        $ref: '#/components/requestBodies/SectionLevel'
      summary: 'Translation from permissions across aggregate model to permissions by types '
  /users/userCentric/v2/read:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntitlementModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2Read
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Read User With Entitlement Record
  /users/userCentric/v2/readLive:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntitlementModel'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2ReadLive
      requestBody:
        $ref: '#/components/requestBodies/UserIdentifier'
      summary: Read operational user with entitlement record
  /users/userCentric/v2/update:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2Update
      requestBody:
        $ref: '#/components/requestBodies/UserEntitlementModel'
      summary: Update User With Entitlement Record
  /users/userCentric/v2/updateInterimDataEntitlementLimits:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - users
      operationId: postUsersUserCentricV2UpdateInterimDataEntitlementLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterimLimitList'
        required: true
      summary: Update the data entitlement limit records in the session table
  /workspaces/getAllDeeplinks:
    get:
      responses:
        '200':
          description: OK
      tags:
        - workspaces
      operationId: getWorkspacesGetAllDeeplinks
      summary: Gets all the Deeplinks
  /workspaces/getAllWorkspaces:
    post:
      responses:
        '200':
          description: OK
      tags:
        - workspaces
      operationId: postWorkspacesGetAllWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      summary: Retrieve all workspaces
  /workspaces/getWorkspaces:
    post:
      responses:
        '200':
          description: OK
      tags:
        - workspaces
      operationId: postWorkspacesGetWorkspaces
      requestBody:
        $ref: '#/components/requestBodies/NameValuePairList'
      summary: Retrieve a users workspace info
  /workspaces/updateWorkspace:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - workspaces
      operationId: postWorkspacesUpdateWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSaveRequest'
        required: true
      summary: Updates user widgets with in the workspace
  checkFree/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFree
      operationId: postcheckFreeGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Registration Model Info
  checkFree/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFree
      operationId: postcheckFree{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free registration form submit
  checkFreeRXPAccounts/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - checkFreeRXPAccounts
      operationId: postcheckFreeRXPAccountsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Check Free Accounts Entitled Actions
  checkFreeRXPAccounts/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - checkFreeRXPAccounts
      operationId: postcheckFreeRXPAccountsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Check Free Accounts List View
  checkFreeRXPAccounts/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFreeRXPAccounts
      operationId: postcheckFreeRXPAccountsGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Accounts Model Info
  checkFreeRXPAccounts/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFreeRXPAccounts
      operationId: postcheckFreeRXPAccounts{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free Accounts form submit
  checkFreeRXPSubscriber/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFreeRXPSubscriber
      operationId: postcheckFreeRXPSubscriberGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Subscriber Model Info
  checkFreeRXPSubscriber/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFreeRXPSubscriber
      operationId: postcheckFreeRXPSubscriber{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free registration form submit
  checkFreeSMBAccounts/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - checkFreeSMBAccounts
      operationId: postcheckFreeSMBAccountsGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Check Free Accounts Entitled Actions
  checkFreeSMBAccounts/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - checkFreeSMBAccounts
      operationId: postcheckFreeSMBAccountsGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Check Free Accounts List View
  checkFreeSMBAccounts/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFreeSMBAccounts
      operationId: postcheckFreeSMBAccountsGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Accounts Model Info
  checkFreeSMBAccounts/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFreeSMBAccounts
      operationId: postcheckFreeSMBAccounts{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free Accounts form submit
  checkFreeSMBSubscriber/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFreeSMBSubscriber
      operationId: postcheckFreeSMBSubscriberGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Subscriber Model Info
  checkFreeSMBSubscriber/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFreeSMBSubscriber
      operationId: postcheckFreeSMBSubscriber{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free registration form submit
  checkFreeSMBUsers/getEntitledActions:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledActions'
          description: Output type
      tags:
        - checkFreeSMBUsers
      operationId: postcheckFreeSMBUsersGetEntitledActions
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Check Free Users Entitled Actions
  checkFreeSMBUsers/getListView:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - checkFreeSMBUsers
      operationId: postcheckFreeSMBUsersGetListView
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Check Free Users List View
  checkFreeSMBUsers/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFreeSMBUsers
      operationId: postcheckFreeSMBUsersGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Users Model Info
  checkFreeSMBUsers/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFreeSMBUsers
      operationId: postcheckFreeSMBUsers{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free Users form submit
  checkFreeSmallBusiness/getModelInfo:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
          description: Output type
      tags:
        - checkFreeSmallBusiness
      operationId: postcheckFreeSmallBusinessGetModelInfo
      requestBody:
        $ref: '#/components/requestBodies/GetModelInfoRequest'
      summary: Get Check Free Registration Model Info
  checkFreeSmallBusiness/{action}:
    post:
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
          description: Output type
      tags:
        - checkFreeSmallBusiness
      operationId: postcheckFreeSmallBusiness{action}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameValuePairList'
        required: true
      summary: Check Free registration form submit
  loan/getAcctType:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanAccountTypeResponse'
          description: Output type
      tags:
        - loan
      operationId: postloanGetAcctType
      requestBody:
        $ref: '#/components/requestBodies/LoanAccountTypeRequest'
      summary: Get Loan Account Type Info
  loan/getInterestRate:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanInterestRateResponse'
          description: Output type
      tags:
        - loan
      operationId: postloanGetInterestRate
      requestBody:
        $ref: '#/components/requestBodies/LoanAccountTypeRequest'
      summary: Get Loan Interest Rate
  lockboxAvailability/getDetailTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockboxAvailability
      operationId: postlockboxAvailabilityGetDetailTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Lockbox availability detail totals
  lockboxAvailability/getDetails:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockboxAvailability
      operationId: postlockboxAvailabilityGetDetails
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Lockbox availability detail totals
  lockboxAvailability/getSummary:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockboxAvailability
      operationId: postlockboxAvailabilityGetSummary
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Lockbox availability detail totals
  lockboxAvailability/getSummaryTotals:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListViewResponse'
          description: Output type
      tags:
        - lockboxAvailability
      operationId: postlockboxAvailabilityGetSummaryTotals
      requestBody:
        $ref: '#/components/requestBodies/ListViewRequest'
      summary: Get Lockbox availability summary totals
components:
  requestBodies:
    ActionRestrictionQuery:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionRestrictionQuery'
      required: true
    BOSAccountRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BOSAccountRequest'
      required: true
    BatchPaymentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchPaymentRequest'
      required: true
    BulkCheckExportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkCheckExportRequest'
      required: true
    CashFlowItemRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowItemRequest'
      required: true
    CashFlowLineRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowLineRequest'
      required: true
    CashFlowMatchModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowMatchModel'
      required: true
    CashFlowPlanRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowPlanRequest'
      required: true
    CashFlowScenarioRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CashFlowScenarioRequest'
      required: true
    ChangePasswordRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangePasswordRequest'
      required: true
    CheckDepositImageData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckDepositImageData'
      required: true
    ChildListViewRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChildListViewRequest'
      required: true
    CurrentAccountBalanceRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrentAccountBalanceRequest'
      required: true
    CurrentAccountBalancesRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrentAccountBalancesRequest'
      required: true
    DateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DateRequest'
      required: true
    EntitledEmailRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitledEmailRequest'
      required: true
    FImportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FImportRequest'
      required: true
    FXRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FXRequest'
      required: true
    GetFilterFieldsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetFilterFieldsRequest'
      required: true
    GetModelInfoRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetModelInfoRequest'
      required: true
    GetNotificationsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotificationsRequest'
      required: true
    GetTokenRegistrationCodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTokenRegistrationCodeRequest'
      required: true
    HelpPageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HelpPageRequest'
      required: true
    InitiateOutOfBandRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InitiateOutOfBandRequest'
      required: true
    InquiryDataRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InquiryDataRequest'
      required: true
    InquiryListViewRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InquiryListViewRequest'
      required: true
    ListRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListRequest'
      required: true
    ListViewAddRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListViewAddRequest'
      required: true
    ListViewDeleteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListViewDeleteRequest'
      required: true
    ListViewExportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListViewExportRequest'
      required: true
    ListViewRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListViewRequest'
      required: true
    LoanAccountTypeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoanAccountTypeRequest'
      required: true
    LoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginRequest'
      required: true
    MFASettingsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MFASettingsRequest'
      required: true
    ManageListViewListRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManageListViewListRequest'
      required: true
    ManyItemsWithChildren:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManyItemsWithChildren'
      required: true
    MobileMFAChallengeStateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MobileMFAChallengeStateRequest'
      required: true
    MobileRegistrationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MobileRegistrationRequest'
      required: true
    MultiTypeSaveRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MultiTypeSaveRequest'
      required: true
    NameValuePairList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NameValuePairList'
      required: true
    NotificationServiceRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotificationServiceRequest'
      required: true
    PanelProfileFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PanelProfileFilter'
      required: true
    QAChallengeLoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QAChallengeLoginRequest'
      required: true
    QAChallengeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QAChallengeRequest'
      required: true
    QExportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QExportRequest'
      required: true
    QueryDataRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryDataRequest'
      required: true
    ReadAllFilterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReadAllFilterRequest'
      required: true
    ReportDataRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportDataRequest'
      required: true
    ResetPinRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResetPinRequest'
      required: true
    RoleEntitlementModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleEntitlementModel'
      required: true
    RoleEntitlementsMaintenanceModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleEntitlementsMaintenanceModel'
      required: true
    RoleIdentifier:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleIdentifier'
      required: true
    RowIdentifier:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RowIdentifier'
      required: true
    RunReportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RunReportRequest'
      required: true
    ScheduledExport:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduledExport'
      required: true
    SectionLevel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SectionLevel'
      required: true
    TableMaintRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TableMaintRequest'
      required: true
    TokenActivationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenActivationRequest'
      required: true
    TokenAssignmentRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenAssignmentRequest'
      required: true
    TokenManagementRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenManagementRequest'
      required: true
    TokenReplacementRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokenReplacementRequest'
      required: true
    TransmissionProfile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransmissionProfile'
      required: true
    TypeData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TypeData'
      required: true
    UserEntitlementModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserEntitlementModel'
      required: true
    UserEntitlementsMaintenanceModel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserEntitlementsMaintenanceModel'
      required: true
    UserIdentifier:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserIdentifier'
      required: true
    ValidateMFARequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidateMFARequest'
      required: true
    getStrictTieredLoanSubAccountTransactionsExportListViewBody:
      content:
        application/json:
          schema:
            type: string
      required: true
    postStrictBalanceAndTransactionDepositAccountsGetTransactionsCheckRealTimeResponseBody:
      content:
        application/json:
          schema:
            format: java.util.HashMap
            type: string
      required: true
    postStrictListViewFilterGetDefaultBody:
      content:
        application/json:
          schema:
            format: com.bottomline.webseries.services.rest.listviewfilter.ListViewRequest
            type: string
      required: true
  schemas:
    AccessReportTypeRequest:
      properties:
        userGroup:
          type: string
        userId:
          type: string
      type: object
    AccessReportTypeResponse:
      properties:
        reportDescription:
          type: string
        reportType:
          type: string
      type: object
    AccessRequest:
      properties:
        actionMode:
          type: string
        entryMethod:
          type: string
        functionCode:
          type: string
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    AccessResponse:
      properties:
        actionMode:
          type: string
        entitled:
          type: boolean
        functionCode:
          type: string
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    AccountRequestInfo:
      properties:
        accountHostKey:
          description: accountHostKey
          type: string
        accountHostPin:
          description: accountHostPin
          type: string
        accountName:
          description: accountName
          type: string
        accountNumber:
          description: accountNumber
          type: string
        accountSubType:
          description: accountSubType
          type: string
        accountType:
          description: accountType
          type: string
        bankId:
          description: bankId
          type: string
        customFields:
          description: customFields
          items:
            type: object
          type: array
        holdExpirationDate:
          description: holdExpirationDate
          format: date-time
          type: string
        integrationCodes:
          description: The IntegrationCodes for this account Bank Code
          items:
            type: object
          type: array
      required:
        - accountNumber
        - accountType
        - bankId
      type: object
    AccountViewRequest:
      properties:
        account:
          additionalProperties:
            type: object
          type: object
        accountSearchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        fileName:
          type: string
        filterValues:
          additionalProperties:
            type: object
          type: object
        includeSummaryInfo:
          format: int32
          type: integer
        inquiryId:
          format: int32
          type: integer
        outputFormat:
          type: string
        pageType:
          type: string
        requestId:
          type: string
        searchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        separated:
          format: int32
          type: integer
        simulatedSession:
          type: boolean
        sortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        sortFieldsDebit:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        tranTotals:
          items:
            type: string
          type: array
      type: object
    ActionData:
      properties:
        actionMode:
          description: Action being performed e.g. INST / BATCH / TMPL
          type: string
        entryMethod:
          default: 0
          description: Entry method e.g. free form / import or from template
          format: int32
          type: integer
        functionCode:
          description: Function code denoting context of how the type is used. Examples are INST = paymment instructions, TMPL = payment template, MAINT = refreence data mainteance, RPT = reporting. In certain instance a wildcard '*' may be present. This indicates the type is being referenced across all valiid functions. This may be used in the case of accounts where they are enabled for a payment type both for instructions and templates.
          type: string
        productCode:
          description: Product code denoting product this type fall under, e.g. PAY for payments
          type: string
        typeCode:
          description: Type code denoting instruction or data type, e.g. FEDWIRE for US domestic wire payment
          type: string
      required:
        - actionMode
        - entryMethod
        - functionCode
        - productCode
        - typeCode
      type: object
    ActionEntitlementsByFunctionTypeEntryMethod:
      description: Represents a section for actions and restrictions belonging to a entry method.
      properties:
        approve:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for approve
        approveOwn:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for approve own
        authorize:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for authorize
        autoApprove:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for auto Approve
        confidential:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for confidential
        credit:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for allowing credits
        debit:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for allowing debits
        entryMethod:
          description: An enum that indicates the entry method
          enum:
            - notapplicable
            - freeForm
            - fromTemplate
            - fromRepetitive
            - imported
          type: string
        functionCode:
          description: The function code for the action.
          enum:
            - asterisk
            - accgpset
            - acctstch
            - acctaccs
            - apptn
            - beneaal
            - beneahal
            - positivePayInstruction
            - changePassword
            - checkManagement
            - cimbatch
            - ciminst
            - cmpastm
            - reversePositivePayInstruction
            - deroles
            - history
            - imageSearch
            - inq
            - imprt
            - jasperReport
            - lockbox
            - maintenance
            - paassign
            - paproflt
            - paprothr
            - profile
            - quickEntry
            - reconexc
            - reqrpt
            - roles
            - secprt
            - swidget
            - swkspace
            - templateSet
            - tool
            - twidget
            - twkspace
            - workspace
            - users
            - uwidgets
            - widgets
            - instruction
            - template
            - batch
            - batchTemplate
            - alert
            - report
            - other
            - statement
            - export
            - controlledDisbursement
            - lockboxAvailability
            - listrpt
            - largebatchrpt
            - msgs
            - request
            - reqtmpl
            - cff
            - automtn
          type: string
        functionGroup:
          description: The function group that this action belongs to.
          type: string
        getrate:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for getRate
        manage:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for manage
        modify:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for modify
        productCode:
          description: The product code for the action.
          type: string
        repair:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for repair
        reverse:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for reverse
        signatures:
          $ref: '#/components/schemas/NumericRestrictionApplicableWithValue'
          description: The restriction for signatures
        typeCode:
          description: The type code for the action.
          type: string
        typeCodeLabel:
          description: The label for the type code associated with the action.
          type: string
        typeGroup:
          description: The type group that this action belongs to.
          type: string
        typeGroupLabel:
          description: The label of the type group.
          type: string
        view:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for view
      type: object
    ActionGroupApplicableWithValue:
      description: Stores an action and booleans that indicates if the action is applicable and entitled.
      properties:
        action:
          description: A enum that indicates if the action type
          type: string
        applicable:
          description: A boolean that indicates if the action is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if the action is entitled
          type: boolean
      type: object
    ActionResponse:
      properties:
        challengeType:
          description: The type of challenge
          type: string
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        confirms:
          $ref: '#/components/schemas/ConfirmData'
          description: Confirmation information such as field property values
        crossSessionMessageId:
          description: The Cross Session Message ID returned by the Transmit Service when step up authentication is required
          type: string
        errorCode:
          description: A error code to provide more context if result is false
          format: int32
          type: integer
        message:
          description: A descriptive message
          items:
            type: object
          type: array
        result:
          description: True if the action was successful otherwise false
          type: boolean
        resultType:
          description: resultType
          type: string
      required:
        - challengeType
        - crossSessionMessageId
        - errorCode
        - message
        - result
      type: object
    ActionRestrictionQuery:
      description: Query Restriction Values for an Action
      properties:
        action:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user is querying against
        restrictions:
          description: List of Restrictions
          items:
            type: object
          type: array
      required:
        - action
        - restrictions
      type: object
    ActionRestrictionQueryResult:
      description: Query Restriction Values for an Action
      properties:
        action:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the restrictions are associated with
        restrictions:
          description: List of Restrictions from Query
          items:
            type: object
          type: array
      required:
        - action
        - restrictions
      type: object
    ActionWithSubtype:
      properties:
        actionMode:
          description: Action being performed e.g. INST / BATCH / TMPL
          type: string
        entryClass:
          description: entryClass
          type: string
        entryMethod:
          default: 0
          description: Entry method e.g. free form / import or from template
          format: int32
          type: integer
        functionCode:
          description: Function code denoting context of how the type is used. Examples are INST = paymment instructions, TMPL = payment template, MAINT = refreence data mainteance, RPT = reporting. In certain instance a wildcard '*' may be present. This indicates the type is being referenced across all valiid functions. This may be used in the case of accounts where they are enabled for a payment type both for instructions and templates.
          type: string
        productCode:
          description: Product code denoting product this type fall under, e.g. PAY for payments
          type: string
        subType:
          description: subType
          type: string
        typeCode:
          description: Type code denoting instruction or data type, e.g. FEDWIRE for US domestic wire payment
          type: string
      required:
        - actionMode
        - entryClass
        - entryMethod
        - functionCode
        - productCode
        - subType
        - typeCode
      type: object
    AddDepositItemRequest:
      properties:
        backImage:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing the back of the check deposit image. Required xmime:contentType attribute will contain mime type for image data.
        checkImageCategory:
          description: checkImageCategory for the new batch item
          type: string
        depositBatchId:
          description: Deposit Batch Id for the new batch
          type: string
        frontImage:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing check deposit image. Required xmime:contentType attribute will contain mime type for image data.
        imageInfo:
          $ref: '#/components/schemas/ImageInfo'
          description: Meta information for this image
        imagePreprocessState:
          description: imagePreprocessState for the new batch item
          type: string
        isFirstItem:
          description: true if this is the first item in the batch
          type: boolean
        isMultiItemBatch:
          description: true if this is the first item in the batch
          type: boolean
        itemNumber:
          description: Number of this item in the batch
          format: int64
          type: integer
        micr:
          description: micr for the new batch item
          type: string
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: The images of the checks for which transaction has been requested
          xml:
            name: RdcSessionData
        tenderType:
          description: tenderType for the new batch item
          type: string
      required:
        - backImage
        - frontImage
        - rdcSessionData
      type: object
    AddProfileRequest:
      properties:
        filters:
          items:
            type: string
          type: array
        profileData:
          $ref: '#/components/schemas/ProfileData'
      type: object
    AddProfileResponse:
      properties:
        profileNumber:
          format: int32
          type: integer
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    AddressBookResponse:
      properties:
        achOnlyFlag:
          type: boolean
        allowBeneEmails:
          type: boolean
        bankSortCode:
          type: string
        beneCountryCode:
          type: string
        defaultCurrency:
          type: string
        detailGrid:
          additionalProperties:
            items:
              additionalProperties:
                items:
                  additionalProperties:
                    type: string
                  type: object
                type: array
              type: object
            type: array
          type: object
        detailRecords:
          items:
            items:
              additionalProperties:
                type: string
              type: object
            type: array
          type: array
        draftCountryCheck:
          type: boolean
        errorCode:
          type: string
        freeFormTypesMap:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        getbankAddress1:
          type: string
        getbankAddress2:
          type: string
        getbankCity:
          type: string
        getbankName:
          type: string
        getbankState:
          type: string
        message:
          type: string
        payTypeCodes:
          items:
            type: string
          type: array
        paymentTypes:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        rtgsOnlyFlag:
          type: boolean
        rtpOnlyFlag:
          type: boolean
        secondCodeFieldFlag:
          type: boolean
        secondIntermediaryfreeFormTypesMap:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          type: object
        smbCheckBoxMap:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        sortCodeType:
          type: string
        sortCodeTypeMap:
          additionalProperties:
            type: string
          type: object
        subTypeClause:
          type: string
        success:
          type: boolean
        validCurrencies:
          items:
            type: string
          type: array
        validCurrencyDescMap:
          additionalProperties:
            type: string
          type: object
        viewId:
          type: string
      type: object
    AddressInfo:
      properties:
        senderAddress1:
          description: Sender Address Line 1
          type: string
        senderAddress2:
          description: Sender Address Line 2
          type: string
        senderCity:
          description: Sender City
          type: string
        senderCountry:
          description: Sender Country
          type: string
        senderName:
          description: Sender Name
          type: string
        senderPostalCode:
          description: Sender Postal Code
          type: string
        senderProvince:
          description: Sender Province
          type: string
        senderState:
          description: Sender State
          type: string
      type: object
    AddressList:
      properties:
        addressInfo:
          description: addressInfo
          items:
            type: object
          type: array
      type: object
    AddressSelected:
      properties:
        addressInfo:
          $ref: '#/components/schemas/AddressInfo'
          description: addressInfo
        isValid:
          description: True if the selected address info matches exactly one of the addresses in the returned address list.
          type: boolean
      required:
        - isValid
      type: object
    AdvanceFilterFieldData:
      properties:
        dataType:
          description: dataType
          type: string
        displayName:
          description: displayName
          type: string
        fieldName:
          description: fieldName
          type: string
        filterFieldOperator:
          description: filterFieldOperator
          items:
            type: object
          type: array
        filterSelectionData:
          description: filterSelectionData
          items:
            type: object
          type: array
      required:
        - dataType
        - displayName
        - fieldName
      type: object
    AlertRecipient:
      properties:
        emails:
          items:
            type: string
          type: array
        fax:
          items:
            type: string
          type: array
        name:
          type: string
        phonenumbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        sms:
          items:
            type: string
          type: array
      type: object
    AlertsRequest:
      properties:
        context:
          items:
            $ref: '#/components/schemas/NameValuePair'
          type: array
        grids:
          items:
            $ref: '#/components/schemas/Grid'
          type: array
        item:
          $ref: '#/components/schemas/NameValuePairList'
        recipients:
          items:
            $ref: '#/components/schemas/AlertRecipient'
          type: array
        searchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
      type: object
    AmountRestrictionApplicableWithValue:
      description: Represents a restriction with an amount as its value.
      properties:
        applicable:
          description: A boolean that indicates if the restriction is applicable.
          type: boolean
        assignedLimit:
          description: The assign value of the limit.
          format: int64
          type: integer
      type: object
    AnalyticsServiceSettings:
      properties:
        createLogURL:
          description: Add usage data service for the Analytics Server. This is the service to call when the collected UI data is sent
          type: string
        hostName:
          description: Hostname of the Analytics Server.
          type: string
        interval:
          description: The Interval value that determines the frequency of the calls to send the users usage data. Value must be in milliseconds.
          format: int32
          type: integer
        tenantId:
          description: The Tenant information
          type: string
        token:
          description: The JWT Token that the analytics client component uses for Authentication when data is sent to the Analytics Server
          type: string
      required:
        - createLogURL
        - hostName
        - tenantId
        - token
      type: object
    AnalyzeDepositImage:
      properties:
        formattedCheckAmount:
          description: Amount of the check
          type: string
      type: object
    AnalyzeDepositImageResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
          description: An action response indicating success / failure of the operation
        analyzeDepositImage:
          $ref: '#/components/schemas/AnalyzeDepositImage'
          description: Analyze the check
      required:
        - actionResponse
      type: object
    ApplicablePermissionWithValue:
      description: Represents a permission and the boolean flag that indicates if it is entitled.
      properties:
        entitled:
          description: A boolean that indicates if the permission is entitled.
          type: boolean
        permission:
          description: The permission
          type: string
        permissionLabel:
          description: The permission display label
          type: string
      type: object
    Array:
      type: object
    AuditRequest:
      properties:
        functionCode:
          type: string
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    AuthenticationResponse:
      description: Attributes returned after an authentication operation has been completed e.g. new logged on users preferences. Note all attributes are assumed to be for the logged on user unless otherwise stated
      properties:
        allowAccountUnmasking:
          description: The Account Unmasking setting of the user
          type: boolean
        allowFXUSDUser:
          description: The FX/USD setting of the user
          type: string
        cannotGrantBeyondOwnUser:
          description: The Cannot Grant Beyond Own setting of the user
          type: boolean
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: This is the Action that is being MFA Challenged.
        challengedRequired:
          description: Determines if an RSA AA MFA Challenge Has Been Initiated.
          type: boolean
        checkfreeAuthLevel:
          description: The Checkfree Authorization Level of the user
          type: string
        currencySymbol:
          description: The currency symbol used for the logged on user
          type: string
        datePattern:
          description: The pattern dates should be displayed on for the logged on user
          type: string
        dateSeparator:
          description: The date separator used for the logged on user
          type: string
        dateTimePattern:
          description: The pattern date values with time elements should be displayed on for the logged on user
          type: string
        decimalSeparator:
          description: The decimal separator for the logged on user
          type: string
        emailAddress:
          description: The Email Address of the user
          type: string
        exceededInactivityLimit:
          type: boolean
        group:
          description: The user group
          type: string
        hasUserEstablishedSecurityQuestions:
          description: Whether the user has established their security questions
          type: boolean
        id:
          description: The user identifier
          type: string
        lastLogin:
          description: Last successful log-in time for the user
          type: string
        locale:
          description: 'The locale of the logged on user '
          type: string
        machineNonce:
          description: machine authetication value from entrust to validate user access
          type: string
        marketSegment:
          description: Market segment name
          type: string
        membershipID:
          description: The membership number for company
          format: int64
          type: integer
        menuLayout:
          type: string
        message:
          description: Used to indicate generic messages e.g. login failed or if input was invalid
          type: string
        mobileInitiation:
          format: int32
          type: integer
        multiEntryForMaxRowCount:
          type: string
        name:
          description: The user name
          type: string
        otpSetup:
          description: Whether OTP has been set up for the user
          type: boolean
        passwordExpired:
          description: Whether the users password has expired
          type: boolean
        pinpointUrl:
          type: string
        rapportServer:
          type: string
        resetListViewState:
          description: If the user's entitlement has changed the resetListViewState indicator is set to true
          type: boolean
        responseCode:
          description: Response value to indicate success / failure
          enum:
            - '[NotAuthorized'
            - Authorized
            - LogoutSuccess]
          type: string
        sequenceNonce:
          description: user authetication value from entrust to validate user access
          type: string
        simulatedSession:
          type: boolean
        snippedId:
          type: string
        ssoFailedLoginUrl:
          description: If authentication fails this value is the URL passed in the initial request with attribute named ssoFailedLoginUrl.
          type: string
        ssoLogoutRedirectUrl:
          type: string
        tenantId:
          description: Tenant Id used to determine the ownership of companies/usergroup.
          type: string
        theme:
          type: string
        thousandsSeparator:
          description: The thousands separator for the logged on user
          type: string
        timezone:
          description: The users preferred time zone
          type: string
        token:
          description: The users token which must be used in subsequent requests
          type: string
        userPermissionSettings:
          description: Indicates if the company this user belongs to is Uce or Roles
          type: string
        utcOffset:
          description: UTC offset of the users preferred time zone
          type: string
      required:
        - challengedAction
        - currencySymbol
        - datePattern
        - dateSeparator
        - dateTimePattern
        - decimalSeparator
        - group
        - hasUserEstablishedSecurityQuestions
        - id
        - lastLogin
        - locale
        - marketSegment
        - membershipID
        - menuLayout
        - message
        - multiEntryForMaxRowCount
        - name
        - otpSetup
        - passwordExpired
        - pinpointUrl
        - rapportServer
        - responseCode
        - simulatedSession
        - snippedId
        - ssoFailedLoginUrl
        - ssoLogoutRedirectUrl
        - tenantId
        - theme
        - thousandsSeparator
        - timezone
        - token
        - userPermissionSettings
        - utcOffset
      type: object
    BOSAccountBalanceRequest:
      properties:
        accountIds:
          items:
            format: int64
            type: integer
          type: array
        endDate:
          type: string
        startDate:
          type: string
      type: object
    BOSAccountRequest:
      properties:
        aba:
          type: string
        accountId:
          format: int64
          type: integer
        accountNumber:
          type: string
        cashFlowEnabled:
          type: boolean
        minimumBalance:
          type: number
      type: object
    BOSStatus:
      properties:
        data:
          type: object
        errorCode:
          format: int32
          type: integer
        message:
          type: string
        success:
          type: boolean
      type: object
    BankIdentifier:
      properties:
        sortCode:
          description: ' Identifies an individual bank based on the format indictated by the type element.'
          type: string
        type:
          default: ABA
          description: ' Identifies the type/format used for the bank sort code. Values include: ABA, BIC, BSB'
          type: string
      type: object
    BatchPaymentRequest:
      description: Attributes used to describe a request to save a Batch Payment
      properties:
        grids:
          description: grids
          items:
            type: object
          type: array
        item:
          $ref: '#/components/schemas/NameValuePairList'
          description: list of name value pairs
        nextStep:
          description: indicator of what should be done next after grid is persisted
          type: string
        sortDirection:
          description: sort direction for sort field
          type: string
        sortField:
          description: name of colum indicating field to sort by
          type: string
      required:
        - item
        - nextStep
        - sortDirection
        - sortField
      type: object
    BatchTotalsRequest:
      properties:
        batchSeqNumber:
          format: int64
          type: integer
        effectiveDate:
          type: string
        entryClass:
          type: string
        functionCode:
          type: string
        productCode:
          type: string
        subType:
          type: string
        typeCode:
          type: string
        user:
          type: string
        userGroup:
          type: string
      type: object
    BatchTotalsResponse:
      properties:
        creditAmount:
          type: string
        creditCurrency:
          type: string
        creditTransactions:
          type: string
        debitAmount:
          type: string
        debitCurrency:
          type: string
        debitTransactions:
          type: string
        totalAmount:
          type: string
        totalCurrency:
          type: string
        totalTransactions:
          type: string
      type: object
    BatchUpdateRequest:
      properties:
        accountNumber:
          description: accountNumber
          type: string
        bankCode:
          description: bankCode
          type: string
        depositBatchId:
          description: depositBatchId
          type: string
        depositBatchItem:
          $ref: '#/components/schemas/DepositBatchItem'
          description: The collection of deposit items.
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: The images of the checks for which transaction has been requested
          xml:
            name: RdcSessionData
      required:
        - accountNumber
        - bankCode
        - depositBatchId
        - rdcSessionData
      type: object
    BillMaintRequest:
      properties:
        grids:
          items:
            $ref: '#/components/schemas/Grid'
          type: array
        item:
          $ref: '#/components/schemas/NameValuePairList'
        maxLength:
          format: int64
          type: integer
        position:
          format: int64
          type: integer
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
      type: object
    BooleanRestrictionApplicableWithValue:
      description: Represents a restriction with a boolean as it value.
      properties:
        applicable:
          description: A boolean that indicates if the restriction is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if the restriction is entitled
          type: boolean
      type: object
    BulkBatchPaymentRequests:
      description: Bulk Batch Payment Requests for taking action on a set of children
      properties:
        batchSeqNumber:
          description: Unique sequence number to identify child records for a batch
          format: int64
          type: integer
        entryClass:
          description: entry class of payments being updated
          type: string
        gridName:
          description: Name of grid
          type: string
        requests:
          description: List of Bulk Batch Payment Requests
          items:
            type: object
          type: array
      required:
        - entryClass
        - gridName
      type: object
    BulkCheckExportRequest:
      properties:
        accountFilter:
          type: string
        accountType:
          type: string
        actionData:
          $ref: '#/components/schemas/ActionData'
        customFilters:
          items:
            $ref: '#/components/schemas/CustomFilter'
          type: array
        endDate:
          type: string
        excludeHeader:
          type: string
        exportMapID:
          type: string
        fileName:
          type: string
        filterID:
          type: string
        outputContent:
          type: string
        postedFlag:
          type: string
        requestType:
          type: string
        searchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        sortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        split88Record:
          type: string
        startDate:
          type: string
        viewID:
          type: string
      type: object
    CancelMultiDepositBatchRequest:
      properties:
        depositBatchId:
          description: Deposit Batch Id for the batch
          type: string
        imageInfo:
          $ref: '#/components/schemas/ImageInfo'
          description: Meta information for this image
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: Batch session data
          xml:
            name: RdcSessionData
      required:
        - rdcSessionData
      type: object
    CashFlowChartRequest:
      properties:
        accountIds:
          items:
            format: int64
            type: integer
          type: array
        cashFlowPlanId:
          format: int64
          type: integer
        cashFlowPlanVersion:
          format: int64
          type: integer
        endDate:
          type: string
        multiYearPlanId:
          format: int64
          type: integer
        startDate:
          type: string
      type: object
    CashFlowGroupPlanLineModel:
      properties:
        assignedTo:
          type: string
        assignedToName:
          type: string
        groupPlanId:
          format: int64
          type: integer
        groupPlanVersion:
          format: int64
          type: integer
        lineId:
          format: int64
          type: integer
        multiYearSubPlanId:
          format: int64
          type: integer
        savedOn:
          type: string
        status:
          type: string
        subPlanName:
          type: string
        subPlanVersion:
          format: int64
          type: integer
      type: object
    CashFlowGroupPlanModel:
      properties:
        cashFlowGroupPlanLines:
          items:
            $ref: '#/components/schemas/CashFlowGroupPlanLineModel'
          type: array
        cashFlowPlanId:
          format: int64
          type: integer
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        description:
          type: string
        expectedDate:
          type: string
        fyEnd:
          type: string
        fyStart:
          type: string
        groupPlan:
          type: boolean
        multiYearPlanId:
          format: int64
          type: integer
        name:
          type: string
        savedBy:
          type: string
        savedOn:
          format: date-time
          type: string
        version:
          format: int64
          type: integer
      type: object
    CashFlowItemRequest:
      properties:
        ACCOUNTID:
          type: string
        ACCOUNTNUMBER:
          type: string
        CASHFLOWCATEGORY:
          type: string
        CASHFLOWCATEGORYID:
          type: string
        CASHFLOWITEMID:
          type: string
        CASHFLOWSCENARIOID:
          type: string
        CASHFLOWTYPE:
          type: string
        CURRENCY:
          type: string
        DELETEFUTUREITEMS:
          type: string
        DESCRIPTION:
          type: string
        EXPECTEDDATE:
          type: string
        FREQUENCY:
          type: string
        INCREASEBY:
          type: string
        INFLOW:
          type: string
        INSCENARIO:
          type: string
        ISOFFSET:
          type: string
        OUTFLOW:
          type: string
        PARENTITEMID:
          type: string
        RECURRENCEENDDATE:
          type: string
        RECURRING:
          type: string
        UPDATEFUTUREITEMS:
          type: string
        flatIncrease:
          type: boolean
        increaseAmount:
          format: double
          type: number
        increaseByPercentage:
          type: boolean
      type: object
    CashFlowLineRequest:
      properties:
        cashFlowLineId:
          format: int64
          type: integer
        cashFlowScenarios:
          items:
            $ref: '#/components/schemas/CashFlowScenarioRequest'
          type: array
        colorValue:
          format: int32
          type: integer
        name:
          type: string
        visible:
          type: boolean
      type: object
    CashFlowMatchModel:
      properties:
        cashFlowItemId:
          format: int64
          type: integer
        matchCashFlowItemIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    CashFlowPlanItemModel:
      properties:
        amount:
          type: number
        cashFlowCategoryId:
          format: int64
          type: integer
        monthNum:
          format: int32
          type: integer
      type: object
    CashFlowPlanModel:
      properties:
        asNewVersion:
          type: boolean
        cashFlowPlan:
          items:
            $ref: '#/components/schemas/CashFlowPlanItemModel'
          type: array
        cashFlowPlanId:
          format: int64
          type: integer
        createdBy:
          type: string
        createdOn:
          format: date-time
          type: string
        description:
          type: string
        expectedDate:
          type: string
        fyEnd:
          type: string
        fyStart:
          type: string
        groupPlan:
          type: boolean
        multiYearPlanId:
          format: int64
          type: integer
        name:
          type: string
        savedBy:
          type: string
        savedOn:
          format: date-time
          type: string
        version:
          format: int64
          type: integer
      type: object
    CashFlowPlanRequest:
      properties:
        cashFlowPlanId:
          format: int64
          type: integer
        fyEnd:
          type: string
        fyStart:
          type: string
        multiYearPlanId:
          format: int64
          type: integer
        name:
          type: string
        version:
          format: int64
          type: integer
      type: object
    CashFlowScenarioRequest:
      properties:
        cashFlowScenarioId:
          format: int64
          type: integer
        cashFlowScenarioKey:
          type: string
        name:
          type: string
      type: object
    CellData:
      properties:
        displayName:
          type: string
        field:
          type: string
        hidden:
          type: boolean
        name:
          type: string
        width:
          type: string
      type: object
    ChangePasswordRequest:
      description: Changes the password for the current User
      properties:
        newPassword:
          description: New Password.
          type: string
        oldPassword:
          description: Current Password.
          type: string
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
          description: WebSeries standard request fields
        token:
          description: Token provided in the request that is used for the validation of the request for password change .
          type: string
      required:
        - requestHeader
      type: object
    ChangePasswordResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: WebSeries standard response fields
      required:
        - responseHeader
      type: object
    ChangeUserSettingsRequest:
      description: Allows user to change some settings directly without administrative approval. User is identified based on user data in standard request header.
      properties:
        emailAddress:
          description: User's email address
          type: string
        faxNumber:
          description: The number of the User's fax
          type: string
        locale:
          description: User's locale
          type: string
        mobilePhoneNumber:
          description: The number of the User's cell phone
          type: string
        phoneNumber:
          description: The number of the User's phone
          type: string
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
          description: WebSeries standard request fields
        settings:
          description: List of group level settings. Each setting is a name/value pair.
          items:
            type: object
          type: array
        timeZoneId:
          description: User's timezone
          type: string
        userName:
          description: User's full name
          type: string
      required:
        - faxNumber
        - mobilePhoneNumber
        - phoneNumber
        - requestHeader
      type: object
    ChangeUserSettingsResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: WebSeries standard response fields
      required:
        - responseHeader
      type: object
    CheckDepositBatchRequest:
      properties:
        accountNumber:
          description: Account for which to retrieve history
          type: string
        bankCode:
          description: Bank Code
          type: string
        depositDescription:
          description: "Deposit Description\n\t\t\t\t\t"
          type: string
      type: object
    CheckDepositBatchResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
          description: "An action response indicating success / failure\n\t\t\t\t\t\tof the operation\n\t\t\t\t\t"
        depositBatchId:
          description: DepositBatchId returned from Ensenta for the new batch
          type: string
        errorResponseText:
          description: Error Message from Ensenta for the new batch response
          type: string
        localizedMessageText:
          description: Message from Ensenta for the new batch response
          type: string
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: "Check deposit history\n\t\t\t\t\t\tSession Data\n\t\t\t\t\t"
        status:
          description: Suspended company, batch response
          format: int64
          type: integer
      required:
        - actionResponse
      type: object
    CheckDepositHistoryRequest:
      properties:
        accountNumber:
          description: Account for which to retrieve history
          type: string
        bankCode:
          description: Bank Code
          type: string
        locationName:
          description: Location for image
          type: string
      type: object
    CheckDepositHistoryResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
          description: An action response indicating success / failure of the operation
        checkDepositHistoryDetails:
          description: The details of the checks for which history has been requested
          items:
            type: object
          type: array
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: Check deposit history Session Data
      required:
        - actionResponse
      type: object
    CheckDepositImageData:
      properties:
        backImage:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing the back of the check deposit image. Required xmime:contentType attribute will contain mime type for image data.
        batchUpdateRequest:
          $ref: '#/components/schemas/BatchUpdateRequest'
          description: The batch deposit items for update
        frontImage:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing check deposit image. Required xmime:contentType attribute will contain mime type for image data.
        imageInfo:
          $ref: '#/components/schemas/ImageInfo'
          description: Meta information for this image
        isCancelBatch:
          description: true if entire batch is cancelled
          type: boolean
        isFirstItem:
          description: true if this is the first item in the batch
          type: boolean
        isMultiItemBatch:
          description: true if this is the first item in the batch
          type: boolean
        isPostBatch:
          description: true if batch is posted
          type: boolean
        itemNumber:
          description: Number of this item in the batch
          format: int64
          type: integer
        postDepositBatchRequest:
          $ref: '#/components/schemas/PostDepositBatchRequest'
          description: The batch deposit items for update
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: The images of the checks for which transaction has been requested
          xml:
            name: RdcSessionData
      required:
        - backImage
        - batchUpdateRequest
        - frontImage
        - postDepositBatchRequest
        - rdcSessionData
      type: object
    CheckDepositImageRequest:
      properties:
        checkDate:
          description: Date associated with a check
          type: string
        checkNumber:
          description: Check Number
          type: string
        formattedCheckAmount:
          description: Amount of the check
          type: string
        itemNumber:
          description: Item Number for check deposit batch
          type: string
        locationName:
          description: Location for image
          type: string
        receiptNumber:
          description: ReceiptNumber for a check deposit
          type: string
        sessionStateId:
          description: Session State Id from the response
          type: string
        sessionToken:
          description: Session Token from the response
          type: string
        transactionID:
          description: Identifier of a deposited check
          type: string
      required:
        - locationName
        - transactionID
      type: object
    CheckDepositImageResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
          description: An action response indicating success / failure of the operation
        checkDepositImageData:
          $ref: '#/components/schemas/CheckDepositImageData'
          description: The images of the checks for which transaction has been requested
          xml:
            name: CheckDepositImageData
      required:
        - actionResponse
        - checkDepositImageData
      type: object
    CheckDepositResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
          description: An action response indicating success / failure of the operation
        amount:
          description: This is the current amount of the check.
          type: string
        checkNumber:
          description: The check number of the check as read by Ensenta’s OCR system.
          type: string
        fundsAvailabilityText:
          description: End-User facing text with Financial Institution’s (FI) funds availability messaging.
          type: string
        itemNumber:
          description: Number of this item in the batch
          format: int64
          type: integer
        micr:
          description: The MICR of the check as read by Ensenta’s OCR system.
          type: string
        ocrAmount:
          description: The amount of the check as read by Ensenta’s OCR system.
          type: string
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: The images of the checks for which transaction has been requested
          xml:
            name: RdcSessionData
        receiptNumber:
          description: The ReceiptNumber for the current Batch.
          type: string
        status:
          description: item status in the batch
          format: int64
          type: integer
        totalBatchAmount:
          description: Total batch amount, in decimal form.
          type: string
        userAmount:
          description: Amount of the check as submitted by the End-User.
          type: string
      required:
        - actionResponse
        - rdcSessionData
      type: object
    CheckIssueSummary:
      properties:
        amountTotal:
          type: number
        currency:
          type: string
        transactionCount:
          format: int64
          type: integer
        voidedIssue:
          type: boolean
      type: object
    CheckIssuesByGroupSummary:
      properties:
        identifier:
          enum:
            - ISSUE
            - VOID
            - CANCEL
            - STOP
          type: string
        identifierDescription:
          type: string
        issuesByGroup:
          items:
            $ref: '#/components/schemas/CheckIssueSummary'
          type: array
        transactionCount:
          format: int64
          type: integer
      type: object
    CheckIssuesSummary:
      properties:
        issuesByGroupSummary:
          items:
            $ref: '#/components/schemas/CheckIssuesByGroupSummary'
          type: array
      type: object
    ChildListViewRequest:
      properties:
        action:
          description: action
          type: string
        batchSeqNumber:
          description: Unique sequence number to identify child records for a batch
          format: int64
          type: integer
        disableDrillDown:
          default: false
          description: Flag to indicate whether drilling down into the detail is enabled or disabled
          type: boolean
        entryClass:
          description: "\n\t\t\t\t\t\tEntry Class is used to identify correct grid for the Nacha file import payments.\n\t\t\t\t\t"
          type: string
        entryMethod:
          description: entryMethod
          type: string
        keyFields:
          description: keyFields
          items:
            type: object
          type: array
        rowsPerPage:
          default: 0
          description: rowsPerPage
          format: int32
          type: integer
        searchFields:
          description: searchFields
          items:
            type: object
          type: array
        sortFields:
          description: sortFields
          items:
            type: object
          type: array
        startRow:
          default: 1
          description: startRow
          format: int32
          type: integer
        subType:
          description: subType
          type: string
        unmaskColumns:
          default: false
          description: Flag to indicate, when masking is enable, unmask server determined column(s)
          type: boolean
        viewId:
          description: View identifier.
          format: int64
          type: integer
      required:
        - disableDrillDown
        - rowsPerPage
        - startRow
        - unmaskColumns
        - viewId
      type: object
    ChildListViewResponse:
      description: Response for the listview with context for the whole list view as well as context for individual rows
      properties:
        context:
          $ref: '#/components/schemas/ServiceClientContext'
          description: context
        nextSeqNum:
          description: nextSeqNum
          format: int32
          type: integer
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
        responseParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: responseParameters
        rowHeader:
          description: rowHeader
          items:
            type: object
          type: array
        rows:
          description: rows
          items:
            type: object
          type: array
        rowsPerPage:
          default: 0
          description: rowsPerPage
          format: int32
          type: integer
        totalPages:
          default: 0
          description: totalPages
          format: int32
          type: integer
        totalRows:
          default: 0
          description: totalRows
          format: int32
          type: integer
        viewId:
          description: The corresponding VIEWID to the SYSLISTVIEWS
          type: string
        viewOwner:
          description: The user identifier who owns the view or _SYSTEM if it's application defined
          type: string
      required:
        - context
        - respHeader
        - responseParameters
        - rowsPerPage
        - totalPages
        - totalRows
      type: object
    ColumnData:
      description: Defines value data for a specific column
      properties:
        fieldName:
          description: Name of the field
          type: string
        fieldValue:
          description: Value of the field
          type: string
      required:
        - fieldName
        - fieldValue
      type: object
    ColumnInfo:
      properties:
        cellData:
          items:
            $ref: '#/components/schemas/CellData'
          type: array
        sortColumn:
          type: string
        sortDir:
          type: string
      type: object
    ComplexTypeGroupWithOverallLimits:
      description: Represents a section where the user may entitle all the actions and set the restrictions for a specific type.
      properties:
        aggregateTypes:
          $ref: '#/components/schemas/GroupContents'
          description: Represent a consolidation of all the entitlements that are common amongst the types.
        displayOrder:
          description: Not used
          format: int32
          type: integer
        entitled:
          description: A boolean that indicated if this complex type is entitled
          type: boolean
        overallBatchLimitForGroup:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The batch limit for all the types that belongs to this type group
        overallDailyLimitForGroup:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The daily limit for all the types that belongs to this type group
        overallTransactionLimitForGroup:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The transaction limit for all the types that belongs to this type group
        typeGroupId:
          description: The id of the type group.
          type: string
        typeGroupLabel:
          description: The label of the type group.
          type: string
        typesInGroup:
          description: Map of type-specific entries in type group keyed by type code; selected types with overall limits are here too
          items:
            $ref: '#/components/schemas/TypeGroupContents'
          type: array
      type: object
    ConfirmData:
      description: Information related to a confirmation action which has been performed
      properties:
        chainedAction:
          default: false
          description: If the action performed was a result of another action being performed first.
          type: boolean
        confirmResults:
          description: Detailed information about the confirmation being performed
          items:
            type: object
          type: array
        totalFail:
          default: 0
          description: Total number of items which failed.
          format: int32
          type: integer
        totalSuccess:
          default: 0
          description: Total number of items which succeeded.
          format: int32
          type: integer
      required:
        - chainedAction
        - totalFail
        - totalSuccess
      type: object
    ConsentRequest:
      properties:
        consentAccepted:
          type: boolean
      type: object
    CrossProfileSenderRequest:
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
          description: WebSeries standard request fields
        requestInfo:
          $ref: '#/components/schemas/CrossProfileSenderRequestInfo'
          description: Account Summary Information
      required:
        - requestHeader
        - requestInfo
      type: object
    CrossProfileSenderRequestInfo:
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountRequestInfo'
          description: accountInfo
        customFields:
          description: customFields
          items:
            type: object
          type: array
        selectedAddress:
          $ref: '#/components/schemas/AddressSelected'
          description: selectedAddress
      required:
        - accountInfo
      type: object
    CrossProfileSenderResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: WebSeries standard response fields including boolean result and optionally error code and error messages
        responseInfo:
          $ref: '#/components/schemas/CrossProfileSenderResponseInfo'
          description: Cross Profile Sender Address Information
      required:
        - responseHeader
        - responseInfo
      type: object
    CrossProfileSenderResponseInfo:
      properties:
        accountInfo:
          $ref: '#/components/schemas/AccountRequestInfo'
          description: accountInfo
        addressList:
          $ref: '#/components/schemas/AddressList'
          description: addressList
        customFields:
          description: customFields
          items:
            type: object
          type: array
        selectedAddress:
          $ref: '#/components/schemas/AddressSelected'
          description: selectedAddress
      type: object
    CurrentAccountBalanceRequest:
      properties:
        accountNumber:
          type: string
        accountSubType:
          type: string
        accountType:
          type: string
        bankCode:
          type: string
        currency:
          type: string
        functionCode:
          type: string
        productCode:
          type: string
        subAccountNum:
          type: string
        typeCode:
          type: string
      type: object
    CurrentAccountBalanceResponse:
      properties:
        balance:
          type: string
        balanceAsOf:
          type: string
        status:
          type: string
      type: object
    CurrentAccountBalancesRequest:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/CurrentAccountBalanceRequest'
          type: array
      type: object
    CurrentAccountBalancesResponse:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/CurrentAccountBalanceResponse'
          type: array
      type: object
    CustomContentModel:
      properties:
        contentList:
          items:
            $ref: '#/components/schemas/ExternalWidgetModel'
          type: array
        userGroup:
          type: string
        userId:
          type: string
      type: object
    CustomFilter:
      description: Custom filter criteria which can be specified using different filter name e.g. if expressing depends filter values
      properties:
        filterName:
          description: Name of filter e.g. Depends / CustomFilters
          type: string
        filterParam:
          description: Parameters to use.
          items:
            type: object
          type: array
      required:
        - filterName
        - filterParam
      type: object
    DataEntitlementMember:
      description: Represents a data entitlement value
      properties:
        checked:
          description: Used only when mixedState is true to indicate inclusion or exclusion of values from the existing data in the DB
          position: 4
          type: boolean
        value1:
          type: string
        value2:
          type: string
        value3:
          type: string
      type: object
    DataEntitlementRequest:
      description: Represents the users intention for what data entitlements should be set. As such it is only used for add and update.
      properties:
        currentFuture:
          type: boolean
        dataEntAttr:
          description: The data entitlement attribute.
          position: 2
          type: string
        exclusiveSet:
          type: boolean
        group:
          type: boolean
        members:
          description: Indicates if the values in the list should be added or removed
          items:
            $ref: '#/components/schemas/DataEntitlementMember'
          position: 7
          type: array
        mixedChangeSet:
          type: boolean
        newTypesInGroupOnModify:
          description: New types that may have been added to this product group when user been modified.  This field is only used if group=true and mixesChangeSet = true
          items:
            type: string
          position: 9
          type: array
        productCode:
          description: The product code of this data entitlement.  May also be the group id if this is a group request (group=true).
          type: string
        typeCode:
          description: The type code of this data entitlement.  For group request (group=true) this field is ignored and can be left empty
          position: 1
          type: string
        typeId:
          description: The type ID of this data entitlement (needed for estatements).  For group request (group=true) this field is ignored and can be left empty
          position: 8
          type: string
      type: object
    DataEntitlements:
      description: Represents the Data Entitlement object and the three attributes associated with it.
      properties:
        dataEntitlementAttPart1:
          description: The first attribute associated with data entitlement
          type: string
        dataEntitlementAttPart2:
          description: The second attribute associated with data entitlement
          type: string
        dataEntitlementAttPart3:
          description: The third attribute associated with data entitlement
          type: string
        dataEntitlementType:
          description: The data type associated with the data entitlement
          enum:
            - ACCOUNT
            - CREDITACCOUNT
            - CONTROLDISBURSEMENTACCOUNT
            - LOCKBOXAVAILABILITYACCOUNT
            - ACHCOMP
            - TEMPLATE
            - APPLICATION
            - LEGACYSYSTEMID
            - ESTATEMENTID
            - CONTACTTYPE
            - LOCKBOX
            - REPORTID
            - CLIENTLOCATION
            - EXTERNALWIDGET
            - TOALOCATION
            - CONTROLTOTAL
            - WAREHOUSE
            - NONE
          type: string
      type: object
    DataEntitlementsByType:
      description: Stores the data entitlements at the account level.
      properties:
        assignAll:
          description: Assign all data entitlements
          type: boolean
        availableRestrictionAtDataEntitlementLevel:
          description: A set of the available data restriction level.
          items:
            enum:
              - batch
              - transaction
              - daily
            type: string
          type: array
          uniqueItems: true
        configuredDataType:
          description: The configured cataType
          enum:
            - ACCOUNT
            - CREDITACCOUNT
            - CONTROLDISBURSEMENTACCOUNT
            - LOCKBOXAVAILABILITYACCOUNT
            - ACHCOMP
            - TEMPLATE
            - APPLICATION
            - LEGACYSYSTEMID
            - ESTATEMENTID
            - CONTACTTYPE
            - LOCKBOX
            - REPORTID
            - CLIENTLOCATION
            - EXTERNALWIDGET
            - TOALOCATION
            - CONTROLTOTAL
            - WAREHOUSE
            - NONE
          type: string
        dataEntAttr:
          type: string
        dataEntitlementsWithLimits:
          items:
            $ref: '#/components/schemas/DataEntitlementsWithLimits'
          type: array
        functionGroup:
          description: The  function group
          type: string
        inquiryId:
          description: The inquiry Id used to get the information regarding the account
          format: int32
          type: integer
        keyCol:
          description: The key inforamtion
          type: string
        type:
          description: The type code associated with the account
          type: string
      type: object
    DataEntitlementsWithLimits:
      description: Represents the date entittlements and restrictions for accounts
      properties:
        approve:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The approve entitlements
        batchLimit:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The batch limit restriction
        dailyLimit:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The daily limit restriction
        dataEntitlementAttPart1:
          description: The first attribute associated with data entitlement
          type: string
        dataEntitlementAttPart2:
          description: The second attribute associated with data entitlement
          type: string
        dataEntitlementAttPart3:
          description: The third attribute associated with data entitlement
          type: string
        dataEntitlementType:
          description: The data type associated with the data entitlement
          enum:
            - ACCOUNT
            - CREDITACCOUNT
            - CONTROLDISBURSEMENTACCOUNT
            - LOCKBOXAVAILABILITYACCOUNT
            - ACHCOMP
            - TEMPLATE
            - APPLICATION
            - LEGACYSYSTEMID
            - ESTATEMENTID
            - CONTACTTYPE
            - LOCKBOX
            - REPORTID
            - CLIENTLOCATION
            - EXTERNALWIDGET
            - TOALOCATION
            - CONTROLTOTAL
            - WAREHOUSE
            - NONE
          type: string
        manage:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The manage entitlements
        modify:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The modify entitlements
        repair:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The repair entitlements
        reverse:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The reverse entitlements
        transactionLimit:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The transaction limit restriction
      type: object
    DateRequest:
      properties:
        beneBankId:
          type: string
        beneBankType:
          type: string
        creditBankCountry:
          type: string
        creditCurrency:
          type: string
        dateProductType:
          type: string
        debitBank:
          type: string
        debitBankCountry:
          type: string
        debitCurrency:
          type: string
        entryClass:
          type: string
        origCompId:
          type: string
        origCompName:
          type: string
        paymentType:
          type: string
        preAdviseWires:
          type: string
        releaseLeadTime:
          type: string
        sameDayAch:
          type: string
        subType:
          type: string
        tnum:
          type: string
        totalNumNotOnUs:
          type: string
        tranDate:
          type: string
        typeCode:
          type: string
        valueDate:
          type: string
      type: object
    DateResponse:
      properties:
        availableMiddleDays:
          items:
            type: string
          type: array
        availableTranDays:
          items:
            type: string
          type: array
        businessDays:
          type: string
        cutoff:
          type: string
        cutoffDateTimeTz:
          type: string
        cutoffType:
          enum:
            - NORMAL
            - ONUS
          type: string
        defaultDay:
          type: string
        defaultForwardDays:
          format: int32
          type: integer
        earliestDay:
          type: string
        holidayConfigType:
          enum:
            - FX
            - NONE
            - NONFX
            - PREADV
            - ONUS
          type: string
        holidays:
          items:
            type: string
          type: array
        latestDay:
          type: string
        maxAdvancedDays:
          format: int32
          type: integer
        maxBackwardDays:
          format: int32
          type: integer
        maxForwardDays:
          format: int32
          type: integer
        minDaysForward:
          format: int32
          type: integer
        onUs:
          type: boolean
        tranDate:
          type: string
        userSetDateInvalid:
          type: boolean
        userSetValueDate:
          type: string
      type: object
    DeleteProfileRequest:
      properties:
        profileNumber:
          format: int32
          type: integer
      type: object
    DeleteProfileResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    DepositBatchItem:
      description: ' An Item in the Batch.'
      properties:
        backImage:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing the back of the check deposit image. Required xmime:contentType attribute will contain mime type for image data.
        frontImage:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing check deposit image. Required xmime:contentType attribute will contain mime type for image data.
        imageAmount:
          description: Updated Amount
          type: string
        isDeleted:
          description: true if this item needs to be deleted
          type: boolean
        itemNumber:
          description: ' The Item Number in the batch'
          type: string
      type: object
    DetailDataResponse:
      properties:
        grids:
          description: grids
          items:
            type: object
          type: array
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
        rows:
          description: rows
          items:
            type: object
          type: array
      required:
        - respHeader
      type: object
    DialogItem:
      properties:
        id:
          type: string
        label:
          type: string
        theItem:
          items:
            $ref: '#/components/schemas/NameValuePairString'
          type: array
        value:
          type: string
      type: object
    ElearningWidgetRequest:
      properties:
        external:
          type: boolean
        marketSegment:
          type: string
        widgetId:
          format: int64
          type: integer
      type: object
    EmailRecipient:
      properties:
        id:
          type: string
        name:
          type: string
        timeZoneID:
          type: string
      type: object
    EmailRecipientsResponse:
      properties:
        emailEntitlements:
          items:
            $ref: '#/components/schemas/EmailRecipient'
          type: array
      type: object
    EmailResetPasswordRequest:
      properties:
        emailResetPasswordKey:
          type: string
      type: object
    EmailResetPasswordResponse:
      properties:
        errorMessage:
          type: string
        hasUserEstablishedSecurityQuestions:
          type: boolean
        locale:
          type: string
        status:
          type: boolean
        userGroup:
          type: string
        userId:
          type: string
      type: object
    EndSessionRequest:
      properties:
        sessionStateId:
          description: Session State Id from the response
          type: string
        sessionToken:
          description: Session Token from the response
          type: string
      type: object
    Entitled:
      properties:
        applicable:
          description: A boolean that indicates if something is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if something is entitled
          type: boolean
      type: object
    EntitledAccount:
      description: Stores the account name and the number.
      properties:
        accountName:
          description: The name of the account
          type: string
        accountNumber:
          description: The account number
          type: string
      type: object
    EntitledActions:
      properties:
        actionModes:
          description: actionModes
          items:
            type: object
          type: array
        functionCode:
          description: functionCode
          type: string
        productCode:
          description: productCode
          type: string
        typeCode:
          description: typeCode
          type: string
      required:
        - actionModes
        - functionCode
        - productCode
        - typeCode
      type: object
    EntitledEmailRequest:
      properties:
        legacyReportId:
          type: string
        profileNum:
          type: string
        searchValue:
          type: string
        userGroup:
          type: string
        userId:
          type: string
      type: object
    EntitledNotificationType:
      description: Represents a Notification Type that a user has permission to access.
      properties:
        asyncEndpoint:
          description: Endpoint path for async realtime calls.
          type: string
        notificationAsyncEnabled:
          description: NotificationType is enabled for Async realtime calls.
          type: boolean
        notificationOrder:
          description: The Numeric Order defined for the Notification.
          format: int32
          type: integer
        notificationType:
          description: The Notification Type Code.
          type: string
        notificationTypeDescription:
          description: The Description for the Notification Type Code.
          type: string
      type: object
    EntitledNotificationTypesResponse:
      description: Represents the response with the list of Notification Types that a user has permission to access.
      properties:
        notificationTypes:
          description: The list of Entitled Notification Types
          items:
            $ref: '#/components/schemas/EntitledNotificationType'
          type: array
      type: object
    EntitlementContext:
      description: Provides the context of the entitlement i.e the productcode, functioncode, typecode and entrymethod as well as the actions, restrictions, and limits available.
      properties:
        actions:
          additionalProperties:
            $ref: '#/components/schemas/Entitled'
          description: A map of the available actions
          type: object
        entryMethod:
          description: An enum that indicates the entry method
          enum:
            - notapplicable
            - freeForm
            - fromTemplate
            - fromRepetitive
            - imported
          type: string
        functionCode:
          description: The function code for the action.
          type: string
        limits:
          additionalProperties:
            $ref: '#/components/schemas/RestrictedLong'
          description: A  map of the available limits
          type: object
        productCode:
          description: The product code for the action.
          type: string
        restrictions:
          additionalProperties:
            $ref: '#/components/schemas/RestrictedObject'
          description: A map of the available restrictions
          type: object
        typeCode:
          description: The type code for the action.
          type: string
        useActions:
          description: Indicate if using non standard actions
          type: boolean
      type: object
    EntitlementDataList:
      properties:
        item:
          description: item
          items:
            type: object
          type: array
      type: object
    EntitlementsRequest:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/AccessRequest'
          type: array
      type: object
    EntitlementsResponse:
      properties:
        entitlements:
          items:
            $ref: '#/components/schemas/AccessResponse'
          type: array
      type: object
    ErrorMessage:
      properties:
        alternateValues:
          $ref: '#/components/schemas/MessageParameterList'
        columnName:
          type: string
        errorCode:
          format: int32
          type: integer
        gridName:
          type: string
        gridRow:
          format: int32
          type: integer
        key:
          type: string
        locale:
          $ref: '#/components/schemas/Locale'
        modelKeyList:
          type: string
        scopeDescription:
          type: string
        stringValues:
          items:
            type: string
          type: array
        values:
          items:
            type: object
          type: array
        valuesAsMessageParameterList:
          $ref: '#/components/schemas/MessageParameterList'
      type: object
    ErrorMessages:
      properties:
        allMessages:
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
        errorKeys:
          items:
            type: string
          type: array
        errorsKeys:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ExternalAccountId:
      description: ' Identifies an account outside of WebSeries context.'
      properties:
        accountNumber:
          description: ' Account number. This needs to be combined with bank identifier (either ABA, BIC or other sort code) to uniquely identify an account.'
          type: string
        accountSubType:
          description: Account subtype
          type: string
        accountType:
          description: Account type e.g. DD, GL, SV
          type: string
        bankId:
          $ref: '#/components/schemas/BankIdentifier'
          description: bankId
        hostKey:
          description: Host Key associated with the account number. These two fields together uniquely identify the account.
          type: string
        hostPIN:
          description: Pin associated with the account number. These two fields together uniquely identify the account.
          type: string
        integrationCodes:
          description: The IntegrationCodes for this account Bank Code
          items:
            type: object
          type: array
      required:
        - accountNumber
        - bankId
      type: object
    ExternalWidgetContentEditModel:
      properties:
        htmlKeyValues:
          additionalProperties:
            type: string
          type: object
        marketSegment:
          type: string
        widgetId:
          format: int64
          type: integer
      type: object
    ExternalWidgetModel:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
        columnNumber:
          format: int32
          type: integer
        columnSpan:
          format: int32
          type: integer
        context:
          type: string
        dataEntitle:
          type: boolean
        dataProxify:
          type: string
        dataUrl:
          type: string
        dataVersion:
          type: string
        dataWidgetId:
          type: string
        displayOptions:
          items:
            type: string
          type: array
        externalWidgetType:
          enum:
            - WIDGET
            - MFA
            - NAVIGATION
            - FOOTER
          type: string
        fileName:
          type: string
        getwidgetName:
          type: string
        hasElearning:
          type: boolean
        height:
          format: int32
          type: integer
        helpPage:
          type: string
        iplat:
          type: boolean
        locked:
          type: boolean
        mfaUrl:
          type: string
        orientation:
          type: string
        remote:
          type: boolean
        rowNumber:
          format: int32
          type: integer
        tenantId:
          type: string
        trusted:
          type: boolean
        widgetDescription:
          type: string
        widgetId:
          format: int64
          type: integer
        widgetSize:
          type: string
      type: object
    FImportRequest:
      properties:
        eventName:
          type: string
        fileContent:
          type: string
        fileName:
          type: string
        importJCode:
          type: string
        importType:
          type: string
        parameterMapList:
          $ref: '#/components/schemas/NameValuePairList'
        paymentData:
          $ref: '#/components/schemas/NameValuePairList'
      type: object
    FXRequest:
      properties:
        items:
          description: "\n\t\t\t\t\t\tList of items that contain FX item request\n\t\t\t\t"
          items:
            type: object
          type: array
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
          description: requestHeader
      required:
        - requestHeader
      type: object
    FXResponse:
      properties:
        items:
          description: List of items that contain FX item response
          items:
            type: object
          type: array
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: responseHeader
        totalItems:
          description: Total number of records for query, Actual number returned in response is controled by paging parameters passed in request.
          format: int64
          type: integer
      required:
        - responseHeader
        - totalItems
      type: object
    FilterParseModel:
      properties:
        paramDisplayValue:
          additionalProperties:
            type: string
          type: object
        paramExcludeFromWhere:
          type: boolean
        paramName:
          type: string
        paramValue:
          type: string
      type: object
    ForgottenPasswordFeatureResponse:
      description: Attributes related to the forgotten password feature
      properties:
        isForgottenPasswordFeatureON:
          description: Determines whether the forgotten password feature is enabled or not
          type: boolean
      required:
        - isForgottenPasswordFeatureON
      type: object
    GetAccountSummaryRequest:
      properties:
        queryOffset:
          format: int32
          type: integer
        queryPagesize:
          format: int32
          type: integer
        widgetId:
          type: string
      type: object
    GetAccountSummaryResponse:
      properties:
        accountSummaryItems:
          description: accountSummaryItems
          items:
            type: object
          type: array
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
      required:
        - respHeader
      type: object
    GetApplicationResourcesResponse:
      properties:
        applicationResource:
          description: applicationResource
          items:
            type: object
          type: array
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: WebSeries standard response fields including boolean result and optionally error code and error messages
      required:
        - responseHeader
      type: object
    GetDefaultsRequest:
      properties:
        widgetId:
          type: string
      type: object
    GetDefaultsResponse:
      properties:
        amountPreference:
          description: amountPreference
          type: string
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
      required:
        - amountPreference
        - respHeader
      type: object
    GetFilterCriteriaRequest:
      properties:
        actionMode:
          type: string
        filterId:
          format: int32
          type: integer
        functionCode:
          type: string
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    GetFilterCriteriaResponse:
      properties:
        errorCode:
          format: int32
          type: integer
        filterFieldData:
          items:
            $ref: '#/components/schemas/AdvanceFilterFieldData'
          type: array
        messages:
          items:
            type: string
          type: array
        status:
          type: boolean
      type: object
    GetFilterFieldsRequest:
      properties:
        alertType:
          description: alertType
          type: string
        filterId:
          default: 0
          description: filterId
          format: int32
          type: integer
        typeInfo:
          $ref: '#/components/schemas/TypeInfo'
          description: typeInfo
      required:
        - typeInfo
      type: object
    GetFilterFieldsResponse:
      properties:
        filterFieldContainerInfoList:
          description: filterFieldContainerInfoList
          items:
            type: object
          type: array
        filterFieldInfoList:
          description: filterFieldInfoList
          items:
            type: object
          type: array
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
        typeInfo:
          $ref: '#/components/schemas/TypeInfo'
          description: typeInfo
      required:
        - respHeader
        - typeInfo
      type: object
    GetModelInfoRequest:
      properties:
        action:
          description: Action mode.
          type: string
        data:
          description: List of Data - List of NameValuePairLists
          items:
            type: object
          type: array
        entryClass:
          description: Entry Class is used by getModelInfo of rest tableMaint service to resolve the child type for the Nacha File Import Payments.
          type: string
        entryMethod:
          default: 0
          description: Entry method used by getModelInfo of rest tableMaint service to set the protected field in the returned model.
          format: int32
          type: integer
        functionCode:
          description: Function Code that can be any of INST, TMPL, BATCH, BHTMPL, MAINT.
          type: string
        productCode:
          description: Product Code. Valid values are represented in the Products table based on the allowed function codes.
          type: string
        subtype:
          default: '*'
          description: Sub type.
          type: string
        typeCode:
          description: Type Code.
          type: string
      required:
        - entryMethod
      type: object
    GetNotificationsRequest:
      description: Notification Types Request.
      properties:
        newOnly:
          description: 'Indicator that specifies whether to retrieve only new notifications. This feature only applies to the following notifications: Group Banners, Global Banner and File Import'
          type: boolean
        notificationTypes:
          description: The list of Notification Types that is being requested
          items:
            type: string
          type: array
      type: object
    GetNotificationsResponse:
      description: Notification Types Response.
      properties:
        notifications:
          description: The list of Notification Types returned to the User.
          items:
            $ref: '#/components/schemas/Notification'
          type: array
      type: object
    GetProfileRequest:
      properties:
        profileNumber:
          format: int32
          type: integer
      type: object
    GetProfileResponse:
      properties:
        profileData:
          $ref: '#/components/schemas/ProfileData'
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    GetTokenRegistrationCodeRequest:
      description: Request to get token registration code
      properties:
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        tokenType:
          description: tokenType
          type: string
      required:
        - tokenType
      type: object
    GetTokenRegistrationCodeResponse:
      description: Response to the request to validate MFA secrets
      properties:
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        registrationCode:
          description: registrationCode
          type: string
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - registrationCode
        - respHeader
      type: object
    GlobalRestriction:
      properties:
        applicable:
          description: A boolean that indicates if something is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if something is entitled
          type: boolean
        maxValue:
          type: object
        name:
          type: string
        value:
          type: object
      type: object
    Grid:
      description: Children data represented as a list of NameValuePair. For saving Children into a Batch Payment
      properties:
        items:
          description: list of name value pairs
          items:
            type: object
          type: array
        name:
          description: name of the grid
          type: string
      required:
        - name
      type: object
    GroupContents:
      description: Represents a consolidation of all the entitlements and data restrictions that are common amongst the types.
      properties:
        detailedTypeEntitlements:
          description: A list of the consolidated entitlements that are common amongst the types.
          items:
            $ref: '#/components/schemas/ActionEntitlementsByFunctionTypeEntryMethod'
          type: array
        typeDataEntitlements:
          description: The consolidated data restrictions that are common amongst the types.
          items:
            $ref: '#/components/schemas/DataEntitlementsByType'
          type: array
      type: object
    GroupLevel:
      description: A group contains specific functionalities within the application that can be entitled.
      properties:
        aggregateModels:
          description: A list of the consolidated entitlements that are common amongst the types.
          items:
            $ref: '#/components/schemas/EntitlementContext'
          type: array
        displayOrder:
          format: int32
          type: integer
        id:
          type: string
        label:
          type: string
        types:
          description: A list of the entitlements that by type
          items:
            $ref: '#/components/schemas/TypeLevel'
          type: array
      type: object
    HelpPageRequest:
      properties:
        actionMode:
          type: string
        functionCode:
          type: string
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    HelpPageResponse:
      properties:
        helpPage:
          type: string
      type: object
    I18NRequest:
      properties:
        locale:
          type: string
        prefix:
          type: string
        prefixes:
          items:
            type: string
          type: array
      type: object
    Image:
      properties:
        contentType:
          description: contentType
          type: string
          xml:
            attribute: true
            namespace: http://www.w3.org/2005/05/xmlmime
        value:
          $ref: '#/components/schemas/Array'
          description: value
      type: object
    ImageInfo:
      properties:
        additionalData:
          description: additionalData
          items:
            type: object
          type: array
        bankCode:
          description: BankCode for Account
          type: string
        imageAccount:
          $ref: '#/components/schemas/ExternalAccountId'
          description: Account for image
        imageAmount:
          description: Amount associated with Image
          type: number
        imageDate:
          description: Date associated with Image
          format: date-time
          type: string
        imageDescription:
          description: Optional title or descriptive information
          type: string
        imageID:
          description: Identifier used to retrieve image
          type: string
        imageSize:
          description: Optional size.
          format: int64
          type: integer
        locationName:
          description: Location for image
          type: string
        maker:
          description: Maker of image
          type: string
        routingNumber:
          description: Routing Number of image
          type: string
        serialNumber:
          description: Serial number for image
          format: int64
          type: integer
      required:
        - imageID
      type: object
    ImageResponse:
      properties:
        additionalData:
          $ref: '#/components/schemas/NameValuePairList'
        backImage:
          $ref: '#/components/schemas/Image'
        backImageString:
          type: string
        depositSlipItems:
          items:
            $ref: '#/components/schemas/NameValuePairList'
          type: array
        errorCode:
          format: int32
          type: integer
        frontImage:
          $ref: '#/components/schemas/Image'
        frontImageString:
          type: string
        headerData:
          $ref: '#/components/schemas/NameValuePairList'
        headerLabels:
          $ref: '#/components/schemas/NameValuePairList'
        imageId:
          type: string
        images:
          items:
            $ref: '#/components/schemas/NameValuePairList'
          type: array
        messages:
          items:
            type: string
          type: array
        result:
          type: boolean
        topHeaderLabels:
          $ref: '#/components/schemas/NameValuePairList'
      type: object
    IndicativeRateRequest:
      properties:
        actionMode:
          type: string
        creditAmount:
          type: string
        creditCurrency:
          type: string
        debitAcctNumber:
          type: string
        debitAmount:
          type: string
        debitBankCode:
          type: string
        debitCurrency:
          type: string
        enteredAmountFlag:
          type: string
        status:
          type: string
        typeCode:
          type: string
        valueDate:
          type: string
      type: object
    IndicativeRateResponse:
      properties:
        indicativeAmount:
          type: string
        indicativeRate:
          type: string
      type: object
    InitiateActivatePhoneRequest:
      description: Request to deliver a  token to a user to activate a phone. This only applies to the SMS delivery method
      properties:
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        phoneNumber:
          description: The number of the phone to activate
          type: string
      required:
        - phoneNumber
      type: object
    InitiateActivatePhoneResponse:
      description: Response for a request to deliver a token to a user to activate a phone. This only applies to the SMS delivery method
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - challengedAction
        - respHeader
      type: object
    InitiateOutOfBandRequest:
      description: Request to initiate an out of band authentication
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        selection:
          description: The value of the configured MFA contact that the user selected
          type: string
        selectionType:
          description: The type of the configured MFA contact that the user selected
          type: string
        userRequestingOnBehalfOf:
          $ref: '#/components/schemas/UserIdentifier'
          description: Identifies the user for whom to initiate the out of band authentication
      required:
        - challengedAction
        - selection
        - selectionType
      type: object
    InitiateOutOfBandResponse:
      description: Response for a request to an out of band authentication
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        claimCheck:
          description: The unique identifier for the challenge to check the status of
          type: string
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
        tokenPin:
          description: tokenPin
          type: string
      required:
        - challengedAction
        - claimCheck
        - respHeader
      type: object
    InquiryDataRequest:
      properties:
        inquiryRequest:
          $ref: '#/components/schemas/InquiryRequest'
          description: inquiryRequest
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
          description: requestHeader
      required:
        - inquiryRequest
        - requestHeader
      type: object
    InquiryDataResponse:
      properties:
        inquiryResponse:
          $ref: '#/components/schemas/InquiryResponse'
          description: inquiryResponse
        refreshTimestamp:
          description: refreshTimestamp
          format: date-time
          type: string
      required:
        - inquiryResponse
        - refreshTimestamp
      type: object
    InquiryListViewRequest:
      properties:
        action:
          description: action
          type: string
        dataOnly:
          default: 0
          description: Flag to indicate if only the row data is to be retrieved
          format: int32
          type: integer
        depends:
          description: depends
          items:
            type: object
          type: array
        disableDrillDown:
          default: false
          description: Flag to indicate whether drilling down into the detail is enabled or disabled
          type: boolean
        entryClass:
          description: This is needed by the server to identify the correct child type of a payment.
          type: string
        entryMethod:
          description: entryMethod
          type: string
        fieldName:
          description: fieldName
          type: string
        functionCode:
          description: functionCode
          type: string
        productCode:
          description: productCode
          type: string
        requestParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: List of request parameters.
        rowsPerPage:
          default: 0
          description: The number of rows to retrieve for each page requested
          format: int32
          type: integer
        searchFields:
          description: Search criteria to restrict the results.
          items:
            type: object
          type: array
        searchOrOperator:
          default: false
          description: This is set to true if filter that is constructed from Search Fields is to use OR operator.
          type: boolean
        sortFields:
          description: Sort criteria to order the results.
          items:
            type: object
          type: array
        startRow:
          default: 1
          description: The starting row index to retrieve results from. Note the starting index is one.
          format: int32
          type: integer
        subType:
          description: subType
          type: string
        typeCode:
          description: typeCode
          type: string
        unmaskColumns:
          default: false
          description: Flag to indicate, when masking is enable, unmask server determined column(s)
          type: boolean
        viewId:
          description: View identifier.
          format: int64
          type: integer
      required:
        - dataOnly
        - disableDrillDown
        - fieldName
        - requestParameters
        - rowsPerPage
        - searchOrOperator
        - startRow
        - unmaskColumns
        - viewId
      type: object
    InquiryRequest:
      properties:
        requestedColumns:
          description: requestedColumns
          items:
            type: object
          type: array
        rowsPerPage:
          default: 0
          description: rowsPerPage
          format: int32
          type: integer
        searchCriteria:
          $ref: '#/components/schemas/SearchCriteria'
          description: searchCriteria
        startRow:
          default: 1
          description: startRow
          format: int32
          type: integer
      required:
        - rowsPerPage
        - searchCriteria
        - startRow
      type: object
    InquiryResponse:
      properties:
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
        responseParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: responseParameters
        rowHeader:
          description: rowHeader
          items:
            type: object
          type: array
        rows:
          description: rows
          items:
            type: object
          type: array
        totalPages:
          default: 0
          description: totalPages
          format: int32
          type: integer
        totalRows:
          default: 0
          description: totalRows
          format: int32
          type: integer
      required:
        - respHeader
        - responseParameters
        - totalPages
        - totalRows
      type: object
    InterimLimit:
      description: Represents a row in the limit session table
      properties:
        accountName:
          type: string
        accountNumber:
          type: string
        approveAction:
          type: boolean
        bankCode:
          type: string
        batchLimit:
          format: int64
          type: integer
        clearingSystem:
          type: string
        dailyLimit:
          format: int64
          type: integer
        dataEntFilterAttribute:
          type: string
        manageAction:
          type: boolean
        maxBatchLimit:
          format: int64
          type: integer
        maxDailyLimit:
          format: int64
          type: integer
        maxTranLimit:
          format: int64
          type: integer
        modifyAction:
          type: boolean
        offsetAccountNum:
          type: string
        productCode:
          description: Required for save operation.  It is either a product code or in the case of a group request it is the group name.
          type: string
        repairAction:
          type: boolean
        tranLimit:
          format: int64
          type: integer
        typeCode:
          description: The type code.  This may be left empty when performing a 'by group' save
          type: string
      required:
        - productCode
      type: object
    InterimLimitList:
      properties:
        actionsOnly:
          description: Optional parameter if set will only update the actions values not the limit values.
          enum:
            - false
            - true
          type: boolean
        group:
          type: boolean
        limits:
          description: A list of limit items to update
          items:
            $ref: '#/components/schemas/InterimLimit'
          type: array
      type: object
    InterimLimitsRequest:
      description: Custom object for getting data entitlement limit data
      properties:
        dataEntitlements:
          description: Represents a list of the available data entitlement request.
          items:
            $ref: '#/components/schemas/DataEntitlementRequest'
          type: array
        listViewRequest:
          $ref: '#/components/schemas/ListViewRequest'
      type: object
    ItemWithChildren:
      properties:
        grids:
          items:
            $ref: '#/components/schemas/Grid'
          type: array
        item:
          $ref: '#/components/schemas/NameValuePairList'
      type: object
    KeepAliveTokenRequest:
      properties:
        token:
          type: string
      type: object
    KeepAliveTokenResponse:
      properties:
        token:
          type: string
      type: object
    ListRequest:
      properties:
        offset:
          default: 1
          description: offset
          format: int32
          type: integer
        pagesize:
          default: 0
          description: pagesize
          format: int32
          type: integer
        searchFields:
          description: searchFields
          items:
            type: object
          type: array
        sortFields:
          description: sortFields
          items:
            type: object
          type: array
      required:
        - offset
        - pagesize
      type: object
    ListViewAddRequest:
      properties:
        columnInfo:
          $ref: '#/components/schemas/ColumnInfo'
        filters:
          items:
            $ref: '#/components/schemas/FilterParseModel'
          type: array
        functionCode:
          type: string
        listName:
          type: string
        mode:
          type: string
        productCode:
          type: string
        referenceViewId:
          type: string
        rowsPerPage:
          format: int32
          type: integer
        shared:
          type: boolean
        typeCode:
          type: string
      type: object
    ListViewDeleteRequest:
      properties:
        filterIds:
          items:
            type: string
          type: array
      type: object
    ListViewExportRequest:
      properties:
        actionData:
          $ref: '#/components/schemas/ActionData'
        columns:
          items:
            type: string
          type: array
        contextData:
          additionalProperties:
            type: string
          type: object
        customFilters:
          items:
            $ref: '#/components/schemas/CustomFilter'
          type: array
        expData:
          type: string
        exportMapID:
          format: int32
          type: integer
        includeSummaryInfo:
          format: int32
          type: integer
        inquiryId:
          format: int32
          type: integer
        numberOfRows:
          format: int32
          type: integer
        outputFormat:
          type: string
        pageType:
          type: string
        searchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        sortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        tabId:
          type: string
        viewId:
          type: string
      type: object
    ListViewExportResponse:
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Action data for this request in case where this report is configured for MFA and the request should be challenged
        errorCode:
          description: Response code
          format: int32
          type: integer
        exportId:
          description: The ID of the exported PDF report available for download.
          format: int32
          type: integer
        messages:
          description: Generic messages returned by the server
          items:
            type: string
          type: array
      required:
        - errorCode
        - exportId
      type: object
    ListViewRequest:
      description: A request to retrieve records for a list view.
      properties:
        dataOnly:
          default: 0
          description: Flag to indicate if only the row data is to be retrieved
          format: int32
          type: integer
        disableDrillDown:
          default: false
          description: Flag to indicate whether drilling down into the detail is enabled or disabled
          type: boolean
        requestParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: List of request parameters.
        rowsPerPage:
          default: 0
          description: The number of rows to retrieve for each page requested
          format: int32
          type: integer
        searchFields:
          description: Search criteria to restrict the results.
          items:
            type: object
          type: array
        sortFields:
          description: Sort criteria to order the results.
          items:
            type: object
          type: array
        startRow:
          default: 1
          description: The starting row index to retrieve results from. Note the starting index is one.
          format: int32
          type: integer
        unmaskColumns:
          default: false
          description: Flag to indicate, when masking is enable, unmask server determined column(s)
          type: boolean
        viewId:
          description: View identifier.
          format: int64
          type: integer
      required:
        - dataOnly
        - disableDrillDown
        - requestParameters
        - rowsPerPage
        - startRow
        - unmaskColumns
        - viewId
      type: object
    ListViewResponse:
      description: Response for the listview with context for the whole list view as well as context for individual rows
      properties:
        context:
          $ref: '#/components/schemas/ServiceClientContext'
          description: Additional context information around the request e.g. action data / key fields
        detailReportId:
          default: 0
          description: The detail report Id for the list view
          format: int32
          type: integer
        filterFields:
          description: A list of fields which can be filtered which includes data type information and also whether the fields are sortable
          items:
            type: object
          type: array
        footerRows:
          description: Footer Rows containing totals calculated based on FOOTER_KEY, these rows include context information
          items:
            type: object
          type: array
        lastRefreshTimestamp:
          description: A timestamp of when the last data was sent to the client
          type: string
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Common response data
        responseParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: responseParameters
        rowHeader:
          description: Schema column information for each row returned such as data types and maximum lengths
          items:
            type: object
          type: array
        rows:
          description: Rows including context information
          items:
            type: object
          type: array
        rowsPerPage:
          default: 0
          description: The number of rows per page in a list view grid
          format: int32
          type: integer
        totalPages:
          default: 0
          description: The total number of pages available
          format: int32
          type: integer
        totalRows:
          default: 0
          description: The total number of rows available
          format: int32
          type: integer
        viewId:
          description: The corresponding VIEWID to the SYSLISTVIEWS
          type: string
        viewOwner:
          description: The user identifier who owns the view or _SYSTEM if it's application defined
          type: string
        warningMessage:
          description: If there are payments in the File that the user is not entitled to view, a warning message should be displayed above the list view
          type: string
      required:
        - context
        - respHeader
        - responseParameters
        - rowsPerPage
        - totalPages
        - totalRows
      type: object
    LiveMaintenanceResponse:
      properties:
        maintenanceMode:
          type: boolean
        message:
          type: string
      type: object
    LivePersonResponse:
      properties:
        jwtString:
          type: string
      type: object
    LoanAccountTypeRequest:
      properties:
        accountFilter:
          type: string
        accountNumber:
          type: string
        bankCode:
          type: string
        currency:
          type: string
        functionCode:
          type: string
        productCode:
          type: string
        subAccountNum:
          type: string
        typeCode:
          type: string
      type: object
    LoanAccountTypeResponse:
      properties:
        accountPaymentType:
          enum:
            - INVOICE_ONLY
            - PAY_ANY
            - BOTH
            - NONE
          type: string
        accountType:
          type: string
        invoices:
          items:
            $ref: '#/components/schemas/LoanInvoiceRecord'
          type: array
        status:
          type: string
      type: object
    LoanCurrentBalanceRequest:
      properties:
        accountNumber:
          type: string
        accountSubType:
          type: string
        accountType:
          type: string
        bankCode:
          type: string
        currency:
          type: string
        functionCode:
          type: string
        productCode:
          type: string
        subAccountNum:
          type: string
        typeCode:
          type: string
      type: object
    LoanCurrentBalanceResponse:
      properties:
        balance:
          type: string
        balanceAsOf:
          type: string
        escrowDueAmount:
          type: string
        interestDueAmount:
          type: string
        nextPaymentDueDate:
          type: string
        otherDueAmount:
          type: string
        pastDueAmount:
          type: string
        paymentDueAmount:
          type: string
        principalDueAmount:
          type: string
        status:
          type: string
      type: object
    LoanCurrentBalancesRequest:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/LoanCurrentBalanceRequest'
          type: array
      type: object
    LoanCurrentBalancesResponse:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/LoanCurrentBalanceResponse'
          type: array
      type: object
    LoanInterestRateResponse:
      properties:
        interestRate:
          type: number
        status:
          type: string
      type: object
    LoanInvoiceRecord:
      properties:
        dueDate:
          type: string
        escrowAmount:
          type: string
        interestAmount:
          type: string
        invoiceNumber:
          type: string
        otherAmount:
          type: string
        principalAmount:
          type: string
        standardAmount:
          type: string
        totalAmount:
          type: string
      type: object
    Locale:
      properties:
        country:
          type: string
        displayCountry:
          type: string
        displayLanguage:
          type: string
        displayName:
          type: string
        displayScript:
          type: string
        displayVariant:
          type: string
        extensionKeys:
          items:
            type: string
          type: array
          uniqueItems: true
        iso3Country:
          type: string
        iso3Language:
          type: string
        language:
          type: string
        script:
          type: string
        unicodeLocaleAttributes:
          items:
            type: string
          type: array
          uniqueItems: true
        unicodeLocaleKeys:
          items:
            type: string
          type: array
          uniqueItems: true
        variant:
          type: string
      type: object
    LoginRequest:
      description: A request to log in to the system
      properties:
        deviceId:
          type: string
        mobileAppPlatform:
          description: The mobile application platform from which the request is originating
          type: string
        mobileAppPlatformVersion:
          description: The mobile application version from which the request is originating
          type: string
        oneTimePassword:
          description: A one-time password (OTP) is a password that is valid for only one login session or transaction
          type: string
        password:
          description: The users password
          type: string
        userGroup:
          description: The user group value for the user
          type: string
        userId:
          description: User identifier
          type: string
      required:
        - password
        - userGroup
        - userId
      type: object
    LookupListViewResponse:
      description: Response for the listview with context for the whole list view as well as context for individual rows
      properties:
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
        responseParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: responseParameters
        rowHeader:
          description: rowHeader
          items:
            type: object
          type: array
        rows:
          description: rows
          items:
            type: object
          type: array
        rowsPerPage:
          default: 0
          description: The number of rows to retrieve for each page requested
          format: int32
          type: integer
        totalPages:
          default: 0
          description: totalPages
          format: int32
          type: integer
        totalRows:
          default: 0
          description: totalRows
          format: int32
          type: integer
      required:
        - respHeader
        - responseParameters
        - rowsPerPage
        - totalPages
        - totalRows
      type: object
    MFAContext:
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: challengedAction
        challengedType:
          description: challengedType
          type: string
        customFields:
          description: customFields
          items:
            type: object
          type: array
        messageId:
          description: messageId
          type: string
        prompts:
          description: prompts
          items:
            type: object
          type: array
        requiresMoreInformation:
          description: requiresMoreInformation
          type: boolean
      required:
        - challengedAction
        - challengedType
        - messageId
      type: object
    MFASettingsRequest:
      description: Request for configured MFA settings for an action
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        userRequestingOnBehalfOf:
          $ref: '#/components/schemas/UserIdentifier'
          description: Identifies the user for whom to retrieve MFA settings when acting on behalf of that user
      required:
        - challengedAction
      type: object
    MFASettingsResponse:
      description: Response for configured MFA settings for an action
      properties:
        challengeType:
          description: The type of challenge
          type: string
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        contacts:
          description: Collection of destinations to which the OTP can be sent. Note this is only used for OTP.
          items:
            type: object
          type: array
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - challengeType
        - respHeader
      type: object
    ManageListViewListRequest:
      properties:
        queryCriteria:
          $ref: '#/components/schemas/QueryCriteria'
        queryOffset:
          format: int32
          type: integer
        queryPageSize:
          format: int32
          type: integer
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
      type: object
    ManageListViewListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Record'
          type: array
        numRows:
          format: int32
          type: integer
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    ManyItemsWithChildren:
      properties:
        manyItems:
          items:
            $ref: '#/components/schemas/ItemWithChildren'
          type: array
      type: object
    MasterTabContents:
      description: Represents a tab where the user may entitled specified functionalities within the application.
      properties:
        complexTypes:
          description: Map keyed by type group of type group contents with complex types.
          items:
            $ref: '#/components/schemas/ComplexTypeGroupWithOverallLimits'
          type: array
        globalSettings:
          additionalProperties:
            type: object
          description: Properties that are relevant for a particular complex type at a global level.
          type: object
        masterTabCode:
          description: A string that represents the code for the tab.
          type: string
        masterTabLabel:
          description: The label for the tab.
          type: string
        simpleDataEntitlements:
          description: List of cross-type group data entitlements (e.g. restricted template)
          items:
            $ref: '#/components/schemas/SimpleDataEntitlementsByType'
          type: array
        simpleTypes:
          description: ' Map keyed by type group of type group contents with simple types.'
          items:
            $ref: '#/components/schemas/SimpleTypeGroup'
          type: array
      type: object
    MessageParameter:
      properties:
        appresourceParamList:
          $ref: '#/components/schemas/MessageParameterList'
        type:
          format: int32
          type: integer
        value:
          type: string
      type: object
    MessageParameterList:
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/MessageParameter'
          type: array
      type: object
    MobileBaseResponse:
      properties:
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    MobileMFAChallengeStateRequest:
      properties:
        claimCheck:
          description: The unique identifier for the challenge to check the status of
          type: string
      required:
        - claimCheck
      type: object
    MobileMFAChallengeStateResponse:
      properties:
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - respHeader
      type: object
    MobileMFARequest:
      properties:
        deviceId:
          description: The device ID of the device sending the request
          type: string
        mfaClaimCheck:
          description: The unique claim check ID sent to the mobile device with the out of band authentication request
          type: string
        mobilePassCode:
          description: The authentication passcode to be validated
          type: string
        userGroup:
          description: The userGroup (company) of the user sending the request
          type: string
        userId:
          description: The userId of the user sending the request
          type: string
      required:
        - deviceId
        - mfaClaimCheck
        - mobilePassCode
        - userGroup
        - userId
      type: object
    MobileRegistrationRequest:
      properties:
        deviceId:
          type: string
      type: object
    MobileRegistrationResponse:
      properties:
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
        sharedSecret:
          type: string
      type: object
    ModelInfo:
      properties:
        childDriverFields:
          description: DriverFields for Child
          items:
            type: object
          type: array
        childFieldInfoList:
          description: "\n\t\t\t\t\t\tList of fields and their attributes. e.g. data type, length, min/max, etc.\n\t\t\t\t\t"
          items:
            type: object
          type: array
        childGridName:
          description: Grid Name of the Child
          type: string
        childKeys:
          description: 'List of child keys that will be sued when the child data is requested '
          items:
            type: object
          type: array
        childSequenceColumn:
          description: childSequenceColumn
          type: string
        childfieldContainerList:
          description: "\n\t\t\t\t\t\tList of fields and the grouping information\n\t\t\t\t\t"
          items:
            type: object
          type: array
        driverFields:
          description: DriverFields for Parent
          items:
            type: object
          type: array
        fieldContainerList:
          description: "\n\t\t\t\t\t\tList of fields and the grouping information\n\t\t\t\t\t"
          items:
            type: object
          type: array
        fieldInfoList:
          description: "\n\t\t\t\t\t\tList of fields and their attributes. e.g. data type, length, min/max, etc.\n\t\t\t\t\t"
          items:
            type: object
          type: array
        grandChildFields:
          description: DriverFields for Child
          items:
            type: object
          type: array
        grandChildName:
          description: grandChildName
          type: string
        hasChildren:
          description: hasChildren
          type: boolean
        multiEntryMaxRows:
          description: Max number of rows allowed in a multi-entry page
          format: int32
          type: integer
        typeInfo:
          $ref: '#/components/schemas/TypeInfo'
          description: "\n\t\t\t\t\t\tThis will contain the typeInfo\n\t\t\t\t\t"
        widgetsList:
          description: Widgets list
          items:
            type: object
          type: array
      required:
        - fieldContainerList
        - fieldInfoList
        - grandChildName
        - hasChildren
        - multiEntryMaxRows
      type: object
    MultiCheckDepositResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
          description: An action response indicating success / failure of the operation
        amount:
          description: This is the current amount of the check.
          type: string
        checkNumber:
          description: The check number of the check as read by Ensenta’s OCR system.
          type: string
        depositRiskFactors:
          description: List of Deposit Risk Factors
          items:
            type: object
          type: array
        fundsAvailabilityText:
          description: End-User facing text with Financial Institution’s (FI) funds availability messaging.
          type: string
        itemNumber:
          description: Number of this item in the batch
          format: int64
          type: integer
        micr:
          description: The MICR of the check as read by Ensenta’s OCR system.
          type: string
        ocrAmount:
          description: The amount of the check as read by Ensenta’s OCR system.
          type: string
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: The images of the checks for which transaction has been requested
          xml:
            name: RdcSessionData
        status:
          description: item status in the batch
          format: int64
          type: integer
        totalBatchAmount:
          description: Total batch amount, in decimal form.
          type: string
        userAmount:
          description: Amount of the check as submitted by the End-User.
          type: string
      required:
        - actionResponse
        - rdcSessionData
      type: object
    MultiDownloadRequest:
      properties:
        items:
          items:
            $ref: '#/components/schemas/NameValuePairList'
          type: array
      type: object
    MultiTypeSaveRequest:
      properties:
        comments:
          type: string
        commonReference:
          type: string
        fromSimpleEntry:
          type: boolean
        functionCode:
          type: string
        items:
          items:
            $ref: '#/components/schemas/NameValuePairList'
          type: array
        restrict:
          type: boolean
        saveAsTemplate:
          type: string
        saveWithWarning:
          type: boolean
        setDescription:
          type: string
        setEntryMode:
          type: string
        setName:
          type: string
        updateCount:
          type: string
      type: object
    MultiUpdateRequest:
      properties:
        items:
          items:
            $ref: '#/components/schemas/NameValuePairList'
          type: array
      type: object
    NameValuePair:
      description: A name value pair representing a generic structure
      properties:
        name:
          description: The name of the pair structure
          type: string
        value:
          description: The value of the pair structure
          type: string
      required:
        - name
        - value
      type: object
    NameValuePairList:
      description: A list of name value pairs
      properties:
        item:
          description: A name value pair representing a generic structure
          items:
            type: object
          type: array
      type: object
    NameValuePairString:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    Notification:
      description: Notification Type.
      properties:
        actionMode:
          description: The assigned action mode for the Notification Type.
          type: string
        count:
          description: The number of notifications that currently exist for the specific Notification Type.
          format: int64
          type: integer
        functionCode:
          description: The assigned function code for the Notification Type.
          type: string
        hideCount:
          description: Indicates whether the specific Notification Type should be hidden.
          type: boolean
        notificationType:
          description: The Notification Type Code.
          type: string
        productCode:
          description: The assigned product code for the Notification Type.
          type: string
        subject:
          description: The subject text assigned to the specific Notification Type.
          type: string
        text:
          description: The formatted message assigned to the specific Notification Type.
          type: string
        typeCode:
          description: The assigned type code for the Notification Type.
          type: string
        viewId:
          description: The ID of the view where the user can navigate to take action on the Notification Type.
          format: int32
          type: integer
      type: object
    NotificationData:
      properties:
        count:
          format: int64
          type: integer
        rows:
          items:
            $ref: '#/components/schemas/NotificationRowData'
          type: array
        subject:
          type: string
        text:
          type: string
        viewId:
          format: int32
          type: integer
      type: object
    NotificationMessage:
      properties:
        created:
          type: string
        data:
          $ref: '#/components/schemas/NotificationData'
        functionCode:
          type: string
        inProcessItemsPending:
          type: boolean
        message:
          type: string
        notificationType:
          type: string
        notificationTypeValid:
          type: boolean
        options:
          $ref: '#/components/schemas/NotificationOptions'
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    NotificationOptions:
      properties:
        mostRecentOnly:
          type: boolean
      type: object
    NotificationRowData:
      properties:
        columns:
          items:
            $ref: '#/components/schemas/ColumnData'
          type: array
        rowId:
          type: string
      type: object
    NotificationServiceRequest:
      properties:
        subscribeTypeList:
          items:
            type: string
          type: array
        unSubscribeTypeList:
          items:
            type: string
          type: array
      type: object
    NotificationServiceResponse:
      properties:
        errorCode:
          format: int32
          type: integer
        message:
          type: string
        notificationMessages:
          items:
            $ref: '#/components/schemas/NotificationMessage'
          type: array
        subscribedNotificationTypeList:
          items:
            type: string
          type: array
      type: object
    NumericRestrictionApplicableWithValue:
      description: Represents a restriction with a numeric value.
      properties:
        applicable:
          description: a boolean that indicates if the restriction is applicable.
          type: boolean
        assignedValue:
          description: The assigned value of the restriction
          format: int32
          type: integer
        maxValue:
          description: The maximum value allowed for this restriction
          format: int32
          type: integer
      type: object
    OAuthKeyRequest:
      properties:
        appToken:
          type: string
        consumerKey:
          type: string
        consumerSecret:
          type: string
      type: object
    OAuthStatusResponse:
      properties:
        company:
          type: string
        isConnected:
          type: boolean
        keyDate:
          type: string
        parentUserGroup:
          type: string
        source:
          type: string
        userGroup:
          type: string
      type: object
    Pair:
      properties:
        first:
          type: object
        second:
          type: object
      type: object
    PairStringString:
      properties:
        first:
          type: string
        second:
          type: string
      type: object
    PanelApproverTypes:
      description: Panel approver types for an existing user group
      properties:
        approvers:
          description: approvers
          items:
            type: object
          type: array
        provisioningAction:
          description: provisioningAction
          enum:
            - A
            - U
            - D
            - 'N'
            - C
            - P
            - I
          type: string
          xml:
            attribute: true
            namespace: http://www.bottomline.com/webseries/schema/ps/platform/entitlements/v1
        userGroup:
          description: userGroup
          type: string
      required:
        - approvers
        - userGroup
      type: object
    PanelProfileFilter:
      description: A panel profile filter
      properties:
        account:
          description: account
          items:
            type: object
          type: array
        assignPayments:
          description: assignPayments
          items:
            type: object
          type: array
        assignTemplates:
          description: assignTemplates
          items:
            type: object
          type: array
        description:
          description: description
          type: string
        entryMethods:
          description: entryMethods
          items:
            type: object
          type: array
        profileCode:
          description: profileCode
          type: string
        provisioningAction:
          description: provisioningAction
          enum:
            - A
            - U
            - D
            - 'N'
            - C
            - P
            - I
          type: string
          xml:
            attribute: true
            namespace: http://www.bottomline.com/webseries/schema/ps/platform/entitlements/v1
        status:
          description: status
          type: string
        thresholds:
          description: thresholds
          items:
            type: object
          type: array
        userGroup:
          description: userGroup
          type: string
      required:
        - description
        - profileCode
        - status
        - thresholds
        - userGroup
      type: object
    PaymentAuditHistoryRequest:
      description: Payment Audit History Request
      properties:
        functionCode:
          description: functionCode
          type: string
        tnum:
          description: tNum
          type: string
      required:
        - functionCode
        - tnum
      type: object
    PaymentAuditHistoryResponse:
      description: Payment Audit History Response
      properties:
        paymentAuditHistory:
          description: paymentAuditHistory
          items:
            type: object
          type: array
      type: object
    PaymentPrefResponse:
      properties:
        escrowPaymentAmountLocked:
          type: boolean
        escrowPaymentSupported:
          type: boolean
        interestPaymentAmountLocked:
          type: boolean
        interestPaymentSupported:
          type: boolean
        otherPaymentAmountLocked:
          type: boolean
        otherPaymentSupported:
          type: boolean
        principalPaymentAmountLocked:
          type: boolean
        principalPaymentSupported:
          type: boolean
        singleOnlyPaymentOptionAmountLocked:
          type: boolean
        singleOnlyPaymentOptionSupported:
          type: boolean
        standardPaymentAmountLocked:
          type: boolean
        standardPaymentSupported:
          type: boolean
      type: object
    PaymentsSummaryByCurrencyPairGroup:
      description: Represents payments summary information for groups of payments with different debit and credit currencies
      properties:
        containsIndicativeRateTransactions:
          description: Determines whether indicative rate transcations are present in this group
          type: boolean
        creditCount:
          description: Number of credit transactions for the currency pair.  For ACH and EFT batches, this is the number of detail items within the batches for the currency pair
          format: int64
          type: integer
        creditCurrency:
          description: Credit currency
          type: string
        creditTotal:
          description: Credit total
          type: number
        debitCount:
          description: Number of debit transactions for the currency pair.  For ACH and EFT batches, this is the number of detail items within the batches for the currency pair
          format: int64
          type: integer
        debitCurrency:
          description: Debit currency
          type: string
        debitTotal:
          description: Debit total
          type: number
        transactionCount:
          description: Transaction count
          format: int64
          type: integer
      type: object
    PaymentsSummaryByPaymentGroup:
      description: Contains summary information for specific payment group
      properties:
        confidentialTransactionCount:
          description: Number of confidential transactions
          format: int64
          type: integer
        currencyPairs:
          description: Summary information for currency pairs within this payment group
          items:
            $ref: '#/components/schemas/PaymentsSummaryByCurrencyPairGroup'
          type: array
        identifier:
          description: Contains an identifier for the payment group
          enum:
            - INVALID
            - ACH
            - TRANSFERS
            - LOANS
            - BILLPAY
            - WIRES
            - RTP
          type: string
        nachaTransactionCount:
          description: Number of NACHA transactions
          format: int64
          type: integer
        paymentGroupName:
          description: Name
          type: string
        paymentTotalsByPaymentSubGroup:
          description: Summary information for sub groups within this payment group
          items:
            $ref: '#/components/schemas/PaymentsSummaryByPaymentSubGroup'
          type: array
        transactionCount:
          description: Number of transactions
          format: int64
          type: integer
      type: object
    PaymentsSummaryByPaymentSubGroup:
      description: Represents a total for a specific payment sub group
      properties:
        confidentialTransactionCount:
          description: Number of confidential transactions
          format: int64
          type: integer
        creditCount:
          description: Number of credit transactions in the subgroup.  For ACH and EFT batches, this is the number of detail items within the batches in the subgroup
          format: int64
          type: integer
        creditTotal:
          description: Credit total of the payment sub group
          type: number
        currency:
          description: Currency for payment sub group
          type: string
        debitCount:
          description: Number of debit transactions in the subgroup.  For ACH and EFT batches, this is the number of detail items within the batches in the subgroup
          format: int64
          type: integer
        debitTotal:
          description: Debit total of the payment sub group
          type: number
        identifier:
          description: Contains an identifier for the payment sub group
          enum:
            - INVALID
            - ACH
            - EFT
            - WIRES
            - LOANDRAWS
            - LOANPAY
            - BILLPAY
            - TRANSFERS
            - RTP
          type: string
        nachaTransactionCount:
          description: Number of NACHA transactions
          format: int64
          type: integer
        subGroupName:
          description: Contains the name of the payment sub group
          type: string
        transactionCount:
          description: Number of transactions
          format: int64
          type: integer
      type: object
    PaymentsSummaryResponse:
      description: Contains summary information for a set of payments
      properties:
        confidentialTransactions:
          description: Indicates a summary of how many transactions are in the response are confidential
          enum:
            - ALL
            - NONE
            - PARTIAL
          type: string
        nachaTransactions:
          description: Indicates a summary of how many transactions are in the response are NACHA
          enum:
            - ALL
            - NONE
            - PARTIAL
          type: string
        paymentTotalsByPaymentGroupList:
          description: Contains summary information grouped by payment
          items:
            $ref: '#/components/schemas/PaymentsSummaryByPaymentGroup'
          type: array
      type: object
    PerformMFAPreCheckServerResponse:
      properties:
        claimCheckId:
          description: Claim check returned for use in validate operation for the success token
          type: string
        crossSessionMessageId:
          description: The Cross Session Message Id used by Transmit
          type: string
        mfaContext:
          $ref: '#/components/schemas/MFAContext'
          description: MFA Context Information
        preCheckResult:
          description: preCheckResult
          enum:
            - PASS
            - FAIL
            - DENY
            - NOT_ACTIVE
          type: string
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Digital Banking Standard response fields including boolean result and optionally error code and error messages
        rsamarkup:
          type: string
      required:
        - claimCheckId
        - mfaContext
        - preCheckResult
        - responseHeader
      type: object
    PhoneNumber:
      properties:
        extension:
          type: string
        pauseIndicator:
          type: string
        phone:
          type: string
      type: object
    PostDepositBatchRequest:
      properties:
        accountNumber:
          description: accountNumber
          type: string
        bankCode:
          description: bankCode
          type: string
        depositBatchId:
          description: depositBatchId
          type: string
        itemNumbers:
          description: The item numbers of checks in this batch to be posted.
          items:
            type: object
          type: array
        rdcSessionData:
          $ref: '#/components/schemas/RdcSessionData'
          description: The Session Info
          xml:
            name: RdcSessionData
      required:
        - accountNumber
        - bankCode
        - depositBatchId
        - rdcSessionData
      type: object
    ProfileData:
      properties:
        profileDescription:
          description: profileDescription
          type: string
        profileId:
          description: profileId
          type: string
        searchCriteria:
          $ref: '#/components/schemas/SearchCriteria'
          description: searchCriteria
        shared:
          default: false
          description: shared
          type: boolean
      required:
        - profileDescription
        - profileId
        - searchCriteria
      type: object
    PushNotificationsRequest:
      properties:
        message:
          type: string
        mobileDeviceToken:
          type: string
        tenantId:
          type: string
        values:
          $ref: '#/components/schemas/NameValuePairList'
      type: object
    PushNotificationsResponse:
      properties:
        message:
          type: string
        response:
          type: string
      type: object
    QAChallengeLoginRequest:
      description: A request to challenge the user with security questions and answers on log in
      properties:
        userGroup:
          description: User group of user to be challenged
          type: string
        userId:
          description: User identifier to be challenged
          type: string
      required:
        - userGroup
        - userId
      type: object
    QAChallengeRequest:
      description: A request to challenge the user with security questions and answers
      properties:
        data:
          $ref: '#/components/schemas/QARequestWrapper'
          description: The users questions and answers
        userGroup:
          description: User group of user to be challenged
          type: string
        userId:
          description: User identifier to be challenged
          type: string
      required:
        - data
        - userGroup
        - userId
      type: object
    QAChallengeResponse:
      description: A response to a request to challenge the user with security questions and answers
      properties:
        lockedOut:
          description: Determines whether the user has been locked out as a result of the challenge request
          type: boolean
        message:
          description: Response message to indicate success or a failure reason
          type: string
        responseCode:
          description: Response code to indicate success or a failure reason
          enum:
            - '[NotAuthorized'
            - Locked
            - Not Validated
            - Validated]
          type: string
        token:
          description: Response Token that is returned when all Security Questions are answered correctly
          type: string
        userGrp:
          description: User group of user who has been challenged
          type: string
        userId:
          description: User identifier who has been challenged
          type: string
        valid:
          type: boolean
      required:
        - lockedOut
        - message
        - responseCode
        - token
        - userGrp
        - userId
      type: object
    QARequest:
      description: A security question
      properties:
        answer:
          description: The answer provided for the question
          type: string
        columnId:
          description: The number of the question answer pair
          type: string
        questionCd:
          description: TODO This property doesn't appear to be used. Remove?
          type: string
      required:
        - answer
        - columnId
        - questionCd
      type: object
    QARequestWrapper:
      description: A request with a list of questions and answers to challenge the user with
      properties:
        item:
          description: A list of questions and answers to challenge the user with
          items:
            $ref: '#/components/schemas/QARequest'
          type: array
      required:
        - item
      type: object
    QExportRequest:
      properties:
        accountFilter:
          type: string
        accountType:
          type: string
        actionData:
          $ref: '#/components/schemas/ActionData'
        customFilters:
          items:
            $ref: '#/components/schemas/CustomFilter'
          type: array
        endDate:
          type: string
        excludeHeader:
          type: string
        exportMapID:
          type: string
        fileName:
          type: string
        filterID:
          type: string
        outputContent:
          type: string
        postedFlag:
          type: string
        searchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        sortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        split88Record:
          type: string
        startDate:
          type: string
        viewID:
          type: string
      type: object
    QExportResponse:
      properties:
        errorCode:
          format: int32
          type: integer
        exportId:
          format: int32
          type: integer
        messages:
          items:
            type: string
          type: array
        queueLimitStatus:
          format: int32
          type: integer
        status:
          type: boolean
      type: object
    QueryCriteria:
      properties:
        action:
          $ref: '#/components/schemas/ActionData'
          description: Full action context for the query
        allowDuplicates:
          default: false
          description: allowDuplicates
          type: boolean
        customFilters:
          description: Any additional filters to apply. Can also include depends filters if the query depends on other field values set.
          items:
            type: object
          type: array
        entryClass:
          description: ' Entry Class is used to identify correct grid only used for Nacha file import payments.'
          type: string
        fieldName:
          description: Name of the field if any we are querying information for
          type: string
        inquiryId:
          description: Inquiry identifier to use for the query. Note either an inquiry or the action context will be used to determine the query being performed
          format: int64
          type: integer
        queryField:
          description: queryField
          type: string
        queryType:
          description: queryType
          type: string
        queryValue:
          description: 'Value to match '
          type: string
        searchByKey:
          default: false
          description: searchByKey
          type: boolean
        subTypeCode:
          description: Sub type for the action context.
          type: string
        templateTnum:
          description: Tnum of template, if required by query to produce list results
          type: string
        tnum:
          description: Tnum of payment, if required by query to produce list results
          type: string
      type: object
    QueryData:
      properties:
        numRows:
          description: numRows
          format: int32
          type: integer
        queryRows:
          description: queryRows
          items:
            type: object
          type: array
        rowsPerPage:
          default: 0
          description: rowsPerPage
          format: int32
          type: integer
        totalPages:
          default: 0
          description: totalPages
          format: int32
          type: integer
        totalRows:
          default: 0
          description: totalRows
          format: int32
          type: integer
      required:
        - numRows
      type: object
    QueryDataRequest:
      properties:
        formatterType:
          description: Optional element for specifying the name of the formatter
          type: string
        includeMapData:
          description: 0=Omit Map Data 1=Include Map Data
          format: int32
          type: integer
          xml:
            name: IncludeMapData
        queryCriteria:
          $ref: '#/components/schemas/QueryCriteria'
          description: Search criteria for query
        requestHeader:
          $ref: '#/components/schemas/RequestHeaderMulti'
          description: requestHeader
      required:
        - queryCriteria
      type: object
    QueryDataResponse:
      properties:
        queryResponse:
          $ref: '#/components/schemas/QueryResponse'
          description: queryResponse
      required:
        - queryResponse
      type: object
    QueryResponse:
      properties:
        queryData:
          $ref: '#/components/schemas/QueryData'
          description: queryData
          xml:
            name: QueryData
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
        responseParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: responseParameters
      required:
        - queryData
        - respHeader
        - responseParameters
      type: object
    QuickEntry:
      properties:
        amount:
          type: number
        creditCurrency:
          type: string
        duplicateReason:
          type: string
        indicativeAmount:
          type: number
        indicativeRate:
          type: number
        interestRate:
          type: number
        saveWithWarning:
          type: boolean
        templateId:
          type: string
        valueDate:
          type: string
      type: object
    QuickEntryDetails:
      properties:
        accountNumber:
          type: string
        amount:
          type: number
        beneficiaryName:
          type: string
        creditCurrency:
          type: string
        currency:
          type: string
        duplicateReason:
          type: string
        errors:
          items:
            type: string
          type: array
        id:
          type: string
        indicativeAmount:
          type: number
        indicativeRate:
          type: number
        interestRate:
          type: number
        possibleDuplicate:
          type: boolean
        saveWithWarning:
          type: boolean
        status:
          type: boolean
        statusMessage:
          type: string
        templateId:
          type: string
        templateName:
          type: string
        type:
          type: string
        usergroupsequencenumber:
          type: string
        valueDate:
          type: string
      type: object
    QuickEntryRequest:
      properties:
        quickEntry:
          items:
            $ref: '#/components/schemas/QuickEntry'
          type: array
      type: object
    QuickEntryResponse:
      properties:
        challengeRequired:
          type: boolean
        challengeType:
          type: string
        challengedAction:
          $ref: '#/components/schemas/ActionData'
        confirms:
          $ref: '#/components/schemas/ConfirmData'
        crossSessionMessageId:
          type: string
        duplicateAccepted:
          type: boolean
        errorCode:
          format: int32
          type: integer
        failed:
          items:
            $ref: '#/components/schemas/QuickEntryDetails'
          type: array
        status:
          type: boolean
        successful:
          items:
            $ref: '#/components/schemas/QuickEntryDetails'
          type: array
        totalEntries:
          format: int32
          type: integer
        totalFail:
          format: int32
          type: integer
        totalSuccess:
          format: int32
          type: integer
      type: object
    RTPConversationActionResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
        maximumAllowedAllotmentReached:
          type: boolean
      type: object
    RTPConversationMessageStatusResponse:
      properties:
        incorrectInfoCount:
          format: int32
          type: integer
        maximumAllowedAllotmentReached:
          type: boolean
        message:
          type: string
        missingInfoCount:
          format: int32
          type: integer
        paymentAckCount:
          format: int32
          type: integer
        requestForInfoCount:
          format: int32
          type: integer
        responseCount:
          format: int32
          type: integer
      type: object
    RandomQuesAnswers:
      description: A security question.
      properties:
        columnId:
          description: The number of the question answer pair
          type: string
        name:
          description: The security question application resource code
          type: string
        value:
          description: The security question localised value
          type: string
      required:
        - columnId
        - name
        - value
      type: object
    RandomQuesRespWrapper:
      description: A list of random question and answers
      properties:
        items:
          description: A list of random question and answers
          items:
            $ref: '#/components/schemas/RandomQuesAnswers'
          type: array
      required:
        - items
      type: object
    RandomQuesResponse:
      description: A response for a request to challenge the user with security questions and answers
      properties:
        data:
          $ref: '#/components/schemas/RandomQuesRespWrapper'
          description: Random questions
        enrollmentStatus:
          description: Determines whether the user has sufficient security questions set up.
          type: boolean
        locale:
          description: User locale based on the company and userid
          type: string
        message:
          description: Response message to indicate success or a failure reason
          type: string
        responseCode:
          description: Response code to indicate success or a failure reason
          enum:
            - '[NotAuthorized'
            - Failed
            - Success]
          type: string
      required:
        - data
        - enrollmentStatus
        - message
        - responseCode
      type: object
    RdcSessionData:
      properties:
        depositBatchId:
          description: Deposit Batch Id for the new batch
          type: string
        sessionStateId:
          description: Session State Id from the response
          type: string
        sessionToken:
          description: Session Token from the response
          type: string
        transactionID:
          description: Identifier of a deposited check
          type: string
      required:
        - transactionID
      type: object
    ReadAllFilterRequest:
      properties:
        childSearchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        childSortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        headerSearchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        headerSortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        rowsPerPage:
          format: int32
          type: integer
        startRow:
          format: int32
          type: integer
      type: object
    ReadConfigurationRequest:
      properties:
        queryOffset:
          format: int32
          type: integer
        queryPagesize:
          format: int32
          type: integer
        widgetId:
          type: string
      type: object
    ReadConfigurationResponse:
      properties:
        accountConfigItems:
          description: accountConfigItems
          items:
            type: object
          type: array
        accountFilters:
          description: accountFilters
          items:
            type: object
          type: array
        amountPreference:
          description: amountPreference
          type: string
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
      required:
        - amountPreference
        - respHeader
      type: object
    Recipients:
      description: List of recipients
      properties:
        recipients:
          description: list of recipients
          items:
            type: object
          type: array
      required:
        - recipients
      type: object
    RecipientsRequest:
      description: A request to get the recipients for an alert.
      properties:
        actionMode:
          description: 'The mode of operation: INSERT, MODIFY, etc.'
          type: string
        alertId:
          description: Alert identifier
          type: string
        groupFlag:
          description: The groupflag indicating if the recipient is a group or not
          type: string
        recipient:
          description: The recipient's name, this could be a group name, a single recipient's name or a freeform email
          type: string
        tenantId:
          description: The tenantId of the logged in user
          type: string
        userGroup:
          description: The userGroup for the recipient
          type: string
      required:
        - alertId
        - groupFlag
        - recipient
        - tenantId
        - userGroup
      type: object
    Record:
      properties:
        data:
          description: data
          items:
            type: object
          type: array
      required:
        - data
      type: object
    ReportDataRequest:
      properties:
        disposition:
          description: Intended use for the report data
          enum:
            - view
            - export
          type: string
        endPage:
          description: Ending page number to retrieve.  Defaults to the last page of the report
          format: int32
          type: integer
        exportId:
          description: The ID of the exported PDF report
          type: string
        fileName:
          type: string
        format:
          description: The format for the report.
          enum:
            - PDF
            - TXT
            - HTML
            - CSV
          type: string
        reportUId:
          description: The ID of the Jasper JRPrint object. Maintained for backwards compatibility with old reports workflow
          type: string
        simulatedSession:
          type: boolean
        startPage:
          description: Beginning page number to retrieve. Defaults to 1
          format: int32
          type: integer
        type:
          description: Type of report requested
          enum:
            - jasper
            - legacy
          type: string
      required:
        - disposition
        - exportId
        - format
        - reportUId
        - type
      type: object
    ReportDataResponse:
      properties:
        errorCode:
          description: Response code
          format: int32
          type: integer
        exportId:
          format: int32
          type: integer
        messages:
          items:
            type: string
          type: array
        reportData:
          description: Base64 encoded report data
          type: string
      required:
        - errorCode
      type: object
    ReportTypeEntitlementsResponse:
      properties:
        reportTypeEntitlements:
          items:
            $ref: '#/components/schemas/AccessReportTypeResponse'
          type: array
      type: object
    ReportViewRequest:
      properties:
        accountSearchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        accountsGroup:
          additionalProperties:
            type: object
          type: object
        accountsGroups:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        additionalProperties:
          additionalProperties:
            type: object
          type: object
        filterValues:
          additionalProperties:
            type: object
          type: object
        includeSummaryInfo:
          format: int32
          type: integer
        inquiryId:
          format: int32
          type: integer
        numberOfRows:
          format: int32
          type: integer
        outputFormat:
          type: string
        pageType:
          type: string
        requestId:
          type: string
        searchFields:
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        separated:
          format: int32
          type: integer
        serviceCode:
          type: string
        simulatedSession:
          type: boolean
        sortFields:
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        tnum:
          type: string
        totalsInquiryId:
          format: int32
          type: integer
        viewId:
          type: string
      type: object
    ReportViewResponse:
      properties:
        errorCode:
          format: int32
          type: integer
        exportId:
          format: int32
          type: integer
        messages:
          items:
            type: string
          type: array
        reportData:
          type: string
        reportFormat:
          type: string
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    RequestHeader:
      description: Standard request header
      properties:
        channelId:
          description: Channel identifier.
          type: string
        originatingService:
          description: Originating service the call is being performed through. This can be used for other processes such as proxies to determine how to route the message
          type: string
        requestId:
          description: Arbitary identifier passed in the request for tracking purposes
          type: string
        requestUser:
          $ref: '#/components/schemas/UserData'
          description: User performing the request.
        routingContext:
          description: routingContext
          type: string
      required:
        - requestId
      type: object
    RequestHeaderMulti:
      properties:
        channelId:
          description: Channel identifier.
          type: string
        originatingService:
          description: Originating service the call is being performed through. This can be used for other processes such as proxies to determine how to route the message
          type: string
        queryOffset:
          description: Record offset into a set of records if the request supports paging
          format: int32
          type: integer
        queryPagesize:
          description: The number of records for each page to retrieve
          format: int32
          type: integer
        requestId:
          description: Arbitary identifier passed in the request for tracking purposes
          type: string
        requestUser:
          $ref: '#/components/schemas/UserData'
          description: User performing the request.
        routingContext:
          description: routingContext
          type: string
      required:
        - queryOffset
        - queryPagesize
        - requestId
      type: object
    ResendActivationEmailRSARequest:
      description: Request to re-send RSA activation email
      properties:
        attempts:
          description: Identifies the number of attempt the user requested an RSA activation email in a session
          type: string
        challengeType:
          description: The type of challenge
          type: string
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        user:
          description: ID of the user
          type: string
        userGroup:
          description: Company ID of the user
          type: string
      required:
        - challengeType
        - challengedAction
      type: object
    ResendActivationEmailRSAResponse:
      description: Request to re-send RSA activation email
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - challengedAction
        - respHeader
      type: object
    ResetPinRequest:
      description: Request to reset token pin
      properties:
        challengeType:
          description: The type of challenge
          type: string
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        tokenString:
          description: Token
          type: string
      required:
        - challengeType
        - challengedAction
      type: object
    ResetPinResponse:
      description: Response to reset token pin
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - challengedAction
        - respHeader
      type: object
    ResponseHeader:
      description: Standard response generic values for some service operations
      properties:
        additionalData:
          description: Optional field for any additional Information to be communicated
          items:
            type: object
          type: array
        errorCode:
          description: An error code
          format: int64
          type: integer
        message:
          description: A generic message
          items:
            type: object
          type: array
        messageWithContext:
          description: A generic message with context including an optional error code if available.
          items:
            type: object
          type: array
        requestId:
          description: Identifier from the original service request
          type: string
        result:
          description: Determines whether the call was successful
          type: boolean
      required:
        - errorCode
        - message
        - requestId
        - result
      type: object
    ResponseHeaderMultiItem:
      description: Response message for multiple items
      properties:
        itemResponseHeader:
          description: The response for each requested item
          items:
            type: object
          type: array
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
      required:
        - respHeader
      type: object
    Restricted:
      properties:
        applicable:
          description: A boolean that indicates if something is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if something is entitled
          type: boolean
        maxValue:
          type: object
        value:
          type: object
      type: object
    RestrictedLong:
      properties:
        applicable:
          description: A boolean that indicates if something is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if something is entitled
          type: boolean
        maxValue:
          format: int64
          type: integer
        value:
          format: int64
          type: integer
      type: object
    RestrictedObject:
      properties:
        applicable:
          description: A boolean that indicates if something is applicable
          type: boolean
        entitled:
          description: A boolean that indicates if something is entitled
          type: boolean
        maxValue:
          type: object
        value:
          type: object
      type: object
    RoleEntitlementModel:
      description: Stores all the information needed to save and modify entitlements.
      properties:
        dataEntitlements:
          items:
            $ref: '#/components/schemas/DataEntitlementRequest'
          type: array
        roleInfo:
          $ref: '#/components/schemas/NameValuePairList'
        sections:
          description: Represents a list of the available (product level) sections. Each section contains groups where the user may entitled specific functionalities within the application.
          items:
            $ref: '#/components/schemas/SectionLevel'
          type: array
        usergroupSettings:
          additionalProperties:
            type: string
          type: object
      type: object
    RoleEntitlementsMaintenanceModel:
      description: Stores all the information for a role and its entitlements.
      properties:
        masterTabs:
          description: Represents a list of the available tabs. Each tab contains a section where the user may entitled specific functionalities within the application.
          items:
            $ref: '#/components/schemas/MasterTabContents'
          type: array
        roleInfo:
          $ref: '#/components/schemas/NameValuePairList'
          description: Contains details of the role to which this entitlement model belongs.
      type: object
    RoleIdentifier:
      properties:
        provisioningAction:
          description: provisioningAction
          enum:
            - A
            - U
            - D
            - 'N'
            - C
            - P
            - I
          type: string
          xml:
            attribute: true
            namespace: http://www.bottomline.com/webseries/schema/ps/platform/entitlements/v1
        roleId:
          description: Role ID
          type: string
        roleType:
          description: This indicates the type of role.
          format: int64
          type: integer
        updateCount:
          description: updateCount
          format: int64
          type: integer
          xml:
            attribute: true
        userGroup:
          $ref: '#/components/schemas/UserGroupIdentifier'
          description: This represents a client organization (entreprise or a subsidiary). Within WebSeries a company is always associated with a user group. It is optional within this type because user group may be supplied by enclosing structure.
      required:
        - roleId
      type: object
    RowIdentifier:
      properties:
        functionCode:
          description: functionCode
          type: string
        productCode:
          description: productCode
          type: string
        tnum:
          description: tNum
          type: string
        typeCode:
          description: typeCode
          type: string
        updateCount:
          description: updateCount
          format: int64
          type: integer
      required:
        - functionCode
        - productCode
        - typeCode
      type: object
    RunReportRequest:
      properties:
        additionalParameters:
          description: Additional filter criteria to be applied to the report
          items:
            $ref: '#/components/schemas/NameValuePair'
          type: array
        detailSortFields:
          description: Sort criteria to be used in any detail subreports
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        filterData:
          description: Values for filter fields specified in the report configuration
          items:
            type: string
          type: array
        label:
          description: An optional identifier for the report
          type: string
        productCode:
          description: Product code of the report to be run
          type: string
        profileNumber:
          description: ID of the profile being used it this request if for a saved report profile
          format: int32
          type: integer
        reportId:
          description: ID of the report to be run
          type: string
        searchFields:
          description: Search criteria to be used in the reports
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        sortFields:
          description: Sort criteria to be used in the reports
          items:
            $ref: '#/components/schemas/SortField'
          type: array
        viewId:
          description: The view ID of the selected grid
          type: string
      required:
        - productCode
        - reportId
      type: object
    RunReportResponse:
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Action data for this request in case where this report is configured for MFA and the request should be challenged
        errorCode:
          description: Response code
          format: int32
          type: integer
        exportId:
          description: The ID of the exported PDF report available for download.
          format: int32
          type: integer
        messages:
          description: Generic messages returned by the server
          items:
            type: string
          type: array
        targetId:
          description: The ID of the Jasper JRPrint object. Maintained for backwards compatibility with old reports workflow
          format: int32
          type: integer
      required:
        - errorCode
        - exportId
        - targetId
      type: object
    SMBRdmLocation:
      properties:
        disabled:
          description: disabled
          type: boolean
        locationName:
          description: locationName
          type: string
        loginId:
          description: loginId
          type: string
      required:
        - locationName
      type: object
    SMBUserEntitlementsMaintenanceModel:
      description: Stores all the information needed to save and modify a SMB user.
      properties:
        accounts:
          description: A Set of all the entitled accounts
          items:
            $ref: '#/components/schemas/EntitledAccount'
          type: array
          uniqueItems: true
        assignAllAccount:
          description: A boolean that indicates if all accounts are assigned.
          type: boolean
        assignAllBankWidget:
          description: A boolean that indicates if all bank widgets are assigned.
          type: boolean
        bankWidgets:
          additionalProperties:
            type: string
          description: A Set of all the entitled bank widgets
          type: object
        clientLocations:
          items:
            $ref: '#/components/schemas/SMBRdmLocation'
          type: array
        dailyLimit:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The daily limit restriction for every accounts
        errorMessages:
          $ref: '#/components/schemas/ErrorMessages'
          description: The error messages
        fileLimit:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The file limit restriction
        globalSettings:
          additionalProperties:
            type: object
          description: Properties that are relevant for a particular complex type at a global level.
          type: object
        modelValid:
          description: A boolean that indicated if the model is valid or not.
          type: boolean
        permissions:
          items:
            $ref: '#/components/schemas/ApplicablePermissionWithValue'
          type: array
        templateEntitlement:
          description: A boolean that indicates if the usergroup is entitled to any template type
          type: boolean
        transactionLimit:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The transaction limit restriction for every accounts
        userInfo:
          $ref: '#/components/schemas/NameValuePairList'
          description: the user information
      type: object
    SSOFieldValueRequest:
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
        vendorCode:
          type: string
      type: object
    SSOLoginRequest:
      properties:
        functionCode:
          type: string
        params:
          items:
            $ref: '#/components/schemas/NameValuePair'
          type: array
        productCode:
          type: string
        typeCode:
          type: string
      type: object
    SSOLoginResponse:
      properties:
        parameters:
          items:
            $ref: '#/components/schemas/PairStringString'
          type: array
        dialog:
          type: string
        dialogItemDescription:
          type: string
        dialogItems:
          items:
            $ref: '#/components/schemas/DialogItem'
          type: array
        dialogMessage:
          type: string
        errorMsg:
          type: string
        htmlContent:
          type: string
        inNewWindow:
          type: boolean
        message:
          type: string
        postRedirect:
          type: boolean
        redirectURL:
          type: string
        success:
          type: boolean
        token:
          type: string
        vendorCode:
          type: string
      type: object
    SSOLogoutRequest:
      type: object
    SSOLogoutResponse:
      properties:
        formIds:
          items:
            type: string
          type: array
        formLogout:
          type: string
        imgLogout:
          type: string
      type: object
    SaveConfigurationRequest:
      properties:
        accountFilters:
          items:
            type: string
          type: array
        amountPreference:
          type: string
        widgetId:
          type: string
      type: object
    SaveConfigurationResponse:
      properties:
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: respHeader
      required:
        - respHeader
      type: object
    SaveOTPDestinationsRequest:
      description: Update the set of one time passcode contact destinations for the user
      properties:
        destinations:
          description: The set of destinations
          items:
            type: object
          type: array
      type: object
    SaveOTPDestinationsResponse:
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: challengedAction
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Digital Banking standard response fields
      required:
        - responseHeader
      type: object
    SchExportValidatorRequest:
      properties:
        name:
          type: string
        userGroup:
          type: string
      type: object
    SchExportValidatorResponse:
      properties:
        message:
          type: string
        title:
          type: string
        validName:
          type: boolean
      type: object
    ScheduleNextEarliestValueDateRequest:
      properties:
        beneBankId:
          type: string
        beneCountry:
          type: string
        creditCurrency:
          type: string
        debitBankCode:
          type: string
        debitCountry:
          type: string
        debitCurrency:
          type: string
        subType:
          type: string
        type:
          type: string
      type: object
    ScheduleNextEarliestValueDateResponse:
      properties:
        valueDate:
          type: string
      type: object
    ScheduledExport:
      description: An export which should be scheduled in the system to run at predefined times
      properties:
        currentDay:
          description: Determines whether this export should be applied to currentday to newly created records using the LASTEXPORTEDWATERMARK value which is set for each export type
          type: boolean
        description:
          description: The Audit Description enteries for user friendly text
          type: string
        emailRecipients:
          description: The collection of search fields used to filter the export when run
          items:
            $ref: '#/components/schemas/EmailRecipient'
          type: array
        excludeHeader:
          description: Define the exclude Header that is being scheduled.
          type: string
        exportMapId:
          description: The id of the export map
          type: string
        exportTypeCode:
          description: Define the export type that is being scheduled.
          type: string
        fileName:
          description: The file name to use when the export is created
          type: string
        frequency:
          description: The frequency the export should be created on
          type: string
        identifier:
          description: The identifier of the scheduled export definition
          format: int64
          type: integer
        incrementalExport:
          description: If true the export is executed in an incremental manner so only the records since the last execution are included
          type: boolean
        lastExecutionTime:
          description: Last Execution Tie of this Scheduled Export.
          type: string
        lastExportDir:
          description: The Directory where the exported file was created.
          type: string
        lastExportFile:
          description: The file name of the exported data.
          type: string
        lastExportId:
          description: The Last Export ID.
          type: string
        name:
          description: A desriptive name for the scheduled export definition
          type: string
        outputContent:
          description: Define the output content that is being scheduled.
          type: string
        recipientUsers:
          description: The Users only saved a recipients
          type: string
        reportType:
          description: The report type BANK_REPORTS(0) is the Bank report type, BALANCE_AND_TRANSACTION(1) specifies BTR report, LEGACY_REPORTS(2) is Legacy report type to be stored
          type: string
        runtimes:
          description: The runtime enteries for user friendly text
          type: string
        searchFields:
          description: The collection of search fields used to filter the export when run
          items:
            $ref: '#/components/schemas/SearchField'
          type: array
        split88Record:
          description: Define the split88Record that is being scheduled.
          type: string
        status:
          description: Stores the APPROVAL status of the created Scheduled entry
          type: string
        timeFrequencies:
          description: A list of specific times which define the frequency the export should be created on
          items:
            type: string
          type: array
        timeZoneID:
          description: The timezoneID of the user the export is being run on behalf of
          type: string
        transmissionProfileIdentifier:
          description: The optional identifier of the transmission profile definition
          format: int64
          type: integer
        userGroup:
          description: The identifier of the user group the export is being run on behalf of
          type: string
        userId:
          description: The identifier of the user the export is being run on behalf of
          type: string
      required:
        - currentDay
        - emailRecipients
        - exportTypeCode
        - fileName
        - frequency
        - identifier
        - incrementalExport
        - lastExecutionTime
        - name
        - reportType
        - searchFields
        - status
        - timeFrequencies
        - timeZoneID
        - userGroup
        - userId
      type: object
    SearchCriteria:
      properties:
        action:
          $ref: '#/components/schemas/ActionData'
          description: action
        callingAction:
          $ref: '#/components/schemas/ActionData'
          description: callingAction
        customFilters:
          description: customFilters
          items:
            type: object
          type: array
        fieldName:
          description: fieldName
          type: string
        inquiryId:
          description: inquiryId
          format: int64
          type: integer
        operationalData:
          default: false
          description: This is set to true if data requested should be operational data rather than mainteance data. Maintenance data may include items that have not been approved.
          type: boolean
        searchFields:
          description: searchFields
          items:
            type: object
          type: array
        searchOrOperator:
          default: false
          description: This is set to true if filter that is constructed from Search Fields is to use OR operator.
          type: boolean
        searchType:
          description: searchType
          type: string
        sortFields:
          description: sortFields
          items:
            type: object
          type: array
        subTypeCode:
          description: subTypeCode
          type: string
      required:
        - action
        - inquiryId
        - searchOrOperator
      type: object
    SearchField:
      description: A field used for searching
      properties:
        dataType:
          description: The data type of the field which can be either text, numeric, date or gmtdate.
          type: string
        fieldName:
          description: The name of the field.
          type: string
        fieldValue:
          description: The field value.
          items:
            type: object
          type: array
        operator:
          description: Operator to combine with the field name and value when searching. Values BETWEEN, IN, LIKE, STARTSWITH, EQ, NOTEQ, GT, LT, GTEQ, LTEQ
          type: string
      required:
        - dataType
        - fieldName
        - fieldValue
        - operator
      type: object
    SectionLevel:
      description: Represents a product level section. E.g. Payments, Admin, Reports, Alerts, etc.
      properties:
        displayOrder:
          format: int32
          type: integer
        globalSettings:
          additionalProperties:
            $ref: '#/components/schemas/GlobalRestriction'
          description: Properties that are relevant for a particular complex type at a global level.
          type: object
        groups:
          description: Represents a list groups within this section. A group contains specific functionalities within the application that can be entitled.
          items:
            $ref: '#/components/schemas/GroupLevel'
          type: array
        id:
          type: string
        label:
          type: string
      type: object
    ServiceClientContext:
      description: Defines context information associated with a service call
      properties:
        actionData:
          $ref: '#/components/schemas/ActionWithSubtype'
          description: Action context for the call
        childActionData:
          $ref: '#/components/schemas/ActionData'
          description: Child Action context for the call
        fromFunction:
          description: fromFunction
          type: string
        fromProduct:
          description: fromProduct
          type: string
        keyList:
          description: List of key values e.g. from an entity being returned
          items:
            type: object
          type: array
        pageTitle:
          description: pageTitle
          type: string
        serviceName:
          description: Name of the service
          type: string
      required:
        - actionData
        - fromFunction
        - fromProduct
        - pageTitle
        - serviceName
      type: object
    ServiceRequestNote:
      description: Represents a note associated with a service request
      properties:
        note:
          description: Descriptive note being assigned to the request
          type: string
        serviceRequestTnum:
          description: Service request identifier associated with the note
          format: int64
          type: integer
      type: object
    SimpleDataEntitlementsByType:
      description: Stores a list of simple data entitlements associated with the given type.
      properties:
        assignAll:
          description: Assign all data entitlements
          type: boolean
        configuredDataType:
          description: The configured cataType
          enum:
            - ACCOUNT
            - CREDITACCOUNT
            - CONTROLDISBURSEMENTACCOUNT
            - LOCKBOXAVAILABILITYACCOUNT
            - ACHCOMP
            - TEMPLATE
            - APPLICATION
            - LEGACYSYSTEMID
            - ESTATEMENTID
            - CONTACTTYPE
            - LOCKBOX
            - REPORTID
            - CLIENTLOCATION
            - EXTERNALWIDGET
            - TOALOCATION
            - CONTROLTOTAL
            - WAREHOUSE
            - NONE
          type: string
        dataEntAttr:
          type: string
        dataEntitlements:
          description: List of simple data entitlements
          items:
            $ref: '#/components/schemas/DataEntitlements'
          type: array
        functionGroup:
          description: The  function group
          type: string
        inquiryId:
          description: The inquiry Id used to get the information regarding the account
          format: int32
          type: integer
        keyCol:
          description: The key inforamtion
          type: string
        type:
          description: The type code associated with the account
          type: string
      type: object
    SimpleEntitlementsByFunctionType:
      description: Represents a simple section for actions and its related entitlements and restrictions.
      properties:
        approve:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for approve
        approveOwn:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for approve own
        authorize:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for authorize
        autoApprove:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for auto Approve
        credit:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for allowing credits
        debit:
          $ref: '#/components/schemas/BooleanRestrictionApplicableWithValue'
          description: The restriction for allowing debits
        entitled:
          description: A boolean that indicates if the action is entitled
          type: boolean
        entryMethod:
          description: An enum that indicates the entry method
          enum:
            - notapplicable
            - freeForm
            - fromTemplate
            - fromRepetitive
            - imported
          type: string
        functionCode:
          description: The function code for the action.
          enum:
            - asterisk
            - accgpset
            - acctstch
            - acctaccs
            - apptn
            - beneaal
            - beneahal
            - positivePayInstruction
            - changePassword
            - checkManagement
            - cimbatch
            - ciminst
            - cmpastm
            - reversePositivePayInstruction
            - deroles
            - history
            - imageSearch
            - inq
            - imprt
            - jasperReport
            - lockbox
            - maintenance
            - paassign
            - paproflt
            - paprothr
            - profile
            - quickEntry
            - reconexc
            - reqrpt
            - roles
            - secprt
            - swidget
            - swkspace
            - templateSet
            - tool
            - twidget
            - twkspace
            - workspace
            - users
            - uwidgets
            - widgets
            - instruction
            - template
            - batch
            - batchTemplate
            - alert
            - report
            - other
            - statement
            - export
            - controlledDisbursement
            - lockboxAvailability
            - listrpt
            - largebatchrpt
            - msgs
            - request
            - reqtmpl
            - cff
            - automtn
          type: string
        functionGroup:
          description: The function group that this action belongs to.
          type: string
        manage:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for manage
        productCode:
          description: The product code for the action.
          type: string
        reverse:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for reverse
        typeCode:
          description: The type code for the action.
          type: string
        typeCodeLabel:
          description: The label for the type code associated with the action.
          type: string
        typeGroup:
          description: The type group that this action belongs to.
          type: string
        typeGroupLabel:
          description: The label of the type group.
          type: string
        view:
          $ref: '#/components/schemas/ActionGroupApplicableWithValue'
          description: The action for view
      type: object
    SimpleTypeGroup:
      description: Stores a simple representation of the entitlements for the given type.
      properties:
        displayOrder:
          description: not used
          format: int32
          type: integer
        entitlementsByType:
          items:
            $ref: '#/components/schemas/SimpleEntitlementsByFunctionType'
          type: array
        simpleDataEntitlements:
          $ref: '#/components/schemas/SimpleDataEntitlementsByType'
          description: The simple Data Entitlment
        typeGroupId:
          description: The group that the type is associated to.
          type: string
        typeGroupLabel:
          description: The label of the type group.
          type: string
      type: object
    SortField:
      properties:
        fieldName:
          description: Specifies the name of the sort field.
          type: string
        sortOrder:
          description: Specifies the order of the sort field ASC ( ascending ) or DESC ( descending )
          type: string
      required:
        - fieldName
        - sortOrder
      type: object
    StatementImageResponse:
      properties:
        fileName:
          description: Name of image file.
          type: string
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: WebSeries standard request fields
        statementImageData:
          $ref: '#/components/schemas/Image'
          description: Encoded binary data containing statement image. Required xmime:contentType attribute will contain mime type for image data.
      required:
        - responseHeader
        - statementImageData
      type: object
    TOACloseAccountResponse:
      properties:
        closingBalance:
          type: number
        errorCode:
          type: integer
        optAccountName:
          type: string
        optAccountNumber:
          type: string
        optAccountType:
          type: string
        optBankCode:
          type: string
        optCurrencyCode:
          type: string
        status:
          type: boolean
        toaAccountName:
          type: string
        toaAccountNumber:
          type: string
        toaCurrencyCode:
          type: string
        todayDate:
          type: string
      type: object
    TableMaintRequest:
      properties:
        grids:
          items:
            $ref: '#/components/schemas/Grid'
          type: array
        item:
          $ref: '#/components/schemas/NameValuePairList'
      type: object
    TokenActivationRequest:
      description: Request to get token registration code
      properties:
        activationCode:
          description: activationCode
          type: string
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        prompts:
          description: prompts
          items:
            type: object
          type: array
        registrationId:
          description: registrationId
          type: string
        tokenType:
          description: tokenType
          type: string
      required:
        - challengedAction
        - tokenType
      type: object
    TokenActivationResponse:
      description: Response to the request to validate MFA secrets
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        crontoImage:
          description: The cronto image
          type: string
        prompts:
          description: prompts
          items:
            type: object
          type: array
        registrationId:
          description: The unique identifier for the offline soft token registration
          type: string
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
        showFirstContro:
          description: showFirstContro
          type: boolean
        showSecondContro:
          description: showSecondContro
          type: boolean
      required:
        - challengedAction
        - respHeader
        - showFirstContro
        - showSecondContro
      type: object
    TokenAssignment:
      properties:
        assignedDeviceName:
          type: string
        assignedToken:
          type: string
        assignedTokenProfile:
          type: string
        assignedTokenType:
          type: string
        assignedUserId:
          type: string
      type: object
    TokenAssignmentRequest:
      properties:
        assignmentList:
          items:
            $ref: '#/components/schemas/TokenAssignment'
          type: array
        companyId:
          type: string
        responseHeader:
          $ref: '#/components/schemas/RequestHeader'
        ssoId:
          type: string
      type: object
    TokenInfo:
      properties:
        deviceFamilyName:
          type: string
        tokenProfile:
          type: string
        tokenSerialNumber:
          type: string
        tokenType:
          type: string
        userId:
          type: string
      type: object
    TokenManagementRequest:
      properties:
        companyId:
          type: string
        responseHeader:
          $ref: '#/components/schemas/RequestHeader'
        ssoId:
          type: string
        tokenAction:
          type: string
        tokenInfo:
          $ref: '#/components/schemas/TokenInfo'
      type: object
    TokenManagementResponse:
      properties:
        actionResponse:
          $ref: '#/components/schemas/ActionResponse'
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    TokenReplacement:
      properties:
        deviceFamilyName:
          type: string
        newTokenSerialNumber:
          type: string
        newTokenType:
          type: string
        oldTokenSerialNumber:
          type: string
        oldTokenType:
          type: string
        tokenProfile:
          type: string
        userId:
          type: string
      type: object
    TokenReplacementRequest:
      properties:
        companyId:
          type: string
        responseHeader:
          $ref: '#/components/schemas/RequestHeader'
        tokenReplacement:
          $ref: '#/components/schemas/TokenReplacement'
      type: object
    TransmissionProfile:
      description: A transmission profile which defines how an entity can be transmitted to another system e.g. a scheduled export
      properties:
        description:
          description: The description of the profile
          type: string
        identifier:
          description: The identifier of the transmission profile definition
          format: int64
          type: integer
        name:
          description: The name of the profile
          type: string
        port:
          description: The port to use when accessing the profile e.g. SFTP port
          format: int64
          type: integer
        sitePassword:
          description: The site user password to use when accessing the profile e.g. SFTP password
          type: string
        siteUrl:
          description: The site URL the profile can be accessed from e.g. SFTP URL
          type: string
        siteUserId:
          description: The site user identifier to use when accessing the profile e.g. SFTP user
          type: string
        userGroup:
          description: The identifier of the user group the export is being run on behalf of
          type: string
        userId:
          description: The identifier of the user the transmission profile belongs to
          type: string
      required:
        - description
        - identifier
        - name
        - port
        - sitePassword
        - siteUrl
        - siteUserId
        - userGroup
        - userId
      type: object
    TypeData:
      properties:
        data:
          $ref: '#/components/schemas/NameValuePairList'
          description: data
        functionCode:
          description: functionCode
          type: string
        productCode:
          description: productCode
          type: string
        typeCode:
          description: typeCode
          type: string
      required:
        - data
        - functionCode
        - productCode
        - typeCode
      type: object
    TypeGroupContents:
      description: Store all the actions and their entitlements and restrictions associated with the given type.
      properties:
        detailedTypeEntitlements:
          description: A list of the consolidated entitlements that are common amongst the types.
          items:
            $ref: '#/components/schemas/ActionEntitlementsByFunctionTypeEntryMethod'
          type: array
        displayOrder:
          description: Not used
          format: int32
          type: integer
        entitled:
          description: A boolean that indicates if the action is entitled.
          type: boolean
        overallBatchLimitForType:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The overall batch limit restriction all the actions that belongs to this type.
        overallDailyLimitForType:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The overall daily limit restriction all the actions that belongs to this type.
        overallTransactionLimitForType:
          $ref: '#/components/schemas/AmountRestrictionApplicableWithValue'
          description: The overall transaction limit restriction all the actions that belongs to this type.
        productCode:
          description: The product code.
          type: string
        typeCode:
          description: The type code.
          type: string
        typeCodeLabel:
          description: The label of the type code.
          type: string
        typeDataEntitlements:
          description: The consolidated data restrictions that are common amongst the types.
          items:
            $ref: '#/components/schemas/DataEntitlementsByType'
          type: array
      type: object
    TypeInfo:
      description: Attributes used to describe a transaction type
      properties:
        functionCode:
          description: Function code denoting context of how the type is used. Examples are INST = paymment instructions, TMPL = payment template, MAINT = refreence data mainteance, RPT = reporting. In certain instance a wildcard '*' may be present. This indicates the type is being referenced across all valiid functions. This may be used in the case of accounts where they are enabled for a payment type both for instructions and templates.
          type: string
        productCode:
          description: Product code denoting product this type fall under, e.g. PAY for payments
          type: string
        typeCode:
          description: Type code denoting instruction or data type, e.g. FEDWIRE for US domestic wire payment
          type: string
      required:
        - functionCode
        - productCode
        - typeCode
      type: object
    TypeLevel:
      description: A grouping of functionalites that can be entitled by type code.
      properties:
        applicable:
          type: boolean
        dataEntitlementsApplicable:
          type: boolean
        dataEntitlementsAttributes:
          items:
            type: string
          type: array
        entitled:
          type: boolean
        entitlements:
          description: Represents a list entitlments for this type.
          items:
            $ref: '#/components/schemas/EntitlementContext'
          type: array
        expandedActions:
          items:
            type: string
          type: array
        functionCode:
          type: string
        id:
          type: string
        label:
          type: string
        limits:
          additionalProperties:
            $ref: '#/components/schemas/RestrictedLong'
          description: Represents a map overall approval limits for this type.
          type: object
        productCode:
          type: string
        useActions:
          type: boolean
      type: object
    UpdateProfileRequest:
      properties:
        profileData:
          $ref: '#/components/schemas/ProfileData'
        profileNumber:
          format: int32
          type: integer
      type: object
    UpdateProfileResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
      type: object
    UserData:
      properties:
        data:
          $ref: '#/components/schemas/NameValuePairList'
          description: data
        userId:
          description: userId
          type: string
      required:
        - data
        - userId
      type: object
    UserEntitlementModel:
      description: Stores all the information needed to save and modify a user and the entitlements.
      properties:
        dataEntitlements:
          items:
            $ref: '#/components/schemas/DataEntitlementRequest'
          type: array
        sections:
          description: Represents a list of the available (product level) sections. Each section contains groups where the user may entitled specific functionalities within the application.
          items:
            $ref: '#/components/schemas/SectionLevel'
          type: array
        userInfo:
          $ref: '#/components/schemas/NameValuePairList'
        usergroupSettings:
          additionalProperties:
            type: string
          type: object
      type: object
    UserEntitlementsMaintenanceModel:
      description: Stores all the information needed to save and modify a user and the entitlements.
      properties:
        masterTabs:
          description: Represents a list of the available tabs. Each tab contains a section where the user may entitled specific functionalities within the application.
          items:
            $ref: '#/components/schemas/MasterTabContents'
          type: array
        userInfo:
          $ref: '#/components/schemas/NameValuePairList'
          description: Contains all the user information.
      type: object
    UserGroupIdentifier:
      properties:
        groupId:
          description: Identifies a group of users. This represents either a client organization or, in the context of admin application, a customer service or operations group.
          type: string
        parentGroupId:
          description: 'If the group is a subsidiary group this identifies the enterprise to which it belongs. If this is an "enterprise" group the group id and parent group id will be the same value. '
          type: string
        updateCount:
          description: updateCount
          format: int64
          type: integer
          xml:
            attribute: true
      required:
        - groupId
      type: object
    UserIdentifier:
      properties:
        updateCount:
          description: updateCount
          format: int64
          type: integer
          xml:
            attribute: true
        userGroup:
          description: Key into the UserGroup table. User group represents the company user associated with or for internal users the customer service group the user belongs to.
          type: string
        userId:
          description: WebSeries identfier for user. Unique only within group.
          type: string
      required:
        - userGroup
        - userId
      type: object
    UserListRequest:
      properties:
        users:
          items:
            $ref: '#/components/schemas/UserIdentifier'
          type: array
      type: object
    ValidateActivatePhoneRequest:
      properties:
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        passCode:
          description: Pass code associated with the token.
          type: string
        phoneNumber:
          description: The number of the phone to activate
          type: string
      required:
        - phoneNumber
      type: object
    ValidateActivatePhoneResponse:
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
      required:
        - challengedAction
        - respHeader
      type: object
    ValidateContractRestRequest:
      properties:
        actionMode:
          type: string
        contractId:
          type: string
        creditAcctNumber:
          type: string
        creditAmount:
          type: string
        creditCurrency:
          type: string
        debitAcctNumber:
          type: string
        debitAmount:
          type: string
        debitBankCode:
          type: string
        debitCurrency:
          type: string
        enteredAmountFlag:
          type: string
        tranDate:
          type: string
        typeCode:
          type: string
        valueDate:
          type: string
      type: object
    ValidateContractRestResponse:
      properties:
        fxRate:
          type: string
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        status:
          type: string
      type: object
    ValidateMFARequest:
      description: Request to validate MFA secrets
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        customParameters:
          $ref: '#/components/schemas/NameValuePairList'
          description: Additional generic values for external systems to use if required
        oneTimePassword:
          description: One time password delivered to the user
          type: string
        prompts:
          description: prompts
          items:
            type: object
          type: array
        tokenPassCode:
          description: Pass code associated with the token.
          type: string
        tokenPin:
          description: User Pin for the Token.
          type: string
        tokenString:
          description: Token
          type: string
        userRequestingOnBehalfOf:
          $ref: '#/components/schemas/UserIdentifier'
          description: Identifies the user for whom to validate the out of band authentication
      required:
        - challengedAction
      type: object
    ValidateMFAResponse:
      description: Response to the request to validate MFA secrets
      properties:
        challengedAction:
          $ref: '#/components/schemas/ActionData'
          description: Identifies the action the user was performing that caused the initial MFA challenge
        prompts:
          description: prompts
          items:
            type: object
          type: array
        requiresMoreInforamtion:
          description: requiresMoreInforamtion
          type: boolean
        respHeader:
          $ref: '#/components/schemas/ResponseHeader'
          description: Response header
        showConfirmNewPin:
          description: showConfirmNewPin
          type: boolean
        showNewPin:
          description: showNewPin
          type: boolean
        showNextTokenCode:
          description: showNextTokenCode
          type: boolean
        showPasscode:
          description: showPasscode
          type: boolean
        showSystemGenerated:
          description: showSystemGenerated
          type: boolean
      required:
        - challengedAction
        - requiresMoreInforamtion
        - respHeader
        - showConfirmNewPin
        - showNewPin
        - showNextTokenCode
        - showPasscode
        - showSystemGenerated
      type: object
    WidgetInfoRequest:
      properties:
        colNum:
          format: int32
          type: integer
        external:
          type: boolean
        id:
          format: int32
          type: integer
        rowNum:
          format: int32
          type: integer
        size:
          type: string
      type: object
    WorkspaceRequest:
      properties:
        marketSegment:
          type: string
        tenantId:
          type: string
      type: object
    WorkspaceSaveRequest:
      properties:
        id:
          type: string
        widgets:
          items:
            $ref: '#/components/schemas/WidgetInfoRequest'
          type: array
      type: object
tags:
  - description: Electronic Positive Pay Decision
    name: strict/risk
  - description: Payment Fraud Control Stateless Rest Service
    name: strict/cm
  - name: strict/tieredLoanSubAccount/transactions/export
  - name: strict/accountGroups
  - description: Loan Reporting rest service
    name: strict/loanreporting
  - description: Deposit Accounts Reporting rest service
    name: strict/balanceAndTransaction
  - description: Notification rest service
    name: strict/notifications
  - name: strict/payment
  - name: strict/girexport
  - description: Reporting download service
    name: strict/reportDownload
  - description: Strict Multi Factor Authentication Service
    name: strict/mfaService
  - description: Help Pages service
    name: strict/help
  - description: Advance Filter service
    name: strict/advanceFilter
  - description: ListView Filter service
    name: strict/listViewFilter
  - description: Auditlog rest service
    name: strict/audit
  - description: Table Maintenance Rest Service
    name: strict/tableMaintenance
  - description: Workspace rest service
    name: strict/workspaces
  - description: Inquiry rest service
    name: strict/inquiry
  - description: Date service
    name: strict/date
  - description: Real Time Received Payments (Credit Transfer Messages)
    name: realTimeReceivedPayment
  - description: Real Time Submitted Payments (Debit)
    name: realTimeSubmittedPayment
  - description: CXP rest service
    name: cxp
  - description: Loan Reporting rest service
    name: loanreporting
  - name: loanAccounts/previousDay/accountGroup/export
  - name: loanAccounts/accountGroup/export
  - name: loanAccounts/transactions/export
  - name: loanAccounts/transactions/print
  - name: cashPosition/summary/export
  - name: depositAccounts/cashPosition/transactions/export
  - name: depositAccounts/currentDay/transactions/export
  - name: depositAccounts/previousDay/transactions/export
  - name: creditCardAccounts/currentDay/transactions/export
  - name: creditCardAccounts/previousDay/accountGroup/export
  - name: creditCardAccounts/accountGroup/export
  - name: creditCardAccounts/previousDay/transactions/export
  - name: creditCardAccounts/transactions/export
  - name: depositAccounts/transactions/export
  - name: depositAccounts/previousDay/accountGroup/export
  - name: depositAccounts/accountGroup/export
  - name: balanceAndTransaction/summary/export
  - name: accountGroups
  - name: tieredLoanSubAccount/transactions/export
  - description: BTR Accounts Reporting
    name: balanceAndTransaction/combinedAccounts
  - description: Deposit Accounts Reporting rest service
    name: balanceAndTransaction
  - description: ACH Warehouse Inquiry rest service
    name: achWarehouseInquiry
  - description: Get Audit History for Specific Columns
    name: controlTotalAudit
  - description: ACH Control Maintenance rest service
    name: achControlTotalMaintenance
  - description: Payments service
    name: batchPayment
  - name: inquiry
  - description: ACH Authorization rest service
    name: payment/ACHAuthRules
  - description: Notification rest service
    name: notifications
  - description: SSO tpv field Values
    name: ssoFieldValues
  - description: Lockbox Availability
    name: lockboxAvailability
  - description: RDC Imaging rest service
    name: imaging/remoteDepositCapture
  - description: Token Management
    name: tokenManagement/user
  - description: Token Management
    name: tokenManagement
  - description: Live Application Maintenance rest service
    name: liveMaintenance
  - description: Table Maintenance rest service
    name: paymentTemplate
  - description: Provides access to Mobile Devices Push Notification Services
    name: pushNotificationService
  - description: Control Dist Rest Services
    name: controlDist
  - description: Table Maintenance Rest Service
    name: passwordRules
  - description: Table Maintenance Rest Service
    name: confidentialSettingsMaint
  - description: Get batch totals service
    name: batch/totals
  - description: Large batch service
    name: batch/largeBatch
  - name: payment
  - description: Table Maintenance Rest Service
    name: tableMaintenance
  - description: BAI export rest service
    name: baiExport
  - description: Lockbox rest service
    name: lockbox
  - description: Panel Maintenance rest service
    name: panelApprovalWorkflow
  - description: Panel Maintenance rest service
    name: panelmaint
  - description: Panel Maintenance rest service
    name: panelTemplateService
  - description: Image Search Returned Item Service
    name: imageSearchReturnedItem
  - description: Returned Item Service
    name: returnedItem
  - description: Image Search Check Paid Service
    name: imageSearchCheckPaid
  - description: Control Disbursement Service
    name: controlDisb
  - description: Check Paid Service
    name: checkPaid
  - description: Image Search Deposit Slip Service
    name: imageSearchDepositSlip
  - description: Deposit Slip Service
    name: depositSlip
  - description: User Centric Maintenance rest service
    name: users
  - description: Legacy reports rest service
    name: legacyReports
  - name: batch/passthru
  - description: role Maintenance rest service
    name: roleMaintenance
  - description: User Maintenance rest service
    name: userMaintenance
  - description: Payment Fraud Control Rest Service
    name: risk
  - description: Payment Fraud Control Rest Service
    name: cm
  - description: Payment Fraud Control Rest Service
    name: cminst
  - description: Opt-in/Opt-out Paperless eStatements rest service
    name: paperlessStatements
  - description: Bank Account Filters rest service
    name: bankAcctFilters
  - description: Alerts rest service
    name: alerts
  - name: loan
  - name: checkFreeSMBUsers
  - name: checkFreeSMBAccounts
  - name: checkFreeSMBSubscriber
  - name: checkFreeRXPAccounts
  - name: checkFreeRXPSubscriber
  - name: checkFreeSmallBusiness
  - name: checkFree
  - description: Rate service
    name: rate
  - description: Account Summary Widget rest services
    name: accountSummaryWidget
  - description: SMB Menu service
    name: smbMenu
  - description: User Login Inactivity related rest services
    name: securityChallengeQuestions
  - description: Forgotten Password rest service
    name: forgottenPassword
  - description: Bill Pay rest service
    name: payment/billPay
  - description: Beneficiary Address Book rest service
    name: beneAddressBook
  - description: File Import History rest service
    name: fileImportHistory
  - description: Templates rest service
    name: template
  - description: Request for Payment Rest Service
    name: requestForPayment
  - description: Request For Payment Template List View
    name: requestTemplate
  - name: girexport
  - name: paymentExport
  - description: Modify template via File import rest service
    name: modifyvfimport
  - description: Check file import rest service
    name: checkfimport
  - description: File import rest service
    name: fimport
  - description: Mobile rest service
    name: mobile
  - description: Multi-Factor Authentication Service for Login Page
    name: mfaService
  - description: analytics server related services
    name: analyticsServer
  - description: Session security rest services
    name: security
  - name: paymentAutomation
  - description: Export service
    name: export
  - description: 'REST layer Logging Service '
    name: loggerService
  - description: Feature Control Rest Service
    name: featureControl
  - description: Help Pages service
    name: help
  - description: Generic Reports
    name: genericReports
  - description: Dynamic Reports
    name: dynamicreports
  - description: Token Management
    name: tokenManagement/tokensAudit
  - description: Provides access to configuration parameters
    name: configurationParameter
  - description: Negotiates SSO session with third party vendor
    name: outboundSSO
  - description: ListView Filter service
    name: listViewFilter
  - description: Auditlog rest service
    name: audit
  - description: Dynamic Link Audit Service
    name: dynamicLinkAudit
  - description: Context Service
    name: context
  - description: Filter Profile Service
    name: profileService
  - description: Advance Filter service
    name: advanceFilter
  - description: Date service
    name: date
  - description: Workspace rest service
    name: workspaces
  - description: Jasper reports download service
    name: downloadReports
  - description: Legacy reports download service
    name: downloadLegacyReports
  - description: Jasper Reports REST service
    name: jasperReports
  - description: Reporting download service
    name: reportDownload
  - description: Reporting services supporting asynchronous execution of longer running reports
    name: reporting
  - description: Access and Entitlement Service
    name: accessService
  - description: Locale Rest Service
    name: localizationService
  - description: Menu service
    name: menu
  - description: User Self Service rest service
    name: userSelfService
  - description: FX Report Extracts
    name: fxexport
  - name: qexport
  - description: Manages service requests
    name: serviceRequest
  - description: Generic Table Maintenance rest service
    name: tableMaint
  - description: OAuth routes for Authentication to third party providers
    name: oauth
  - description: The cash flow forecasting endpoints
    name: cashflow
  - description: The REST endpoints for the cash flow forecasting scenarios
    name: cashflowScenario
  - description: REST endpoints for the cash flow forecasting lines
    name: cashflowLine
  - description: Endpoints for the BOS Account services
    name: bosAccount
  - description: Endpoints for the Account balances for BOS
    name: bosAccountBalances
  - description: Endpoints for the Cash Flow Categories
    name: cashflowCategory
  - description: Endpoints for Cash Flow Matching
    name: cashflowMatch
  - description: Endpoints for the Cash Flow Plan
    name: cashflowPlan
  - description: Endpoints for Bill Management
    name: bill
  - description: Endpoints for Invoicing
    name: invoice
  - description: Endpoints for Document Locations
    name: location
  - description: Endpoints for Document Departments
    name: department
